diff --git a/doc/sources/admin/idpopenidconnect.rst b/doc/sources/admin/idpopenidconnect.rst
index dc0bd98da..6bfca4dbc 100644
--- a/doc/sources/admin/idpopenidconnect.rst
+++ b/doc/sources/admin/idpopenidconnect.rst
@@ -278,6 +278,11 @@ Options
       the Session Browser.
    - **Allow OAuth2.0 Password Grant** (since version ``2.0.8``): Allow the use of the :ref:`Resource Owner Password Credentials Grant <resource-owner-password-grant>` by this client. This feature only works if you have configured a form-based authentication module.
    - **Allow OAuth2.0 Client Credentials Grant** (since version ``2.0.11``): Allow the use of the :ref:`Resource Owner Password Credentials Grant <client-credentials-grant>` by this client.
+   - **Allowed URLs for fetching Request Object**: (since version ``2.17.1``):
+     which URLs may be called by the portal to fetch the request object (see
+     `request_uri
+     <https://openid.net/specs/openid-connect-core-1_0.html#RequestUriParameter>`__
+     in OIDC specifications). These URLs may use wildcards (``https://app.example.com/*``).
    - **Authentication Level**: required authentication level to access this application
    - **Access Rule**: lets you specify a :doc:`Perl rule<rules_examples>` to restrict access to this client
 
diff --git a/doc/sources/admin/upgrade_2_0_x.rst b/doc/sources/admin/upgrade_2_0_x.rst
index 7132aa4f6..64dd2c4e3 100644
--- a/doc/sources/admin/upgrade_2_0_x.rst
+++ b/doc/sources/admin/upgrade_2_0_x.rst
@@ -26,6 +26,19 @@ Known regressions in the latest released version
 
 None
 
+2.16.1
+--------
+
+AuthBasic now enforces 2FA activation
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+In previous versions of LemonLDAP::NG, a 2FA protected account didn't need to use their second factor when authenticating to an :doc:`AuthBasic handler <authbasichandler>`.
+
+If you are *absolutely sure* that you want 2FA protected accounts to access AuthBasic handlers, which are password only, you can add the following test in your 2FA activation rules ::
++
++    and not $ENV{AuthBasic}
++
++
 2.0.11
 ------
 
diff --git a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Apache/Session/Store.pm b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Apache/Session/Store.pm
index 06ef10af8..7db56ca09 100644
--- a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Apache/Session/Store.pm
+++ b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Apache/Session/Store.pm
@@ -56,7 +56,7 @@ sub materialize {
 
     # Get session from cache
     my $id = $session->{data}->{_session_id};
-    if ( $self->cache->get($id) ) {
+    if ( !$self->{args}->{noCache} and $self->cache->get($id) ) {
         $session->{serialized} = $self->cache->get($id);
         return;
     }
diff --git a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/DefaultValues.pm b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/DefaultValues.pm
index 581102e8e..8a69a6f06 100644
--- a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/DefaultValues.pm
+++ b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/DefaultValues.pm
@@ -18,18 +18,18 @@ sub defaultValues {
         'authChoiceParam' => 'lmAuth',
         'authentication'  => 'Demo',
         'available2F'     => 'UTOTP,TOTP,U2F,REST,Mail2F,Ext2F,Yubikey,Radius',
-        'available2FSelfRegistration'        => 'TOTP,U2F,Yubikey',
-        'bruteForceProtectionLockTimes'      => '15, 30, 60, 300, 600',
-        'bruteForceProtectionMaxAge'         => 300,
-        'bruteForceProtectionMaxFailed'      => 3,
-        'bruteForceProtectionMaxLockTime'    => 900,
-        'bruteForceProtectionTempo'          => 30,
-        'captcha_mail_enabled'               => 1,
-        'captcha_register_enabled'           => 1,
-        'captcha_size'                       => 6,
-        'casAccessControlPolicy'             => 'none',
-        'casAuthnLevel'                      => 1,
-        'certificateResetByMailCeaAttribute' => 'description',
+        'available2FSelfRegistration'                => 'TOTP,U2F,Yubikey',
+        'bruteForceProtectionLockTimes'              => '15, 30, 60, 300, 600',
+        'bruteForceProtectionMaxAge'                 => 300,
+        'bruteForceProtectionMaxFailed'              => 3,
+        'bruteForceProtectionMaxLockTime'            => 900,
+        'bruteForceProtectionTempo'                  => 30,
+        'captcha_mail_enabled'                       => 1,
+        'captcha_register_enabled'                   => 1,
+        'captcha_size'                               => 6,
+        'casAccessControlPolicy'                     => 'none',
+        'casAuthnLevel'                              => 1,
+        'certificateResetByMailCeaAttribute'         => 'description',
         'certificateResetByMailCertificateAttribute' =>
           'userCertificate;binary',
         'certificateResetByMailURL' =>
@@ -94,7 +94,7 @@ sub defaultValues {
         'globalLogoutTimer'    => 1,
         'globalStorage'        => 'Apache::Session::File',
         'globalStorageOptions' => {
-            'Directory' => '/var/lib/lemonldap-ng/sessions/',
+            'Directory'      => '/var/lib/lemonldap-ng/sessions/',
             'generateModule' =>
               'Lemonldap::NG::Common::Apache::Session::Generate::SHA256',
             'LockDirectory' => '/var/lib/lemonldap-ng/sessions/lock/'
@@ -106,7 +106,7 @@ sub defaultValues {
         'handlerInternalCache'          => 15,
         'handlerServiceTokenTTL'        => 30,
         'hiddenAttributes'              => '_password _2fDevices',
-        'httpOnly'                      => 1,
+        'httpOnly'                      =>  1,
         'https'                         => -1,
         'impersonationHiddenAttributes' => '_2fDevices _loginHistory',
         'impersonationIdRule'           => 1,
@@ -167,24 +167,24 @@ sub defaultValues {
         'locationRules' => {
             'default' => 'deny'
         },
-        'logoutServices'         => {},
-        'macros'                 => {},
-        'mail2fActivation'       => 0,
-        'mail2fCodeRegex'        => '\\d{6}',
-        'mailCharset'            => 'utf-8',
-        'mailFrom'               => 'noreply@example.com',
-        'mailSessionKey'         => 'mail',
-        'mailTimeout'            => 0,
-        'mailUrl'                => 'http://auth.example.com/resetpwd',
-        'managerDn'              => '',
-        'managerPassword'        => '',
-        'max2FDevices'           => 10,
-        'max2FDevicesNameLength' => 20,
-        'multiValuesSeparator'   => '; ',
+        'logoutServices'            => {},
+        'macros'                    => {},
+        'mail2fActivation'          => 0,
+        'mail2fCodeRegex'           => '\\d{6}',
+        'mailCharset'               => 'utf-8',
+        'mailFrom'                  => 'noreply@example.com',
+        'mailSessionKey'            => 'mail',
+        'mailTimeout'               => 0,
+        'mailUrl'                   => 'http://auth.example.com/resetpwd',
+        'managerDn'                 => '',
+        'managerPassword'           => '',
+        'max2FDevices'              => 10,
+        'max2FDevicesNameLength'    => 20,
+        'multiValuesSeparator'      => '; ',
         'mySessionAuthorizedRWKeys' =>
           [ '_appsListOrder', '_oidcConnectedRP', '_oidcConsents' ],
-        'notificationDefaultCond' => '',
-        'notificationServerPOST'  => 1,
+        'notificationDefaultCond'          => '',
+        'notificationServerPOST'           => 1,
         'notificationServerSentAttributes' =>
           'uid reference date title subtitle text check',
         'notificationsMaxRetrieve'   => 3,
@@ -239,7 +239,7 @@ sub defaultValues {
         'passwordPolicyMinUpper'              => 0,
         'passwordPolicySpecialChar'           => '__ALL__',
         'passwordResetAllowedRetries'         => 3,
-        'persistentSessionAttributes' =>
+        'persistentSessionAttributes'         =>
           '_loginHistory _2fDevices notification_',
         'port'                          => -1,
         'portal'                        => 'http://auth.example.com/',
@@ -250,7 +250,7 @@ sub defaultValues {
         'portalDisplayGeneratePassword' => 1,
         'portalDisplayLoginHistory'     => 1,
         'portalDisplayLogout'           => 1,
-        'portalDisplayOidcConsents' =>
+        'portalDisplayOidcConsents'     =>
           '$_oidcConsents && $_oidcConsents =~ /\\w+/',
         'portalDisplayRefreshMyRights' => 1,
         'portalDisplayRegister'        => 1,
@@ -277,11 +277,11 @@ sub defaultValues {
               'http://auth.example.com/Lemonldap/NG/Common/PSGI/SOAPService',
             'proxy' => 'http://auth.example.com/sessions'
         },
-        'requireToken'       => 1,
-        'rest2fActivation'   => 0,
-        'restAuthnLevel'     => 2,
-        'restClockTolerance' => 15,
-        'sameSite'           => '',
+        'requireToken'                                         => 1,
+        'rest2fActivation'                                     => 0,
+        'restAuthnLevel'                                       => 2,
+        'restClockTolerance'                                   => 15,
+        'sameSite'                                             => '',
         'samlAttributeAuthorityDescriptorAttributeServiceSOAP' =>
           'urn:oasis:names:tc:SAML:2.0:bindings:SOAP;#PORTAL#/saml/AA/SOAP;',
         'samlAuthnContextMapKerberos'                   => 4,
@@ -321,7 +321,7 @@ sub defaultValues {
 '1;0;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact;#PORTAL#/saml/proxySingleSignOnArtifact',
         'samlSPSSODescriptorAssertionConsumerServiceHTTPPost' =>
 '0;1;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST;#PORTAL#/saml/proxySingleSignOnPost',
-        'samlSPSSODescriptorAuthnRequestsSigned' => 1,
+        'samlSPSSODescriptorAuthnRequestsSigned'         => 1,
         'samlSPSSODescriptorSingleLogoutServiceHTTPPost' =>
 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST;#PORTAL#/saml/proxySingleLogout;#PORTAL#/saml/proxySingleLogoutReturn',
         'samlSPSSODescriptorSingleLogoutServiceHTTPRedirect' =>
@@ -333,7 +333,7 @@ sub defaultValues {
         'sfEngine'                                => '::2F::Engines::Default',
         'sfManagerRule'                           => 1,
         'sfRemovedMsgRule'                        => 0,
-        'sfRemovedNotifMsg' =>
+        'sfRemovedNotifMsg'                       =>
           '_removedSF_ expired second factor(s) has/have been removed!',
         'sfRemovedNotifRef'       => 'RemoveSF',
         'sfRemovedNotifTitle'     => 'Second factor notification',
diff --git a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/ReConstants.pm b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/ReConstants.pm
index 98e48128b..c1894b36b 100644
--- a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/ReConstants.pm
+++ b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Conf/ReConstants.pm
@@ -27,7 +27,7 @@ our $specialNodeKeys = '(?:(?:(?:saml(?:ID|S)|oidc[OR])P|cas(?:App|Srv))MetaData
 our $casAppMetaDataNodeKeys = 'casAppMetaData(?:Options(?:(?:UserAttribut|Servic|Rul)e|AuthnLevel)|(?:ExportedVar|Macro)s)';
 our $casSrvMetaDataNodeKeys = 'casSrvMetaData(?:Options(?:ProxiedServices|DisplayName|SortNumber|Gateway|Renew|Icon|Url)|ExportedVars)';
 our $oidcOPMetaDataNodeKeys = 'oidcOPMetaData(?:Options(?:C(?:lient(?:Secret|ID)|heckJWTSignature|onfigurationURI)|S(?:toreIDToken|ortNumber|cope)|TokenEndpointAuthMethod|(?:JWKSTimeou|Promp)t|I(?:DTokenMaxAge|con)|U(?:iLocales|seNonce)|Display(?:Name)?|AcrValues|MaxAge)|ExportedVars|J(?:SON|WKS))';
-our $oidcRPMetaDataNodeKeys = 'oidcRPMetaData(?:Options(?:A(?:llow(?:(?:ClientCredentials|Password)Grant|Offline)|uth(?:orizationCodeExpiration|nLevel)|ccessTokenExpiration|dditionalAudiences)|I(?:DToken(?:ForceClaims|Expiration|SignAlg)|con)|R(?:e(?:directUris|freshToken|quirePKCE)|ule)|Logout(?:SessionRequired|Type|Url)|P(?:ostLogoutRedirectUris|ublic)|OfflineSessionExpiration|Client(?:Secret|ID)|BypassConsent|DisplayName|ExtraClaims|UserIDAttr)|(?:ExportedVar|Macro)s)';
+our $oidcRPMetaDataNodeKeys = 'oidcRPMetaData(?:Options(?:A(?:llow(?:(?:ClientCredentials|Password)Grant|Offline)|uth(?:orizationCodeExpiration|nLevel)|ccessTokenExpiration|dditionalAudiences)|R(?:e(?:qu(?:estUris|irePKCE)|directUris|freshToken)|ule)|I(?:DToken(?:ForceClaims|Expiration|SignAlg)|con)|Logout(?:SessionRequired|Type|Url)|P(?:ostLogoutRedirectUris|ublic)|OfflineSessionExpiration|Client(?:Secret|ID)|BypassConsent|DisplayName|ExtraClaims|UserIDAttr)|(?:ExportedVar|Macro)s)';
 our $samlIDPMetaDataNodeKeys = 'samlIDPMetaData(?:Options(?:(?:Check(?:S[LS]OMessageSignatur|Audienc|Tim)|EncryptionMod|UserAttribut|DisplayNam)e|S(?:ign(?:S[LS]OMessage|atureMethod)|toreSAMLToken|[LS]OBinding|ortNumber)|A(?:llow(?:LoginFromIDP|ProxiedAuthn)|daptSessionUtime)|Re(?:questedAuthnContext|solutionRule|layStateURL)|Force(?:Authn|UTF8)|I(?:sPassive|con)|NameIDFormat)|ExportedAttributes|XML)';
 our $samlSPMetaDataNodeKeys = 'samlSPMetaData(?:Options(?:S(?:ign(?:S[LS]OMessage|atureMethod)|essionNotOnOrAfterTimeout)|N(?:ameID(?:SessionKey|Format)|otOnOrAfterTimeout)|(?:CheckS[LS]OMessageSignatur|OneTimeUs|Rul)e|En(?:ableIDPInitiatedURL|cryptionMode)|AuthnLevel|ForceUTF8)|(?:ExportedAttribute|Macro)s|XML)';
 our $virtualHostKeys = '(?:vhost(?:A(?:ccessToTrace|uthnLevel|liases)|(?:Maintenanc|Typ)e|ServiceTokenTTL|Https|Port)|(?:exportedHeader|locationRule)s|post)';
diff --git a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Session.pm b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Session.pm
index 83896b6ea..031673c4f 100644
--- a/lemonldap-ng-common/lib/Lemonldap/NG/Common/Session.pm
+++ b/lemonldap-ng-common/lib/Lemonldap/NG/Common/Session.pm
@@ -213,7 +213,8 @@ sub update {
         return 0;
     }
 
-    my $data = $self->_tie_session($tieOptions);
+    my $data = $self->_tie_session(
+        { ( $tieOptions ? %$tieOptions : () ), noCache => 1 } );
 
     if ($data) {
         foreach ( keys %$infos ) {
diff --git a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/ApacheMP2/Main.pm b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/ApacheMP2/Main.pm
index 25125fc96..ac968cf86 100644
--- a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/ApacheMP2/Main.pm
+++ b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/ApacheMP2/Main.pm
@@ -16,6 +16,7 @@ use Apache2::Filter;
 use APR::Table;
 use Apache2::Const -compile =>
   qw(FORBIDDEN HTTP_UNAUTHORIZED REDIRECT OK DECLINED DONE SERVER_ERROR AUTH_REQUIRED HTTP_SERVICE_UNAVAILABLE);
+use URI;
 use base 'Lemonldap::NG::Handler::Main';
 
 use constant FORBIDDEN         => Apache2::Const::FORBIDDEN;
@@ -166,7 +167,7 @@ sub redirectFilter {
         $f->r->status( $class->REDIRECT );
         $f->r->status_line("303 See Other");
         $f->r->headers_out->unset('Location');
-        $f->r->err_headers_out->set( 'Location' => $url );
+        $f->r->err_headers_out->set( 'Location' => URI->new($url)->as_string );
         $f->ctx(1);
     }
     while ( $f->read( my $buffer, 1024 ) ) {
diff --git a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/AuthBasic.pm b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/AuthBasic.pm
index c2b9b6eda..3999d8db6 100644
--- a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/AuthBasic.pm
+++ b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/AuthBasic.pm
@@ -28,9 +28,8 @@ sub fetchId {
     my ( $class, $req ) = @_;
     if ( my $creds = $req->env->{'HTTP_AUTHORIZATION'} ) {
         $creds =~ s/^Basic\s+//;
-        my @date = localtime;
-        my $day  = $date[5] * 366 + $date[7];
-        return Digest::SHA::sha256_hex( $creds . $day );
+        my $pepper = int( time / $class->tsv->{timeout} ) . $class->tsv->{keyH};
+        return sha256_hex( $creds . $pepper );
     }
     else {
         return 0;
diff --git a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/OAuth2.pm b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/OAuth2.pm
index af7afbf53..57625187e 100644
--- a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/OAuth2.pm
+++ b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Lib/OAuth2.pm
@@ -10,16 +10,17 @@ sub retrieveSession {
 
     # Retrieve regular session if this is not an offline access token
     unless ($offlineId) {
-        my $data = {
-            %{
-                $class->Lemonldap::NG::Handler::Main::retrieveSession( $req,
-                    $id )
-            },
-            $class->_getTokenAttributes($req)
-        };
-
-        # Update cache
-        $class->data($data);
+        my $data =
+          $class->Lemonldap::NG::Handler::Main::retrieveSession( $req, $id );
+        if ( ref($data) eq "HASH" ) {
+            $data = { %{$data}, $class->_getTokenAttributes($req) };
+
+            # Update cache
+            $class->data($data);
+        }
+        else {
+            $req->data->{oauth2_error} = 'invalid_token';
+        }
         return $data;
     }
 
@@ -87,6 +88,10 @@ sub fetchId {
 
     # Get access token session
     my $infos = $class->getOIDCInfos($access_token);
+    unless ($infos) {
+        $req->data->{oauth2_error} = 'invalid_token';
+        return;
+    }
 
     # Store scope and rpid for future session attributes
     if ( $infos->{rp} ) {
@@ -141,6 +146,20 @@ sub getOIDCInfos {
     unless ( $oidcSession->error ) {
         $class->logger->debug("Get OIDC session $id");
 
+        # Verify that session is valid
+        unless ( $oidcSession->data->{_utime} ) {
+            $class->logger->error("_utime missing from Access Token session");
+            return;
+        }
+
+        my $ttl = $class->tsv->{timeout} - time + $oidcSession->data->{_utime};
+        $class->logger->debug( "Session TTL = " . $ttl );
+
+        if ( time - $oidcSession->data->{_utime} > $class->tsv->{timeout} ) {
+            $class->logger->info("Access Token session $id expired");
+            return;
+        }
+
         $infos = { %{ $oidcSession->data } };
     }
     else {
diff --git a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Reload.pm b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Reload.pm
index 81547e7da..74ee93300 100644
--- a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Reload.pm
+++ b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Reload.pm
@@ -5,6 +5,7 @@ our $VERSION = '2.0.10';
 package Lemonldap::NG::Handler::Main;
 
 use strict;
+use Digest::SHA qw(sha256_hex);
 use Lemonldap::NG::Common::Conf::Constants;    #inherits
 use Lemonldap::NG::Common::Crypto;
 use Lemonldap::NG::Common::Safelib;            #link protected safe Safe object
@@ -208,6 +209,7 @@ sub defaultValuesInit {
     );
 
     $class->tsv->{cipher} = Lemonldap::NG::Common::Crypto->new( $conf->{key} );
+    $class->tsv->{keyH}   = sha256_hex( $conf->{key} );
 
     foreach my $opt (qw(https port maintenance)) {
 
diff --git a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Run.pm b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Run.pm
index d7e7b7e49..e1e2fd2d8 100644
--- a/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Run.pm
+++ b/lemonldap-ng-handler/lib/Lemonldap/NG/Handler/Main/Run.pm
@@ -9,6 +9,7 @@ use strict;
 
 #use AutoLoader 'AUTOLOAD';
 use MIME::Base64;
+use URI;
 use URI::Escape;
 use Lemonldap::NG::Common::Session;
 
@@ -139,7 +140,9 @@ sub run {
     }
 
     # Try to recover cookie and user session
-    if (    $id = $class->fetchId($req)
+    $id = $class->fetchId($req);
+    $class->data( {} ) unless($id);
+    if (    $id
         and $session = $class->retrieveSession( $req, $id ) )
     {
 
@@ -695,7 +698,7 @@ sub _buildUrl {
     ) ? '' : ":$portString";
     my $url = "http" . ( $_https ? "s" : "" ) . "://$realvhost$portString$s";
     $class->logger->debug("Build URL $url");
-    return $url;
+    return URI->new($url)->as_string;
 }
 
 ## @rmethod protected int isUnprotected()
diff --git a/lemonldap-ng-handler/t/60-Lemonldap-NG-Handler-PSGI.t b/lemonldap-ng-handler/t/60-Lemonldap-NG-Handler-PSGI.t
index 08e598839..cea6fe850 100644
--- a/lemonldap-ng-handler/t/60-Lemonldap-NG-Handler-PSGI.t
+++ b/lemonldap-ng-handler/t/60-Lemonldap-NG-Handler-PSGI.t
@@ -234,7 +234,7 @@ ok(
       $client->_get( '/', undef, 'foo.example.fr', "lemonldap=$sessionId" ),
     'Reject "foo.example.fr"'
 );
-ok( $res->[0] == 302, ' Code is 302' ) or explain( $res, 302 );
+ok( $res->[0] == 403, ' Code is 403' ) or explain( $res, 403 );
 count(2);
 
 ok(
@@ -243,7 +243,7 @@ ok(
     ),
     'Reject "foo.example.org/orgdeny"'
 );
-ok( $res->[0] == 302, ' Code is 302' ) or explain( $res, 302 );
+ok( $res->[0] == 403, ' Code is 403' ) or explain( $res, 403 );
 count(2);
 
 ok(
@@ -261,7 +261,7 @@ ok(
     ),
     'Reject "abfoo.example.org/orgdeny"'
 );
-ok( $res->[0] == 302, ' Code is 302' ) or explain( $res, 302 );
+ok( $res->[0] == 403, ' Code is 403' ) or explain( $res, 403 );
 count(2);
 
 ok(
@@ -287,7 +287,7 @@ ok(
       $client->_get( '/', undef, 'abfoo.example.org', "lemonldap=$sessionId" ),
     'Reject "abfoo.example.org/"'
 );
-ok( $res->[0] == 302, ' Code is 302' ) or explain( $res, 302 );
+ok( $res->[0] == 403, ' Code is 403' ) or explain( $res, 403 );
 count(2);
 
 ok(
diff --git a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Attributes.pm b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Attributes.pm
index ef700c98c..f2669f37e 100644
--- a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Attributes.pm
+++ b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Attributes.pm
@@ -67,7 +67,7 @@ sub types {
         'hostname' => {
             'form'    => 'text',
             'msgFail' => '__badHostname__',
-            'test' =>
+            'test'    =>
 qr/^(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))?$/
         },
         'int' => {
@@ -257,7 +257,7 @@ m[^(?:(?:\-+\s*BEGIN\s+(?:PUBLIC\s+KEY|CERTIFICATE)\s*\-+\r?\n)?[a-zA-Z0-9/\+\r\
         'url' => {
             'form'    => 'text',
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:^$|(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?))/
         }
     };
@@ -801,7 +801,7 @@ sub attributes {
         },
         'casSrvMetaDataOptionsUrl' => {
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?)/,
             'type' => 'text'
         },
@@ -1286,7 +1286,7 @@ qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.]
         'domain' => {
             'default' => 'example.com',
             'msgFail' => '__badDomainName__',
-            'test' =>
+            'test'    =>
 qr/^(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?))?$/,
             'type' => 'text'
         },
@@ -1429,7 +1429,7 @@ qr/^(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-
         },
         'globalStorageOptions' => {
             'default' => {
-                'Directory' => '/var/lib/lemonldap-ng/sessions/',
+                'Directory'      => '/var/lib/lemonldap-ng/sessions/',
                 'generateModule' =>
                   'Lemonldap::NG::Common::Apache::Session::Generate::SHA256',
                 'LockDirectory' => '/var/lib/lemonldap-ng/sessions/lock/'
@@ -1554,7 +1554,7 @@ qr/^(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-
         'issuerDBGetParameters' => {
             'default'    => {},
             'keyMsgFail' => '__badHostname__',
-            'keyTest' =>
+            'keyTest'    =>
 qr/^(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)$/,
             'test' => {
                 'keyMsgFail' => '__badKeyName__',
@@ -2371,6 +2371,9 @@ m[^(?:ldapi://[^/]*/?|\w[\w\-\.]*(?::\d{1,5})?|ldap(?:s|\+tls)?://\w[\w\-\.]*(?:
             'default' => 0,
             'type'    => 'bool'
         },
+        'oidcRPMetaDataOptionsRequestUris' => {
+            'type' => 'text'
+        },
         'oidcRPMetaDataOptionsRequirePKCE' => {
             'default' => 0,
             'type'    => 'bool'
@@ -2645,7 +2648,7 @@ m[^(?:ldapi://[^/]*/?|\w[\w\-\.]*(?::\d{1,5})?|ldap(?:s|\+tls)?://\w[\w\-\.]*(?:
         'pdataDomain' => {
             'default' => '',
             'msgFail' => '__badDomainName__',
-            'test' =>
+            'test'    =>
 qr/^(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?))?$/,
             'type' => 'text'
         },
@@ -2666,7 +2669,7 @@ qr/^(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-
         'portal' => {
             'default' => 'http://auth.example.com/',
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?)/,
             'type' => 'url'
         },
@@ -2947,7 +2950,7 @@ qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.]
             'keyTest' =>
 qr/^(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+))(?::\d+)?$/,
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?)/,
             'type' => 'keyTextContainer'
         },
@@ -3097,19 +3100,19 @@ qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.]
         },
         'samlCommonDomainCookieDomain' => {
             'msgFail' => '__badDomainName__',
-            'test' =>
+            'test'    =>
 qr/^(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)$/,
             'type' => 'text'
         },
         'samlCommonDomainCookieReader' => {
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?)/,
             'type' => 'text'
         },
         'samlCommonDomainCookieWriter' => {
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?)/,
             'type' => 'text'
         },
@@ -3126,7 +3129,7 @@ qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.]
         },
         'samlDiscoveryProtocolURL' => {
             'msgFail' => '__badUrl__',
-            'test' =>
+            'test'    =>
 qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+)))(?::(?:(?:[0-9]*)))?(?:\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*)(?:\/(?:(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)(?:;(?:(?:[a-zA-Z0-9\-_.!~*'():@&=+\$,]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*))*))*))(?:[?](?:(?:(?:[;\/?:@&=+\$,a-zA-Z0-9\-_.!~*'()]+|(?:%[a-fA-F0-9][a-fA-F0-9]))*)))?))?)/,
             'type' => 'text'
         },
@@ -3916,7 +3919,7 @@ qr/(?:(?:https?):\/\/(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.]
         },
         'SMTPServer' => {
             'default' => '',
-            'test' =>
+            'test'    =>
 qr/^(?:(?:(?:(?:(?:(?:[a-zA-Z0-9][-a-zA-Z0-9]*)?[a-zA-Z0-9])[.])*(?:[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]|[a-zA-Z])[.]?)|(?:[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+))(?::\d+)?)?$/,
             'type' => 'text'
         },
diff --git a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/Attributes.pm b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/Attributes.pm
index 51db78711..de7d24629 100644
--- a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/Attributes.pm
+++ b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/Attributes.pm
@@ -4202,6 +4202,7 @@ m{^(?:ldapi://[^/]*/?|\w[\w\-\.]*(?::\d{1,5})?|ldap(?:s|\+tls)?://\w[\w\-\.]*(?:
         oidcRPMetaDataOptionsAuthorizationCodeExpiration => { type => 'int' },
         oidcRPMetaDataOptionsOfflineSessionExpiration    => { type => 'int' },
         oidcRPMetaDataOptionsRedirectUris                => { type => 'text', },
+        oidcRPMetaDataOptionsRequestUris                 => { type => 'text', },
         oidcRPMetaDataOptionsExtraClaims                 => {
             type    => 'keyTextContainer',
             keyTest => qr/^[\x21\x23-\x5B\x5D-\x7E]+$/,
diff --git a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/CTrees.pm b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/CTrees.pm
index ee9d5c9b7..e8a065ef3 100644
--- a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/CTrees.pm
+++ b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Build/CTrees.pm
@@ -225,6 +225,7 @@ sub cTrees {
                             'oidcRPMetaDataOptionsAllowOffline',
                             'oidcRPMetaDataOptionsAllowPasswordGrant',
                             'oidcRPMetaDataOptionsAllowClientCredentialsGrant',
+                            'oidcRPMetaDataOptionsRequestUris',
                             'oidcRPMetaDataOptionsAuthnLevel',
                             'oidcRPMetaDataOptionsRule',
                         ]
diff --git a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Conf.pm b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Conf.pm
index d9c42bf69..9acd6655f 100644
--- a/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Conf.pm
+++ b/lemonldap-ng-manager/lib/Lemonldap/NG/Manager/Conf.pm
@@ -212,7 +212,12 @@ sub _generateX509 {
     my $strCert = Net::SSLeay::PEM_get_string_X509($cert);
     my $strPrivate;
     if ($password) {
-        $strPrivate = Net::SSLeay::PEM_get_string_PrivateKey( $key, $password );
+        my $alg = eval {
+                 Net::SSLeay::EVP_get_cipherbyname('AES-256-CBC')
+              || Net::SSLeay::EVP_get_cipherbyname('DES-EDE3-CBC');
+        };
+        $strPrivate =
+          Net::SSLeay::PEM_get_string_PrivateKey( $key, $password, $alg );
     }
     else {
         $strPrivate = Net::SSLeay::PEM_get_string_PrivateKey($key);
diff --git a/lemonldap-ng-manager/site/htdocs/static/js/conftree.js b/lemonldap-ng-manager/site/htdocs/static/js/conftree.js
index 650eaff04..b9d973dda 100644
--- a/lemonldap-ng-manager/site/htdocs/static/js/conftree.js
+++ b/lemonldap-ng-manager/site/htdocs/static/js/conftree.js
@@ -560,6 +560,11 @@ function templates(tpl,key) {
                   "title" : "oidcRPMetaDataOptionsAllowClientCredentialsGrant",
                   "type" : "bool"
                },
+               {
+                  "get" : tpl+"s/"+key+"/"+"oidcRPMetaDataOptionsRequestUris",
+                  "id" : tpl+"s/"+key+"/"+"oidcRPMetaDataOptionsRequestUris",
+                  "title" : "oidcRPMetaDataOptionsRequestUris"
+               },
                {
                   "get" : tpl+"s/"+key+"/"+"oidcRPMetaDataOptionsAuthnLevel",
                   "id" : tpl+"s/"+key+"/"+"oidcRPMetaDataOptionsAuthnLevel",
diff --git a/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js b/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js
index fba697f09..1aa6c9c4b 100644
--- a/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js
+++ b/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js
@@ -1 +1 @@
-function templates(t,a){switch(t){case"casAppMetaDataNode":return[{cnodes:t+"s/"+a+"/casAppMetaDataExportedVars",default:[{data:"cn",id:t+"s/"+a+"/casAppMetaDataExportedVars/cn",title:"cn",type:"keyText"},{data:"mail",id:t+"s/"+a+"/casAppMetaDataExportedVars/mail",title:"mail",type:"keyText"},{data:"uid",id:t+"s/"+a+"/casAppMetaDataExportedVars/uid",title:"uid",type:"keyText"}],id:t+"s/"+a+"/casAppMetaDataExportedVars",title:"casAppMetaDataExportedVars",type:"keyTextContainer"},{_nodes:[{get:t+"s/"+a+"/casAppMetaDataOptionsService",id:t+"s/"+a+"/casAppMetaDataOptionsService",title:"casAppMetaDataOptionsService"},{get:t+"s/"+a+"/casAppMetaDataOptionsUserAttribute",id:t+"s/"+a+"/casAppMetaDataOptionsUserAttribute",title:"casAppMetaDataOptionsUserAttribute"},{get:t+"s/"+a+"/casAppMetaDataOptionsAuthnLevel",id:t+"s/"+a+"/casAppMetaDataOptionsAuthnLevel",title:"casAppMetaDataOptionsAuthnLevel",type:"int"},{get:t+"s/"+a+"/casAppMetaDataOptionsRule",id:t+"s/"+a+"/casAppMetaDataOptionsRule",title:"casAppMetaDataOptionsRule"}],id:"casAppMetaDataOptions",title:"casAppMetaDataOptions",type:"simpleInputContainer"},{cnodes:t+"s/"+a+"/casAppMetaDataMacros",default:[],help:"exportedvars.html#extend-variables-using-macros-and-groups",id:t+"s/"+a+"/casAppMetaDataMacros",title:"casAppMetaDataMacros",type:"keyTextContainer"}];case"casSrvMetaDataNode":return[{cnodes:t+"s/"+a+"/casSrvMetaDataExportedVars",default:[{data:"cn",id:t+"s/"+a+"/casSrvMetaDataExportedVars/cn",title:"cn",type:"keyText"},{data:"mail",id:t+"s/"+a+"/casSrvMetaDataExportedVars/mail",title:"mail",type:"keyText"},{data:"uid",id:t+"s/"+a+"/casSrvMetaDataExportedVars/uid",title:"uid",type:"keyText"}],id:t+"s/"+a+"/casSrvMetaDataExportedVars",title:"casSrvMetaDataExportedVars",type:"keyTextContainer"},{cnodes:t+"s/"+a+"/casSrvMetaDataOptionsProxiedServices",id:t+"s/"+a+"/casSrvMetaDataOptionsProxiedServices",title:"casSrvMetaDataOptionsProxiedServices",type:"keyTextContainer"},{_nodes:[{get:t+"s/"+a+"/casSrvMetaDataOptionsUrl",id:t+"s/"+a+"/casSrvMetaDataOptionsUrl",title:"casSrvMetaDataOptionsUrl"},{default:0,get:t+"s/"+a+"/casSrvMetaDataOptionsRenew",id:t+"s/"+a+"/casSrvMetaDataOptionsRenew",title:"casSrvMetaDataOptionsRenew",type:"bool"},{default:0,get:t+"s/"+a+"/casSrvMetaDataOptionsGateway",id:t+"s/"+a+"/casSrvMetaDataOptionsGateway",title:"casSrvMetaDataOptionsGateway",type:"bool"}],id:"casSrvMetaDataOptions",title:"casSrvMetaDataOptions",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/casSrvMetaDataOptionsDisplayName",id:t+"s/"+a+"/casSrvMetaDataOptionsDisplayName",title:"casSrvMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/casSrvMetaDataOptionsIcon",id:t+"s/"+a+"/casSrvMetaDataOptionsIcon",title:"casSrvMetaDataOptionsIcon"},{get:t+"s/"+a+"/casSrvMetaDataOptionsSortNumber",id:t+"s/"+a+"/casSrvMetaDataOptionsSortNumber",title:"casSrvMetaDataOptionsSortNumber",type:"int"}],id:"casSrvMetaDataOptionsDisplay",title:"casSrvMetaDataOptionsDisplay",type:"simpleInputContainer"}];case"oidcOPMetaDataNode":return[{get:t+"s/"+a+"/oidcOPMetaDataJSON",id:t+"s/"+a+"/oidcOPMetaDataJSON",title:"oidcOPMetaDataJSON",type:"file"},{get:t+"s/"+a+"/oidcOPMetaDataJWKS",id:t+"s/"+a+"/oidcOPMetaDataJWKS",title:"oidcOPMetaDataJWKS",type:"file"},{cnodes:t+"s/"+a+"/oidcOPMetaDataExportedVars",default:[{data:"name",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/cn",title:"cn",type:"keyText"},{data:"email",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/mail",title:"mail",type:"keyText"},{data:"family_name",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/sn",title:"sn",type:"keyText"},{data:"sub",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/uid",title:"uid",type:"keyText"}],id:t+"s/"+a+"/oidcOPMetaDataExportedVars",title:"oidcOPMetaDataExportedVars",type:"keyTextContainer"},{_nodes:[{_nodes:[{get:t+"s/"+a+"/oidcOPMetaDataOptionsConfigurationURI",id:t+"s/"+a+"/oidcOPMetaDataOptionsConfigurationURI",title:"oidcOPMetaDataOptionsConfigurationURI"},{default:0,get:t+"s/"+a+"/oidcOPMetaDataOptionsJWKSTimeout",id:t+"s/"+a+"/oidcOPMetaDataOptionsJWKSTimeout",title:"oidcOPMetaDataOptionsJWKSTimeout",type:"int"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsClientID",id:t+"s/"+a+"/oidcOPMetaDataOptionsClientID",title:"oidcOPMetaDataOptionsClientID"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsClientSecret",id:t+"s/"+a+"/oidcOPMetaDataOptionsClientSecret",title:"oidcOPMetaDataOptionsClientSecret",type:"password"},{default:0,get:t+"s/"+a+"/oidcOPMetaDataOptionsStoreIDToken",id:t+"s/"+a+"/oidcOPMetaDataOptionsStoreIDToken",title:"oidcOPMetaDataOptionsStoreIDToken",type:"bool"}],id:"oidcOPMetaDataOptionsConfiguration",title:"oidcOPMetaDataOptionsConfiguration",type:"simpleInputContainer"},{_nodes:[{default:"openid profile",get:t+"s/"+a+"/oidcOPMetaDataOptionsScope",id:t+"s/"+a+"/oidcOPMetaDataOptionsScope",title:"oidcOPMetaDataOptionsScope"},{default:"",get:t+"s/"+a+"/oidcOPMetaDataOptionsDisplay",id:t+"s/"+a+"/oidcOPMetaDataOptionsDisplay",select:[{k:"",v:""},{k:"page",v:"page"},{k:"popup",v:"popup"},{k:"touch",v:"touch"},{k:"wap",v:"wap"}],title:"oidcOPMetaDataOptionsDisplay",type:"select"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsPrompt",id:t+"s/"+a+"/oidcOPMetaDataOptionsPrompt",title:"oidcOPMetaDataOptionsPrompt"},{default:0,get:t+"s/"+a+"/oidcOPMetaDataOptionsMaxAge",id:t+"s/"+a+"/oidcOPMetaDataOptionsMaxAge",title:"oidcOPMetaDataOptionsMaxAge",type:"int"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsUiLocales",id:t+"s/"+a+"/oidcOPMetaDataOptionsUiLocales",title:"oidcOPMetaDataOptionsUiLocales"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsAcrValues",id:t+"s/"+a+"/oidcOPMetaDataOptionsAcrValues",title:"oidcOPMetaDataOptionsAcrValues"},{default:"client_secret_post",get:t+"s/"+a+"/oidcOPMetaDataOptionsTokenEndpointAuthMethod",id:t+"s/"+a+"/oidcOPMetaDataOptionsTokenEndpointAuthMethod",select:[{k:"client_secret_post",v:"client_secret_post"},{k:"client_secret_basic",v:"client_secret_basic"}],title:"oidcOPMetaDataOptionsTokenEndpointAuthMethod",type:"select"},{default:1,get:t+"s/"+a+"/oidcOPMetaDataOptionsCheckJWTSignature",id:t+"s/"+a+"/oidcOPMetaDataOptionsCheckJWTSignature",title:"oidcOPMetaDataOptionsCheckJWTSignature",type:"bool"},{default:30,get:t+"s/"+a+"/oidcOPMetaDataOptionsIDTokenMaxAge",id:t+"s/"+a+"/oidcOPMetaDataOptionsIDTokenMaxAge",title:"oidcOPMetaDataOptionsIDTokenMaxAge",type:"int"},{default:1,get:t+"s/"+a+"/oidcOPMetaDataOptionsUseNonce",id:t+"s/"+a+"/oidcOPMetaDataOptionsUseNonce",title:"oidcOPMetaDataOptionsUseNonce",type:"bool"}],id:"oidcOPMetaDataOptionsProtocol",title:"oidcOPMetaDataOptionsProtocol",type:"simpleInputContainer"}],id:"oidcOPMetaDataOptions",title:"oidcOPMetaDataOptions"},{_nodes:[{get:t+"s/"+a+"/oidcOPMetaDataOptionsDisplayName",id:t+"s/"+a+"/oidcOPMetaDataOptionsDisplayName",title:"oidcOPMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsIcon",id:t+"s/"+a+"/oidcOPMetaDataOptionsIcon",title:"oidcOPMetaDataOptionsIcon"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsSortNumber",id:t+"s/"+a+"/oidcOPMetaDataOptionsSortNumber",title:"oidcOPMetaDataOptionsSortNumber",type:"int"}],id:"oidcOPMetaDataOptionsDisplayParams",title:"oidcOPMetaDataOptionsDisplayParams",type:"simpleInputContainer"}];case"oidcRPMetaDataNode":return[{cnodes:t+"s/"+a+"/oidcRPMetaDataExportedVars",default:[{data:["mail","string","auto"],id:t+"s/"+a+"/oidcRPMetaDataExportedVars/email",title:"email",type:"oidcAttribute"},{data:["sn","string","auto"],id:t+"s/"+a+"/oidcRPMetaDataExportedVars/family_name",title:"family_name",type:"oidcAttribute"},{data:["cn","string","auto"],id:t+"s/"+a+"/oidcRPMetaDataExportedVars/name",title:"name",type:"oidcAttribute"}],id:t+"s/"+a+"/oidcRPMetaDataExportedVars",title:"oidcRPMetaDataExportedVars",type:"oidcAttributeContainer"},{cnodes:t+"s/"+a+"/oidcRPMetaDataOptionsExtraClaims",default:[],id:t+"s/"+a+"/oidcRPMetaDataOptionsExtraClaims",title:"oidcRPMetaDataOptionsExtraClaims",type:"keyTextContainer"},{_nodes:[{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsClientID",id:t+"s/"+a+"/oidcRPMetaDataOptionsClientID",title:"oidcRPMetaDataOptionsClientID"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsClientSecret",id:t+"s/"+a+"/oidcRPMetaDataOptionsClientSecret",title:"oidcRPMetaDataOptionsClientSecret",type:"password"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsPublic",id:t+"s/"+a+"/oidcRPMetaDataOptionsPublic",title:"oidcRPMetaDataOptionsPublic",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsRedirectUris",id:t+"s/"+a+"/oidcRPMetaDataOptionsRedirectUris",title:"oidcRPMetaDataOptionsRedirectUris"}],id:"oidcRPMetaDataOptionsBasic",title:"oidcRPMetaDataOptionsBasic",type:"simpleInputContainer"},{_nodes:[{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsBypassConsent",help:"openidconnectclaims.html",id:t+"s/"+a+"/oidcRPMetaDataOptionsBypassConsent",title:"oidcRPMetaDataOptionsBypassConsent",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsUserIDAttr",id:t+"s/"+a+"/oidcRPMetaDataOptionsUserIDAttr",title:"oidcRPMetaDataOptionsUserIDAttr"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenForceClaims",id:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenForceClaims",title:"oidcRPMetaDataOptionsIDTokenForceClaims",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsAdditionalAudiences",id:t+"s/"+a+"/oidcRPMetaDataOptionsAdditionalAudiences",title:"oidcRPMetaDataOptionsAdditionalAudiences"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsRefreshToken",id:t+"s/"+a+"/oidcRPMetaDataOptionsRefreshToken",title:"oidcRPMetaDataOptionsRefreshToken",type:"bool"}],id:"oidcRPMetaDataOptionsAdvanced",title:"oidcRPMetaDataOptionsAdvanced",type:"simpleInputContainer"},{_nodes:[{default:"HS512",get:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenSignAlg",id:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenSignAlg",select:[{k:"none",v:"None"},{k:"HS256",v:"HS256"},{k:"HS384",v:"HS384"},{k:"HS512",v:"HS512"},{k:"RS256",v:"RS256"},{k:"RS384",v:"RS384"},{k:"RS512",v:"RS512"}],title:"oidcRPMetaDataOptionsIDTokenSignAlg",type:"select"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsRequirePKCE",id:t+"s/"+a+"/oidcRPMetaDataOptionsRequirePKCE",title:"oidcRPMetaDataOptionsRequirePKCE",type:"bool"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsAllowOffline",id:t+"s/"+a+"/oidcRPMetaDataOptionsAllowOffline",title:"oidcRPMetaDataOptionsAllowOffline",type:"bool"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsAllowPasswordGrant",id:t+"s/"+a+"/oidcRPMetaDataOptionsAllowPasswordGrant",title:"oidcRPMetaDataOptionsAllowPasswordGrant",type:"bool"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsAllowClientCredentialsGrant",id:t+"s/"+a+"/oidcRPMetaDataOptionsAllowClientCredentialsGrant",title:"oidcRPMetaDataOptionsAllowClientCredentialsGrant",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsAuthnLevel",id:t+"s/"+a+"/oidcRPMetaDataOptionsAuthnLevel",title:"oidcRPMetaDataOptionsAuthnLevel",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsRule",id:t+"s/"+a+"/oidcRPMetaDataOptionsRule",title:"oidcRPMetaDataOptionsRule"}],id:"security",title:"security",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsAuthorizationCodeExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsAuthorizationCodeExpiration",title:"oidcRPMetaDataOptionsAuthorizationCodeExpiration",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenExpiration",title:"oidcRPMetaDataOptionsIDTokenExpiration",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsAccessTokenExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsAccessTokenExpiration",title:"oidcRPMetaDataOptionsAccessTokenExpiration",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsOfflineSessionExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsOfflineSessionExpiration",title:"oidcRPMetaDataOptionsOfflineSessionExpiration",type:"int"}],id:"oidcRPMetaDataOptionsTimeouts",title:"oidcRPMetaDataOptionsTimeouts",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsPostLogoutRedirectUris",id:t+"s/"+a+"/oidcRPMetaDataOptionsPostLogoutRedirectUris",title:"oidcRPMetaDataOptionsPostLogoutRedirectUris"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutUrl",id:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutUrl",title:"oidcRPMetaDataOptionsLogoutUrl"},{default:"front",get:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutType",id:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutType",select:[{k:"front",v:"Front Channel"}],title:"oidcRPMetaDataOptionsLogoutType",type:"select"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutSessionRequired",id:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutSessionRequired",title:"oidcRPMetaDataOptionsLogoutSessionRequired",type:"bool"}],id:"logout",title:"logout",type:"simpleInputContainer"}],help:"idpopenidconnect.html#options",id:"oidcRPMetaDataOptions",title:"oidcRPMetaDataOptions"},{cnodes:t+"s/"+a+"/oidcRPMetaDataMacros",default:[],help:"exportedvars.html#extend-variables-using-macros-and-groups",id:t+"s/"+a+"/oidcRPMetaDataMacros",title:"oidcRPMetaDataMacros",type:"keyTextContainer"},{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsDisplayName",id:t+"s/"+a+"/oidcRPMetaDataOptionsDisplayName",title:"oidcRPMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsIcon",id:t+"s/"+a+"/oidcRPMetaDataOptionsIcon",title:"oidcRPMetaDataOptionsIcon"}],id:"oidcRPMetaDataOptionsDisplay",title:"oidcRPMetaDataOptionsDisplay",type:"simpleInputContainer"}];case"samlIDPMetaDataNode":return[{get:t+"s/"+a+"/samlIDPMetaDataXML",id:t+"s/"+a+"/samlIDPMetaDataXML",title:"samlIDPMetaDataXML",type:"file"},{cnodes:t+"s/"+a+"/samlIDPMetaDataExportedAttributes",default:[],help:"authsaml.html#exported-attributes",id:t+"s/"+a+"/samlIDPMetaDataExportedAttributes",title:"samlIDPMetaDataExportedAttributes",type:"samlAttributeContainer"},{_nodes:[{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsAdaptSessionUtime",id:t+"s/"+a+"/samlIDPMetaDataOptionsAdaptSessionUtime",title:"samlIDPMetaDataOptionsAdaptSessionUtime",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsForceUTF8",id:t+"s/"+a+"/samlIDPMetaDataOptionsForceUTF8",title:"samlIDPMetaDataOptionsForceUTF8",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsStoreSAMLToken",id:t+"s/"+a+"/samlIDPMetaDataOptionsStoreSAMLToken",title:"samlIDPMetaDataOptionsStoreSAMLToken",type:"bool"},{get:t+"s/"+a+"/samlIDPMetaDataOptionsUserAttribute",id:t+"s/"+a+"/samlIDPMetaDataOptionsUserAttribute",title:"samlIDPMetaDataOptionsUserAttribute"}],id:"samlIDPMetaDataOptionsSession",title:"samlIDPMetaDataOptionsSession",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsSignatureMethod",id:t+"s/"+a+"/samlIDPMetaDataOptionsSignatureMethod",select:[{k:"",v:"default"},{k:"RSA_SHA1",v:"RSA SHA1"},{k:"RSA_SHA256",v:"RSA SHA256"},{k:"RSA_SHA384",v:"RSA SHA384"},{k:"RSA_SHA512",v:"RSA SHA512"}],title:"samlIDPMetaDataOptionsSignatureMethod",type:"select"},{default:-1,get:t+"s/"+a+"/samlIDPMetaDataOptionsSignSSOMessage",id:t+"s/"+a+"/samlIDPMetaDataOptionsSignSSOMessage",title:"samlIDPMetaDataOptionsSignSSOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSSOMessageSignature",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSSOMessageSignature",title:"samlIDPMetaDataOptionsCheckSSOMessageSignature",type:"bool"},{default:-1,get:t+"s/"+a+"/samlIDPMetaDataOptionsSignSLOMessage",id:t+"s/"+a+"/samlIDPMetaDataOptionsSignSLOMessage",title:"samlIDPMetaDataOptionsSignSLOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSLOMessageSignature",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSLOMessageSignature",title:"samlIDPMetaDataOptionsCheckSLOMessageSignature",type:"bool"}],id:"samlIDPMetaDataOptionsSignature",title:"samlIDPMetaDataOptionsSignature",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsSSOBinding",id:t+"s/"+a+"/samlIDPMetaDataOptionsSSOBinding",select:[{k:"",v:""},{k:"http-post",v:"POST"},{k:"http-redirect",v:"Redirect"},{k:"artifact-get",v:"Artifact GET"}],title:"samlIDPMetaDataOptionsSSOBinding",type:"select"},{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsSLOBinding",id:t+"s/"+a+"/samlIDPMetaDataOptionsSLOBinding",select:[{k:"",v:""},{k:"http-post",v:"POST"},{k:"http-redirect",v:"Redirect"},{k:"http-soap",v:"SOAP"}],title:"samlIDPMetaDataOptionsSLOBinding",type:"select"}],id:"samlIDPMetaDataOptionsBinding",title:"samlIDPMetaDataOptionsBinding",type:"simpleInputContainer"},{_nodes:[{default:"none",get:t+"s/"+a+"/samlIDPMetaDataOptionsEncryptionMode",id:t+"s/"+a+"/samlIDPMetaDataOptionsEncryptionMode",select:[{k:"none",v:"None"},{k:"nameid",v:"Name ID"},{k:"assertion",v:"Assertion"}],title:"samlIDPMetaDataOptionsEncryptionMode",type:"select"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckTime",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckTime",title:"samlIDPMetaDataOptionsCheckTime",type:"bool"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckAudience",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckAudience",title:"samlIDPMetaDataOptionsCheckAudience",type:"bool"}],id:"samlIDPMetaDataOptionsSecurity",title:"samlIDPMetaDataOptionsSecurity",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsResolutionRule",id:t+"s/"+a+"/samlIDPMetaDataOptionsResolutionRule",title:"samlIDPMetaDataOptionsResolutionRule",type:"longtext"},{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsNameIDFormat",id:t+"s/"+a+"/samlIDPMetaDataOptionsNameIDFormat",select:[{k:"",v:""},{k:"unspecified",v:"Unspecified"},{k:"email",v:"Email"},{k:"x509",v:"X509 certificate"},{k:"windows",v:"Windows"},{k:"kerberos",v:"Kerberos"},{k:"entity",v:"Entity"},{k:"persistent",v:"Persistent"},{k:"transient",v:"Transient"},{k:"encrypted",v:"Encrypted"}],title:"samlIDPMetaDataOptionsNameIDFormat",type:"select"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsForceAuthn",id:t+"s/"+a+"/samlIDPMetaDataOptionsForceAuthn",title:"samlIDPMetaDataOptionsForceAuthn",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsIsPassive",id:t+"s/"+a+"/samlIDPMetaDataOptionsIsPassive",title:"samlIDPMetaDataOptionsIsPassive",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsAllowProxiedAuthn",id:t+"s/"+a+"/samlIDPMetaDataOptionsAllowProxiedAuthn",title:"samlIDPMetaDataOptionsAllowProxiedAuthn",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsAllowLoginFromIDP",id:t+"s/"+a+"/samlIDPMetaDataOptionsAllowLoginFromIDP",title:"samlIDPMetaDataOptionsAllowLoginFromIDP",type:"bool"},{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsRequestedAuthnContext",id:t+"s/"+a+"/samlIDPMetaDataOptionsRequestedAuthnContext",select:[{k:"",v:""},{k:"kerberos",v:"Kerberos"},{k:"password-protected-transport",v:"Password protected transport"},{k:"password",v:"Password"},{k:"tls-client",v:"TLS client certificate"}],title:"samlIDPMetaDataOptionsRequestedAuthnContext",type:"select"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsRelayStateURL",id:t+"s/"+a+"/samlIDPMetaDataOptionsRelayStateURL",title:"samlIDPMetaDataOptionsRelayStateURL",type:"bool"}],help:"authsaml.html#options",id:"samlIDPMetaDataOptions",title:"samlIDPMetaDataOptions",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/samlIDPMetaDataOptionsDisplayName",id:t+"s/"+a+"/samlIDPMetaDataOptionsDisplayName",title:"samlIDPMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/samlIDPMetaDataOptionsIcon",id:t+"s/"+a+"/samlIDPMetaDataOptionsIcon",title:"samlIDPMetaDataOptionsIcon"},{get:t+"s/"+a+"/samlIDPMetaDataOptionsSortNumber",id:t+"s/"+a+"/samlIDPMetaDataOptionsSortNumber",title:"samlIDPMetaDataOptionsSortNumber",type:"int"}],id:"samlIDPMetaDataOptionsDisplay",title:"samlIDPMetaDataOptionsDisplay",type:"simpleInputContainer"}];case"samlSPMetaDataNode":return[{get:t+"s/"+a+"/samlSPMetaDataXML",id:t+"s/"+a+"/samlSPMetaDataXML",title:"samlSPMetaDataXML",type:"file"},{cnodes:t+"s/"+a+"/samlSPMetaDataExportedAttributes",default:[],help:"idpsaml.html#exported-attributes",id:t+"s/"+a+"/samlSPMetaDataExportedAttributes",title:"samlSPMetaDataExportedAttributes",type:"samlAttributeContainer"},{_nodes:[{_nodes:[{default:"",get:t+"s/"+a+"/samlSPMetaDataOptionsNameIDFormat",id:t+"s/"+a+"/samlSPMetaDataOptionsNameIDFormat",select:[{k:"",v:""},{k:"unspecified",v:"Unspecified"},{k:"email",v:"Email"},{k:"x509",v:"X509 certificate"},{k:"windows",v:"Windows"},{k:"kerberos",v:"Kerberos"},{k:"entity",v:"Entity"},{k:"persistent",v:"Persistent"},{k:"transient",v:"Transient"},{k:"encrypted",v:"Encrypted"}],title:"samlSPMetaDataOptionsNameIDFormat",type:"select"},{get:t+"s/"+a+"/samlSPMetaDataOptionsNameIDSessionKey",id:t+"s/"+a+"/samlSPMetaDataOptionsNameIDSessionKey",title:"samlSPMetaDataOptionsNameIDSessionKey"},{default:0,get:t+"s/"+a+"/samlSPMetaDataOptionsOneTimeUse",id:t+"s/"+a+"/samlSPMetaDataOptionsOneTimeUse",title:"samlSPMetaDataOptionsOneTimeUse",type:"bool"},{default:72e3,get:t+"s/"+a+"/samlSPMetaDataOptionsSessionNotOnOrAfterTimeout",id:t+"s/"+a+"/samlSPMetaDataOptionsSessionNotOnOrAfterTimeout",title:"samlSPMetaDataOptionsSessionNotOnOrAfterTimeout",type:"int"},{default:72e3,get:t+"s/"+a+"/samlSPMetaDataOptionsNotOnOrAfterTimeout",id:t+"s/"+a+"/samlSPMetaDataOptionsNotOnOrAfterTimeout",title:"samlSPMetaDataOptionsNotOnOrAfterTimeout",type:"int"},{default:1,get:t+"s/"+a+"/samlSPMetaDataOptionsForceUTF8",id:t+"s/"+a+"/samlSPMetaDataOptionsForceUTF8",title:"samlSPMetaDataOptionsForceUTF8",type:"bool"}],id:"samlSPMetaDataOptionsAuthnResponse",title:"samlSPMetaDataOptionsAuthnResponse",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlSPMetaDataOptionsSignatureMethod",id:t+"s/"+a+"/samlSPMetaDataOptionsSignatureMethod",select:[{k:"",v:"default"},{k:"RSA_SHA1",v:"RSA SHA1"},{k:"RSA_SHA256",v:"RSA SHA256"},{k:"RSA_SHA384",v:"RSA SHA384"},{k:"RSA_SHA512",v:"RSA SHA512"}],title:"samlSPMetaDataOptionsSignatureMethod",type:"select"},{default:-1,get:t+"s/"+a+"/samlSPMetaDataOptionsSignSSOMessage",id:t+"s/"+a+"/samlSPMetaDataOptionsSignSSOMessage",title:"samlSPMetaDataOptionsSignSSOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlSPMetaDataOptionsCheckSSOMessageSignature",id:t+"s/"+a+"/samlSPMetaDataOptionsCheckSSOMessageSignature",title:"samlSPMetaDataOptionsCheckSSOMessageSignature",type:"bool"},{default:-1,get:t+"s/"+a+"/samlSPMetaDataOptionsSignSLOMessage",id:t+"s/"+a+"/samlSPMetaDataOptionsSignSLOMessage",title:"samlSPMetaDataOptionsSignSLOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlSPMetaDataOptionsCheckSLOMessageSignature",id:t+"s/"+a+"/samlSPMetaDataOptionsCheckSLOMessageSignature",title:"samlSPMetaDataOptionsCheckSLOMessageSignature",type:"bool"}],id:"samlSPMetaDataOptionsSignature",title:"samlSPMetaDataOptionsSignature",type:"simpleInputContainer"},{_nodes:[{default:"none",get:t+"s/"+a+"/samlSPMetaDataOptionsEncryptionMode",id:t+"s/"+a+"/samlSPMetaDataOptionsEncryptionMode",select:[{k:"none",v:"None"},{k:"nameid",v:"Name ID"},{k:"assertion",v:"Assertion"}],title:"samlSPMetaDataOptionsEncryptionMode",type:"select"},{default:0,get:t+"s/"+a+"/samlSPMetaDataOptionsEnableIDPInitiatedURL",id:t+"s/"+a+"/samlSPMetaDataOptionsEnableIDPInitiatedURL",title:"samlSPMetaDataOptionsEnableIDPInitiatedURL",type:"bool"},{get:t+"s/"+a+"/samlSPMetaDataOptionsAuthnLevel",id:t+"s/"+a+"/samlSPMetaDataOptionsAuthnLevel",title:"samlSPMetaDataOptionsAuthnLevel",type:"int"},{get:t+"s/"+a+"/samlSPMetaDataOptionsRule",id:t+"s/"+a+"/samlSPMetaDataOptionsRule",title:"samlSPMetaDataOptionsRule"}],id:"samlSPMetaDataOptionsSecurity",title:"samlSPMetaDataOptionsSecurity",type:"simpleInputContainer"}],help:"idpsaml.html#options",id:"samlSPMetaDataOptions",title:"samlSPMetaDataOptions"},{cnodes:t+"s/"+a+"/samlSPMetaDataMacros",default:[],help:"exportedvars.html#extend-variables-using-macros-and-groups",id:t+"s/"+a+"/samlSPMetaDataMacros",title:"samlSPMetaDataMacros",type:"keyTextContainer"}];case"virtualHost":return[{cnodes:t+"s/"+a+"/locationRules",default:[{data:"deny",id:t+"s/"+a+"/locationRules/default",re:"default",title:"default",type:"rule"}],help:"writingrulesand_headers.html#rules",id:t+"s/"+a+"/locationRules",title:"locationRules",type:"ruleContainer"},{cnodes:t+"s/"+a+"/exportedHeaders",help:"writingrulesand_headers.html#headers",id:t+"s/"+a+"/exportedHeaders",title:"exportedHeaders",type:"keyTextContainer"},{cnodes:t+"s/"+a+"/post",help:"formreplay.html",id:t+"s/"+a+"/post",title:"post",type:"postContainer"},{_nodes:[{default:-1,get:t+"s/"+a+"/vhostPort",id:t+"s/"+a+"/vhostPort",title:"vhostPort",type:"int"},{default:-1,get:t+"s/"+a+"/vhostHttps",id:t+"s/"+a+"/vhostHttps",title:"vhostHttps",type:"trool"},{default:0,get:t+"s/"+a+"/vhostMaintenance",id:t+"s/"+a+"/vhostMaintenance",title:"vhostMaintenance",type:"bool"},{default:"",get:t+"s/"+a+"/vhostAliases",id:t+"s/"+a+"/vhostAliases",title:"vhostAliases"},{default:"",get:t+"s/"+a+"/vhostAccessToTrace",id:t+"s/"+a+"/vhostAccessToTrace",title:"vhostAccessToTrace"},{default:"Main",get:t+"s/"+a+"/vhostType",id:t+"s/"+a+"/vhostType",select:[{k:"AuthBasic",v:"AuthBasic"},{k:"CDA",v:"CDA"},{k:"DevOps",v:"DevOps"},{k:"DevOpsST",v:"DevOpsST"},{k:"Main",v:"Main"},{k:"OAuth2",v:"OAuth2"},{k:"SecureToken",v:"SecureToken"},{k:"ServiceToken",v:"ServiceToken"},{k:"ZimbraPreAuth",v:"ZimbraPreAuth"}],title:"vhostType",type:"select"},{get:t+"s/"+a+"/vhostAuthnLevel",id:t+"s/"+a+"/vhostAuthnLevel",title:"vhostAuthnLevel",type:"int"},{default:-1,get:t+"s/"+a+"/vhostServiceTokenTTL",id:t+"s/"+a+"/vhostServiceTokenTTL",title:"vhostServiceTokenTTL",type:"int"}],help:"configvhost.html#options",id:"vhostOptions",title:"vhostOptions",type:"simpleInputContainer"}];default:return[]}}function setScopeVars(t){t.portal=t.data[0]._nodes[0]._nodes[0],t.getKey(t.portal),t.domain=t.data[0]._nodes[4]._nodes[1],t.getKey(t.domain)}
\ No newline at end of file
+function templates(t,a){switch(t){case"casAppMetaDataNode":return[{cnodes:t+"s/"+a+"/casAppMetaDataExportedVars",default:[{data:"cn",id:t+"s/"+a+"/casAppMetaDataExportedVars/cn",title:"cn",type:"keyText"},{data:"mail",id:t+"s/"+a+"/casAppMetaDataExportedVars/mail",title:"mail",type:"keyText"},{data:"uid",id:t+"s/"+a+"/casAppMetaDataExportedVars/uid",title:"uid",type:"keyText"}],id:t+"s/"+a+"/casAppMetaDataExportedVars",title:"casAppMetaDataExportedVars",type:"keyTextContainer"},{_nodes:[{get:t+"s/"+a+"/casAppMetaDataOptionsService",id:t+"s/"+a+"/casAppMetaDataOptionsService",title:"casAppMetaDataOptionsService"},{get:t+"s/"+a+"/casAppMetaDataOptionsUserAttribute",id:t+"s/"+a+"/casAppMetaDataOptionsUserAttribute",title:"casAppMetaDataOptionsUserAttribute"},{get:t+"s/"+a+"/casAppMetaDataOptionsAuthnLevel",id:t+"s/"+a+"/casAppMetaDataOptionsAuthnLevel",title:"casAppMetaDataOptionsAuthnLevel",type:"int"},{get:t+"s/"+a+"/casAppMetaDataOptionsRule",id:t+"s/"+a+"/casAppMetaDataOptionsRule",title:"casAppMetaDataOptionsRule"}],id:"casAppMetaDataOptions",title:"casAppMetaDataOptions",type:"simpleInputContainer"},{cnodes:t+"s/"+a+"/casAppMetaDataMacros",default:[],help:"exportedvars.html#extend-variables-using-macros-and-groups",id:t+"s/"+a+"/casAppMetaDataMacros",title:"casAppMetaDataMacros",type:"keyTextContainer"}];case"casSrvMetaDataNode":return[{cnodes:t+"s/"+a+"/casSrvMetaDataExportedVars",default:[{data:"cn",id:t+"s/"+a+"/casSrvMetaDataExportedVars/cn",title:"cn",type:"keyText"},{data:"mail",id:t+"s/"+a+"/casSrvMetaDataExportedVars/mail",title:"mail",type:"keyText"},{data:"uid",id:t+"s/"+a+"/casSrvMetaDataExportedVars/uid",title:"uid",type:"keyText"}],id:t+"s/"+a+"/casSrvMetaDataExportedVars",title:"casSrvMetaDataExportedVars",type:"keyTextContainer"},{cnodes:t+"s/"+a+"/casSrvMetaDataOptionsProxiedServices",id:t+"s/"+a+"/casSrvMetaDataOptionsProxiedServices",title:"casSrvMetaDataOptionsProxiedServices",type:"keyTextContainer"},{_nodes:[{get:t+"s/"+a+"/casSrvMetaDataOptionsUrl",id:t+"s/"+a+"/casSrvMetaDataOptionsUrl",title:"casSrvMetaDataOptionsUrl"},{default:0,get:t+"s/"+a+"/casSrvMetaDataOptionsRenew",id:t+"s/"+a+"/casSrvMetaDataOptionsRenew",title:"casSrvMetaDataOptionsRenew",type:"bool"},{default:0,get:t+"s/"+a+"/casSrvMetaDataOptionsGateway",id:t+"s/"+a+"/casSrvMetaDataOptionsGateway",title:"casSrvMetaDataOptionsGateway",type:"bool"}],id:"casSrvMetaDataOptions",title:"casSrvMetaDataOptions",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/casSrvMetaDataOptionsDisplayName",id:t+"s/"+a+"/casSrvMetaDataOptionsDisplayName",title:"casSrvMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/casSrvMetaDataOptionsIcon",id:t+"s/"+a+"/casSrvMetaDataOptionsIcon",title:"casSrvMetaDataOptionsIcon"},{get:t+"s/"+a+"/casSrvMetaDataOptionsSortNumber",id:t+"s/"+a+"/casSrvMetaDataOptionsSortNumber",title:"casSrvMetaDataOptionsSortNumber",type:"int"}],id:"casSrvMetaDataOptionsDisplay",title:"casSrvMetaDataOptionsDisplay",type:"simpleInputContainer"}];case"oidcOPMetaDataNode":return[{get:t+"s/"+a+"/oidcOPMetaDataJSON",id:t+"s/"+a+"/oidcOPMetaDataJSON",title:"oidcOPMetaDataJSON",type:"file"},{get:t+"s/"+a+"/oidcOPMetaDataJWKS",id:t+"s/"+a+"/oidcOPMetaDataJWKS",title:"oidcOPMetaDataJWKS",type:"file"},{cnodes:t+"s/"+a+"/oidcOPMetaDataExportedVars",default:[{data:"name",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/cn",title:"cn",type:"keyText"},{data:"email",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/mail",title:"mail",type:"keyText"},{data:"family_name",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/sn",title:"sn",type:"keyText"},{data:"sub",id:t+"s/"+a+"/oidcOPMetaDataExportedVars/uid",title:"uid",type:"keyText"}],id:t+"s/"+a+"/oidcOPMetaDataExportedVars",title:"oidcOPMetaDataExportedVars",type:"keyTextContainer"},{_nodes:[{_nodes:[{get:t+"s/"+a+"/oidcOPMetaDataOptionsConfigurationURI",id:t+"s/"+a+"/oidcOPMetaDataOptionsConfigurationURI",title:"oidcOPMetaDataOptionsConfigurationURI"},{default:0,get:t+"s/"+a+"/oidcOPMetaDataOptionsJWKSTimeout",id:t+"s/"+a+"/oidcOPMetaDataOptionsJWKSTimeout",title:"oidcOPMetaDataOptionsJWKSTimeout",type:"int"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsClientID",id:t+"s/"+a+"/oidcOPMetaDataOptionsClientID",title:"oidcOPMetaDataOptionsClientID"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsClientSecret",id:t+"s/"+a+"/oidcOPMetaDataOptionsClientSecret",title:"oidcOPMetaDataOptionsClientSecret",type:"password"},{default:0,get:t+"s/"+a+"/oidcOPMetaDataOptionsStoreIDToken",id:t+"s/"+a+"/oidcOPMetaDataOptionsStoreIDToken",title:"oidcOPMetaDataOptionsStoreIDToken",type:"bool"}],id:"oidcOPMetaDataOptionsConfiguration",title:"oidcOPMetaDataOptionsConfiguration",type:"simpleInputContainer"},{_nodes:[{default:"openid profile",get:t+"s/"+a+"/oidcOPMetaDataOptionsScope",id:t+"s/"+a+"/oidcOPMetaDataOptionsScope",title:"oidcOPMetaDataOptionsScope"},{default:"",get:t+"s/"+a+"/oidcOPMetaDataOptionsDisplay",id:t+"s/"+a+"/oidcOPMetaDataOptionsDisplay",select:[{k:"",v:""},{k:"page",v:"page"},{k:"popup",v:"popup"},{k:"touch",v:"touch"},{k:"wap",v:"wap"}],title:"oidcOPMetaDataOptionsDisplay",type:"select"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsPrompt",id:t+"s/"+a+"/oidcOPMetaDataOptionsPrompt",title:"oidcOPMetaDataOptionsPrompt"},{default:0,get:t+"s/"+a+"/oidcOPMetaDataOptionsMaxAge",id:t+"s/"+a+"/oidcOPMetaDataOptionsMaxAge",title:"oidcOPMetaDataOptionsMaxAge",type:"int"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsUiLocales",id:t+"s/"+a+"/oidcOPMetaDataOptionsUiLocales",title:"oidcOPMetaDataOptionsUiLocales"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsAcrValues",id:t+"s/"+a+"/oidcOPMetaDataOptionsAcrValues",title:"oidcOPMetaDataOptionsAcrValues"},{default:"client_secret_post",get:t+"s/"+a+"/oidcOPMetaDataOptionsTokenEndpointAuthMethod",id:t+"s/"+a+"/oidcOPMetaDataOptionsTokenEndpointAuthMethod",select:[{k:"client_secret_post",v:"client_secret_post"},{k:"client_secret_basic",v:"client_secret_basic"}],title:"oidcOPMetaDataOptionsTokenEndpointAuthMethod",type:"select"},{default:1,get:t+"s/"+a+"/oidcOPMetaDataOptionsCheckJWTSignature",id:t+"s/"+a+"/oidcOPMetaDataOptionsCheckJWTSignature",title:"oidcOPMetaDataOptionsCheckJWTSignature",type:"bool"},{default:30,get:t+"s/"+a+"/oidcOPMetaDataOptionsIDTokenMaxAge",id:t+"s/"+a+"/oidcOPMetaDataOptionsIDTokenMaxAge",title:"oidcOPMetaDataOptionsIDTokenMaxAge",type:"int"},{default:1,get:t+"s/"+a+"/oidcOPMetaDataOptionsUseNonce",id:t+"s/"+a+"/oidcOPMetaDataOptionsUseNonce",title:"oidcOPMetaDataOptionsUseNonce",type:"bool"}],id:"oidcOPMetaDataOptionsProtocol",title:"oidcOPMetaDataOptionsProtocol",type:"simpleInputContainer"}],id:"oidcOPMetaDataOptions",title:"oidcOPMetaDataOptions"},{_nodes:[{get:t+"s/"+a+"/oidcOPMetaDataOptionsDisplayName",id:t+"s/"+a+"/oidcOPMetaDataOptionsDisplayName",title:"oidcOPMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsIcon",id:t+"s/"+a+"/oidcOPMetaDataOptionsIcon",title:"oidcOPMetaDataOptionsIcon"},{get:t+"s/"+a+"/oidcOPMetaDataOptionsSortNumber",id:t+"s/"+a+"/oidcOPMetaDataOptionsSortNumber",title:"oidcOPMetaDataOptionsSortNumber",type:"int"}],id:"oidcOPMetaDataOptionsDisplayParams",title:"oidcOPMetaDataOptionsDisplayParams",type:"simpleInputContainer"}];case"oidcRPMetaDataNode":return[{cnodes:t+"s/"+a+"/oidcRPMetaDataExportedVars",default:[{data:["mail","string","auto"],id:t+"s/"+a+"/oidcRPMetaDataExportedVars/email",title:"email",type:"oidcAttribute"},{data:["sn","string","auto"],id:t+"s/"+a+"/oidcRPMetaDataExportedVars/family_name",title:"family_name",type:"oidcAttribute"},{data:["cn","string","auto"],id:t+"s/"+a+"/oidcRPMetaDataExportedVars/name",title:"name",type:"oidcAttribute"}],id:t+"s/"+a+"/oidcRPMetaDataExportedVars",title:"oidcRPMetaDataExportedVars",type:"oidcAttributeContainer"},{cnodes:t+"s/"+a+"/oidcRPMetaDataOptionsExtraClaims",default:[],id:t+"s/"+a+"/oidcRPMetaDataOptionsExtraClaims",title:"oidcRPMetaDataOptionsExtraClaims",type:"keyTextContainer"},{_nodes:[{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsClientID",id:t+"s/"+a+"/oidcRPMetaDataOptionsClientID",title:"oidcRPMetaDataOptionsClientID"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsClientSecret",id:t+"s/"+a+"/oidcRPMetaDataOptionsClientSecret",title:"oidcRPMetaDataOptionsClientSecret",type:"password"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsPublic",id:t+"s/"+a+"/oidcRPMetaDataOptionsPublic",title:"oidcRPMetaDataOptionsPublic",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsRedirectUris",id:t+"s/"+a+"/oidcRPMetaDataOptionsRedirectUris",title:"oidcRPMetaDataOptionsRedirectUris"}],id:"oidcRPMetaDataOptionsBasic",title:"oidcRPMetaDataOptionsBasic",type:"simpleInputContainer"},{_nodes:[{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsBypassConsent",help:"openidconnectclaims.html",id:t+"s/"+a+"/oidcRPMetaDataOptionsBypassConsent",title:"oidcRPMetaDataOptionsBypassConsent",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsUserIDAttr",id:t+"s/"+a+"/oidcRPMetaDataOptionsUserIDAttr",title:"oidcRPMetaDataOptionsUserIDAttr"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenForceClaims",id:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenForceClaims",title:"oidcRPMetaDataOptionsIDTokenForceClaims",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsAdditionalAudiences",id:t+"s/"+a+"/oidcRPMetaDataOptionsAdditionalAudiences",title:"oidcRPMetaDataOptionsAdditionalAudiences"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsRefreshToken",id:t+"s/"+a+"/oidcRPMetaDataOptionsRefreshToken",title:"oidcRPMetaDataOptionsRefreshToken",type:"bool"}],id:"oidcRPMetaDataOptionsAdvanced",title:"oidcRPMetaDataOptionsAdvanced",type:"simpleInputContainer"},{_nodes:[{default:"HS512",get:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenSignAlg",id:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenSignAlg",select:[{k:"none",v:"None"},{k:"HS256",v:"HS256"},{k:"HS384",v:"HS384"},{k:"HS512",v:"HS512"},{k:"RS256",v:"RS256"},{k:"RS384",v:"RS384"},{k:"RS512",v:"RS512"}],title:"oidcRPMetaDataOptionsIDTokenSignAlg",type:"select"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsRequirePKCE",id:t+"s/"+a+"/oidcRPMetaDataOptionsRequirePKCE",title:"oidcRPMetaDataOptionsRequirePKCE",type:"bool"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsAllowOffline",id:t+"s/"+a+"/oidcRPMetaDataOptionsAllowOffline",title:"oidcRPMetaDataOptionsAllowOffline",type:"bool"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsAllowPasswordGrant",id:t+"s/"+a+"/oidcRPMetaDataOptionsAllowPasswordGrant",title:"oidcRPMetaDataOptionsAllowPasswordGrant",type:"bool"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsAllowClientCredentialsGrant",id:t+"s/"+a+"/oidcRPMetaDataOptionsAllowClientCredentialsGrant",title:"oidcRPMetaDataOptionsAllowClientCredentialsGrant",type:"bool"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsRequestUris",id:t+"s/"+a+"/oidcRPMetaDataOptionsRequestUris",title:"oidcRPMetaDataOptionsRequestUris"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsAuthnLevel",id:t+"s/"+a+"/oidcRPMetaDataOptionsAuthnLevel",title:"oidcRPMetaDataOptionsAuthnLevel",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsRule",id:t+"s/"+a+"/oidcRPMetaDataOptionsRule",title:"oidcRPMetaDataOptionsRule"}],id:"security",title:"security",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsAuthorizationCodeExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsAuthorizationCodeExpiration",title:"oidcRPMetaDataOptionsAuthorizationCodeExpiration",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsIDTokenExpiration",title:"oidcRPMetaDataOptionsIDTokenExpiration",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsAccessTokenExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsAccessTokenExpiration",title:"oidcRPMetaDataOptionsAccessTokenExpiration",type:"int"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsOfflineSessionExpiration",id:t+"s/"+a+"/oidcRPMetaDataOptionsOfflineSessionExpiration",title:"oidcRPMetaDataOptionsOfflineSessionExpiration",type:"int"}],id:"oidcRPMetaDataOptionsTimeouts",title:"oidcRPMetaDataOptionsTimeouts",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsPostLogoutRedirectUris",id:t+"s/"+a+"/oidcRPMetaDataOptionsPostLogoutRedirectUris",title:"oidcRPMetaDataOptionsPostLogoutRedirectUris"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutUrl",id:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutUrl",title:"oidcRPMetaDataOptionsLogoutUrl"},{default:"front",get:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutType",id:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutType",select:[{k:"front",v:"Front Channel"}],title:"oidcRPMetaDataOptionsLogoutType",type:"select"},{default:0,get:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutSessionRequired",id:t+"s/"+a+"/oidcRPMetaDataOptionsLogoutSessionRequired",title:"oidcRPMetaDataOptionsLogoutSessionRequired",type:"bool"}],id:"logout",title:"logout",type:"simpleInputContainer"}],help:"idpopenidconnect.html#options",id:"oidcRPMetaDataOptions",title:"oidcRPMetaDataOptions"},{cnodes:t+"s/"+a+"/oidcRPMetaDataMacros",default:[],help:"exportedvars.html#extend-variables-using-macros-and-groups",id:t+"s/"+a+"/oidcRPMetaDataMacros",title:"oidcRPMetaDataMacros",type:"keyTextContainer"},{_nodes:[{get:t+"s/"+a+"/oidcRPMetaDataOptionsDisplayName",id:t+"s/"+a+"/oidcRPMetaDataOptionsDisplayName",title:"oidcRPMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/oidcRPMetaDataOptionsIcon",id:t+"s/"+a+"/oidcRPMetaDataOptionsIcon",title:"oidcRPMetaDataOptionsIcon"}],id:"oidcRPMetaDataOptionsDisplay",title:"oidcRPMetaDataOptionsDisplay",type:"simpleInputContainer"}];case"samlIDPMetaDataNode":return[{get:t+"s/"+a+"/samlIDPMetaDataXML",id:t+"s/"+a+"/samlIDPMetaDataXML",title:"samlIDPMetaDataXML",type:"file"},{cnodes:t+"s/"+a+"/samlIDPMetaDataExportedAttributes",default:[],help:"authsaml.html#exported-attributes",id:t+"s/"+a+"/samlIDPMetaDataExportedAttributes",title:"samlIDPMetaDataExportedAttributes",type:"samlAttributeContainer"},{_nodes:[{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsAdaptSessionUtime",id:t+"s/"+a+"/samlIDPMetaDataOptionsAdaptSessionUtime",title:"samlIDPMetaDataOptionsAdaptSessionUtime",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsForceUTF8",id:t+"s/"+a+"/samlIDPMetaDataOptionsForceUTF8",title:"samlIDPMetaDataOptionsForceUTF8",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsStoreSAMLToken",id:t+"s/"+a+"/samlIDPMetaDataOptionsStoreSAMLToken",title:"samlIDPMetaDataOptionsStoreSAMLToken",type:"bool"},{get:t+"s/"+a+"/samlIDPMetaDataOptionsUserAttribute",id:t+"s/"+a+"/samlIDPMetaDataOptionsUserAttribute",title:"samlIDPMetaDataOptionsUserAttribute"}],id:"samlIDPMetaDataOptionsSession",title:"samlIDPMetaDataOptionsSession",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsSignatureMethod",id:t+"s/"+a+"/samlIDPMetaDataOptionsSignatureMethod",select:[{k:"",v:"default"},{k:"RSA_SHA1",v:"RSA SHA1"},{k:"RSA_SHA256",v:"RSA SHA256"},{k:"RSA_SHA384",v:"RSA SHA384"},{k:"RSA_SHA512",v:"RSA SHA512"}],title:"samlIDPMetaDataOptionsSignatureMethod",type:"select"},{default:-1,get:t+"s/"+a+"/samlIDPMetaDataOptionsSignSSOMessage",id:t+"s/"+a+"/samlIDPMetaDataOptionsSignSSOMessage",title:"samlIDPMetaDataOptionsSignSSOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSSOMessageSignature",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSSOMessageSignature",title:"samlIDPMetaDataOptionsCheckSSOMessageSignature",type:"bool"},{default:-1,get:t+"s/"+a+"/samlIDPMetaDataOptionsSignSLOMessage",id:t+"s/"+a+"/samlIDPMetaDataOptionsSignSLOMessage",title:"samlIDPMetaDataOptionsSignSLOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSLOMessageSignature",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckSLOMessageSignature",title:"samlIDPMetaDataOptionsCheckSLOMessageSignature",type:"bool"}],id:"samlIDPMetaDataOptionsSignature",title:"samlIDPMetaDataOptionsSignature",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsSSOBinding",id:t+"s/"+a+"/samlIDPMetaDataOptionsSSOBinding",select:[{k:"",v:""},{k:"http-post",v:"POST"},{k:"http-redirect",v:"Redirect"},{k:"artifact-get",v:"Artifact GET"}],title:"samlIDPMetaDataOptionsSSOBinding",type:"select"},{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsSLOBinding",id:t+"s/"+a+"/samlIDPMetaDataOptionsSLOBinding",select:[{k:"",v:""},{k:"http-post",v:"POST"},{k:"http-redirect",v:"Redirect"},{k:"http-soap",v:"SOAP"}],title:"samlIDPMetaDataOptionsSLOBinding",type:"select"}],id:"samlIDPMetaDataOptionsBinding",title:"samlIDPMetaDataOptionsBinding",type:"simpleInputContainer"},{_nodes:[{default:"none",get:t+"s/"+a+"/samlIDPMetaDataOptionsEncryptionMode",id:t+"s/"+a+"/samlIDPMetaDataOptionsEncryptionMode",select:[{k:"none",v:"None"},{k:"nameid",v:"Name ID"},{k:"assertion",v:"Assertion"}],title:"samlIDPMetaDataOptionsEncryptionMode",type:"select"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckTime",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckTime",title:"samlIDPMetaDataOptionsCheckTime",type:"bool"},{default:1,get:t+"s/"+a+"/samlIDPMetaDataOptionsCheckAudience",id:t+"s/"+a+"/samlIDPMetaDataOptionsCheckAudience",title:"samlIDPMetaDataOptionsCheckAudience",type:"bool"}],id:"samlIDPMetaDataOptionsSecurity",title:"samlIDPMetaDataOptionsSecurity",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsResolutionRule",id:t+"s/"+a+"/samlIDPMetaDataOptionsResolutionRule",title:"samlIDPMetaDataOptionsResolutionRule",type:"longtext"},{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsNameIDFormat",id:t+"s/"+a+"/samlIDPMetaDataOptionsNameIDFormat",select:[{k:"",v:""},{k:"unspecified",v:"Unspecified"},{k:"email",v:"Email"},{k:"x509",v:"X509 certificate"},{k:"windows",v:"Windows"},{k:"kerberos",v:"Kerberos"},{k:"entity",v:"Entity"},{k:"persistent",v:"Persistent"},{k:"transient",v:"Transient"},{k:"encrypted",v:"Encrypted"}],title:"samlIDPMetaDataOptionsNameIDFormat",type:"select"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsForceAuthn",id:t+"s/"+a+"/samlIDPMetaDataOptionsForceAuthn",title:"samlIDPMetaDataOptionsForceAuthn",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsIsPassive",id:t+"s/"+a+"/samlIDPMetaDataOptionsIsPassive",title:"samlIDPMetaDataOptionsIsPassive",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsAllowProxiedAuthn",id:t+"s/"+a+"/samlIDPMetaDataOptionsAllowProxiedAuthn",title:"samlIDPMetaDataOptionsAllowProxiedAuthn",type:"bool"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsAllowLoginFromIDP",id:t+"s/"+a+"/samlIDPMetaDataOptionsAllowLoginFromIDP",title:"samlIDPMetaDataOptionsAllowLoginFromIDP",type:"bool"},{default:"",get:t+"s/"+a+"/samlIDPMetaDataOptionsRequestedAuthnContext",id:t+"s/"+a+"/samlIDPMetaDataOptionsRequestedAuthnContext",select:[{k:"",v:""},{k:"kerberos",v:"Kerberos"},{k:"password-protected-transport",v:"Password protected transport"},{k:"password",v:"Password"},{k:"tls-client",v:"TLS client certificate"}],title:"samlIDPMetaDataOptionsRequestedAuthnContext",type:"select"},{default:0,get:t+"s/"+a+"/samlIDPMetaDataOptionsRelayStateURL",id:t+"s/"+a+"/samlIDPMetaDataOptionsRelayStateURL",title:"samlIDPMetaDataOptionsRelayStateURL",type:"bool"}],help:"authsaml.html#options",id:"samlIDPMetaDataOptions",title:"samlIDPMetaDataOptions",type:"simpleInputContainer"},{_nodes:[{get:t+"s/"+a+"/samlIDPMetaDataOptionsDisplayName",id:t+"s/"+a+"/samlIDPMetaDataOptionsDisplayName",title:"samlIDPMetaDataOptionsDisplayName"},{get:t+"s/"+a+"/samlIDPMetaDataOptionsIcon",id:t+"s/"+a+"/samlIDPMetaDataOptionsIcon",title:"samlIDPMetaDataOptionsIcon"},{get:t+"s/"+a+"/samlIDPMetaDataOptionsSortNumber",id:t+"s/"+a+"/samlIDPMetaDataOptionsSortNumber",title:"samlIDPMetaDataOptionsSortNumber",type:"int"}],id:"samlIDPMetaDataOptionsDisplay",title:"samlIDPMetaDataOptionsDisplay",type:"simpleInputContainer"}];case"samlSPMetaDataNode":return[{get:t+"s/"+a+"/samlSPMetaDataXML",id:t+"s/"+a+"/samlSPMetaDataXML",title:"samlSPMetaDataXML",type:"file"},{cnodes:t+"s/"+a+"/samlSPMetaDataExportedAttributes",default:[],help:"idpsaml.html#exported-attributes",id:t+"s/"+a+"/samlSPMetaDataExportedAttributes",title:"samlSPMetaDataExportedAttributes",type:"samlAttributeContainer"},{_nodes:[{_nodes:[{default:"",get:t+"s/"+a+"/samlSPMetaDataOptionsNameIDFormat",id:t+"s/"+a+"/samlSPMetaDataOptionsNameIDFormat",select:[{k:"",v:""},{k:"unspecified",v:"Unspecified"},{k:"email",v:"Email"},{k:"x509",v:"X509 certificate"},{k:"windows",v:"Windows"},{k:"kerberos",v:"Kerberos"},{k:"entity",v:"Entity"},{k:"persistent",v:"Persistent"},{k:"transient",v:"Transient"},{k:"encrypted",v:"Encrypted"}],title:"samlSPMetaDataOptionsNameIDFormat",type:"select"},{get:t+"s/"+a+"/samlSPMetaDataOptionsNameIDSessionKey",id:t+"s/"+a+"/samlSPMetaDataOptionsNameIDSessionKey",title:"samlSPMetaDataOptionsNameIDSessionKey"},{default:0,get:t+"s/"+a+"/samlSPMetaDataOptionsOneTimeUse",id:t+"s/"+a+"/samlSPMetaDataOptionsOneTimeUse",title:"samlSPMetaDataOptionsOneTimeUse",type:"bool"},{default:72e3,get:t+"s/"+a+"/samlSPMetaDataOptionsSessionNotOnOrAfterTimeout",id:t+"s/"+a+"/samlSPMetaDataOptionsSessionNotOnOrAfterTimeout",title:"samlSPMetaDataOptionsSessionNotOnOrAfterTimeout",type:"int"},{default:72e3,get:t+"s/"+a+"/samlSPMetaDataOptionsNotOnOrAfterTimeout",id:t+"s/"+a+"/samlSPMetaDataOptionsNotOnOrAfterTimeout",title:"samlSPMetaDataOptionsNotOnOrAfterTimeout",type:"int"},{default:1,get:t+"s/"+a+"/samlSPMetaDataOptionsForceUTF8",id:t+"s/"+a+"/samlSPMetaDataOptionsForceUTF8",title:"samlSPMetaDataOptionsForceUTF8",type:"bool"}],id:"samlSPMetaDataOptionsAuthnResponse",title:"samlSPMetaDataOptionsAuthnResponse",type:"simpleInputContainer"},{_nodes:[{default:"",get:t+"s/"+a+"/samlSPMetaDataOptionsSignatureMethod",id:t+"s/"+a+"/samlSPMetaDataOptionsSignatureMethod",select:[{k:"",v:"default"},{k:"RSA_SHA1",v:"RSA SHA1"},{k:"RSA_SHA256",v:"RSA SHA256"},{k:"RSA_SHA384",v:"RSA SHA384"},{k:"RSA_SHA512",v:"RSA SHA512"}],title:"samlSPMetaDataOptionsSignatureMethod",type:"select"},{default:-1,get:t+"s/"+a+"/samlSPMetaDataOptionsSignSSOMessage",id:t+"s/"+a+"/samlSPMetaDataOptionsSignSSOMessage",title:"samlSPMetaDataOptionsSignSSOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlSPMetaDataOptionsCheckSSOMessageSignature",id:t+"s/"+a+"/samlSPMetaDataOptionsCheckSSOMessageSignature",title:"samlSPMetaDataOptionsCheckSSOMessageSignature",type:"bool"},{default:-1,get:t+"s/"+a+"/samlSPMetaDataOptionsSignSLOMessage",id:t+"s/"+a+"/samlSPMetaDataOptionsSignSLOMessage",title:"samlSPMetaDataOptionsSignSLOMessage",type:"trool"},{default:1,get:t+"s/"+a+"/samlSPMetaDataOptionsCheckSLOMessageSignature",id:t+"s/"+a+"/samlSPMetaDataOptionsCheckSLOMessageSignature",title:"samlSPMetaDataOptionsCheckSLOMessageSignature",type:"bool"}],id:"samlSPMetaDataOptionsSignature",title:"samlSPMetaDataOptionsSignature",type:"simpleInputContainer"},{_nodes:[{default:"none",get:t+"s/"+a+"/samlSPMetaDataOptionsEncryptionMode",id:t+"s/"+a+"/samlSPMetaDataOptionsEncryptionMode",select:[{k:"none",v:"None"},{k:"nameid",v:"Name ID"},{k:"assertion",v:"Assertion"}],title:"samlSPMetaDataOptionsEncryptionMode",type:"select"},{default:0,get:t+"s/"+a+"/samlSPMetaDataOptionsEnableIDPInitiatedURL",id:t+"s/"+a+"/samlSPMetaDataOptionsEnableIDPInitiatedURL",title:"samlSPMetaDataOptionsEnableIDPInitiatedURL",type:"bool"},{get:t+"s/"+a+"/samlSPMetaDataOptionsAuthnLevel",id:t+"s/"+a+"/samlSPMetaDataOptionsAuthnLevel",title:"samlSPMetaDataOptionsAuthnLevel",type:"int"},{get:t+"s/"+a+"/samlSPMetaDataOptionsRule",id:t+"s/"+a+"/samlSPMetaDataOptionsRule",title:"samlSPMetaDataOptionsRule"}],id:"samlSPMetaDataOptionsSecurity",title:"samlSPMetaDataOptionsSecurity",type:"simpleInputContainer"}],help:"idpsaml.html#options",id:"samlSPMetaDataOptions",title:"samlSPMetaDataOptions"},{cnodes:t+"s/"+a+"/samlSPMetaDataMacros",default:[],help:"exportedvars.html#extend-variables-using-macros-and-groups",id:t+"s/"+a+"/samlSPMetaDataMacros",title:"samlSPMetaDataMacros",type:"keyTextContainer"}];case"virtualHost":return[{cnodes:t+"s/"+a+"/locationRules",default:[{data:"deny",id:t+"s/"+a+"/locationRules/default",re:"default",title:"default",type:"rule"}],help:"writingrulesand_headers.html#rules",id:t+"s/"+a+"/locationRules",title:"locationRules",type:"ruleContainer"},{cnodes:t+"s/"+a+"/exportedHeaders",help:"writingrulesand_headers.html#headers",id:t+"s/"+a+"/exportedHeaders",title:"exportedHeaders",type:"keyTextContainer"},{cnodes:t+"s/"+a+"/post",help:"formreplay.html",id:t+"s/"+a+"/post",title:"post",type:"postContainer"},{_nodes:[{default:-1,get:t+"s/"+a+"/vhostPort",id:t+"s/"+a+"/vhostPort",title:"vhostPort",type:"int"},{default:-1,get:t+"s/"+a+"/vhostHttps",id:t+"s/"+a+"/vhostHttps",title:"vhostHttps",type:"trool"},{default:0,get:t+"s/"+a+"/vhostMaintenance",id:t+"s/"+a+"/vhostMaintenance",title:"vhostMaintenance",type:"bool"},{default:"",get:t+"s/"+a+"/vhostAliases",id:t+"s/"+a+"/vhostAliases",title:"vhostAliases"},{default:"",get:t+"s/"+a+"/vhostAccessToTrace",id:t+"s/"+a+"/vhostAccessToTrace",title:"vhostAccessToTrace"},{default:"Main",get:t+"s/"+a+"/vhostType",id:t+"s/"+a+"/vhostType",select:[{k:"AuthBasic",v:"AuthBasic"},{k:"CDA",v:"CDA"},{k:"DevOps",v:"DevOps"},{k:"DevOpsST",v:"DevOpsST"},{k:"Main",v:"Main"},{k:"OAuth2",v:"OAuth2"},{k:"SecureToken",v:"SecureToken"},{k:"ServiceToken",v:"ServiceToken"},{k:"ZimbraPreAuth",v:"ZimbraPreAuth"}],title:"vhostType",type:"select"},{get:t+"s/"+a+"/vhostAuthnLevel",id:t+"s/"+a+"/vhostAuthnLevel",title:"vhostAuthnLevel",type:"int"},{default:-1,get:t+"s/"+a+"/vhostServiceTokenTTL",id:t+"s/"+a+"/vhostServiceTokenTTL",title:"vhostServiceTokenTTL",type:"int"}],help:"configvhost.html#options",id:"vhostOptions",title:"vhostOptions",type:"simpleInputContainer"}];default:return[]}}function setScopeVars(t){t.portal=t.data[0]._nodes[0]._nodes[0],t.getKey(t.portal),t.domain=t.data[0]._nodes[4]._nodes[1],t.getKey(t.domain)}
\ No newline at end of file
diff --git a/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js.map b/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js.map
index e39d06ddd..48a4c21f9 100644
--- a/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js.map
+++ b/lemonldap-ng-manager/site/htdocs/static/js/conftree.min.js.map
@@ -1 +1 @@
-{"version":3,"sources":["conftree.js"],"names":["templates","tpl","key","cnodes","default","data","id","title","type","_nodes","get","help","select","k","v","re","setScopeVars","scope","portal","getKey","domain"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["conftree.js"],"names":["templates","tpl","key","cnodes","default","data","id","title","type","_nodes","get","help","select","k","v","re","setScopeVars","scope","portal","getKey","domain"],"mappings":"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"}
\ No newline at end of file
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/ar.json b/lemonldap-ng-manager/site/htdocs/static/languages/ar.json
index b5d05faf8..b237d047e 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/ar.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/ar.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"يو آر إل",
 "oidcOPMetaDataOptionsProtocol":"بروتوكول",
 "oidcRPMetaDataOptionsPublic":"Public client",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Require PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"مستوى إثبات الهوية",
 "oidcRPMetaDataOptionsRule":"قاعدة الدخول",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"تناوب حالة مهلة الجلسة ",
 "samlUseQueryStringSpecific":"استخدام أسلوب query_string المعين",
 "samlOverrideIDPEntityID":"Override Entity ID when acting as IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/de.json b/lemonldap-ng-manager/site/htdocs/static/languages/de.json
index 2e24c1dda..9cd5f71b3 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/de.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/de.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protocol",
 "oidcRPMetaDataOptionsPublic":"Public client",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Require PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"Authentication level",
 "oidcRPMetaDataOptionsRule":"Access rule",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"RelayState session timeout",
 "samlUseQueryStringSpecific":"Use specific query_string method",
 "samlOverrideIDPEntityID":"Override Entity ID when acting as IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/en.json b/lemonldap-ng-manager/site/htdocs/static/languages/en.json
index 20cf97f17..5a7bf659b 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/en.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/en.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protocol",
 "oidcRPMetaDataOptionsPublic":"Public client",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Require PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"Authentication level",
 "oidcRPMetaDataOptionsRule":"Access rule",
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/es.json b/lemonldap-ng-manager/site/htdocs/static/languages/es.json
index 09a569370..eb5b48bd0 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/es.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/es.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protocolo",
 "oidcRPMetaDataOptionsPublic":"Cliente público",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Se requiere PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"Authentication level",
 "oidcRPMetaDataOptionsRule":"Regla de acceso",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"RelayState session timeout",
 "samlUseQueryStringSpecific":"Use specific query_string method",
 "samlOverrideIDPEntityID":"Override Entity ID when acting as IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/fr.json b/lemonldap-ng-manager/site/htdocs/static/languages/fr.json
index 1fe7c24b3..de8d98c95 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/fr.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/fr.json
@@ -627,6 +627,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protocole",
 "oidcRPMetaDataOptionsPublic":"Client public",
+"oidcRPMetaDataOptionsRequestUris":"URLs autorisées pour récupérer les paramètres de la requête",
 "oidcRPMetaDataOptionsRequirePKCE":"PKCE requis",
 "oidcRPMetaDataOptionsAuthnLevel":"Niveau d'authentification",
 "oidcRPMetaDataOptionsRule":"Règle d'accès",
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/it.json b/lemonldap-ng-manager/site/htdocs/static/languages/it.json
index 5932df833..fe56f0fce 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/it.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/it.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protocollo",
 "oidcRPMetaDataOptionsPublic":"Cliente pubblico",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Richiedi PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"Livello di autenticazione",
 "oidcRPMetaDataOptionsRule":"Regola di accesso",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"Timeout di sessione di RelayState",
 "samlUseQueryStringSpecific":"Utilizza il metodo specifico query_string",
 "samlOverrideIDPEntityID":"Sostituisci l'ID entità quando agisce come IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/pl.json b/lemonldap-ng-manager/site/htdocs/static/languages/pl.json
index 439610f31..57602e9e5 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/pl.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/pl.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protokół",
 "oidcRPMetaDataOptionsPublic":"Klient publiczny",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Wymagaj PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"Poziom uwierzytelnienia",
 "oidcRPMetaDataOptionsRule":"Reguła dostępu",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"Limit czasu sesji RelayState",
 "samlUseQueryStringSpecific":"Użyj określonej metody query_string",
 "samlOverrideIDPEntityID":"Zastąp identyfikator jednostki podczas działania jako IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/tr.json b/lemonldap-ng-manager/site/htdocs/static/languages/tr.json
index a28bc03a1..25b0d7b7f 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/tr.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/tr.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protokol",
 "oidcRPMetaDataOptionsPublic":"Açık istemci",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"PKCE gerektir",
 "oidcRPMetaDataOptionsAuthnLevel":"Doğrulama seviyesi",
 "oidcRPMetaDataOptionsRule":"Erişim kuralı",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"RelayState oturum zaman aşımı",
 "samlUseQueryStringSpecific":"Spesifik query_string metodu kullan",
 "samlOverrideIDPEntityID":"IDP olarak davrandığında Varlık ID'yi geçersiz kıl"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/vi.json b/lemonldap-ng-manager/site/htdocs/static/languages/vi.json
index 415601325..af3506e4e 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/vi.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/vi.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Giao thức",
 "oidcRPMetaDataOptionsPublic":"Public client",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Require PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"Mức xác thực",
 "oidcRPMetaDataOptionsRule":"Quy tắc truy cập",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"Thời gian hết hạn phiên RelayState ",
 "samlUseQueryStringSpecific":"Sử dụng phương pháp query_string cụ thể",
 "samlOverrideIDPEntityID":"Override Entity ID when acting as IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/zh.json b/lemonldap-ng-manager/site/htdocs/static/languages/zh.json
index 30e3f4554..97f91e3d3 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/zh.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/zh.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"Protocol",
 "oidcRPMetaDataOptionsPublic":"Public client",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"Require PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"认证级别",
 "oidcRPMetaDataOptionsRule":"Access rule",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"RelayState session timeout",
 "samlUseQueryStringSpecific":"Use specific query_string method",
 "samlOverrideIDPEntityID":"Override Entity ID when acting as IDP"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-manager/site/htdocs/static/languages/zh_TW.json b/lemonldap-ng-manager/site/htdocs/static/languages/zh_TW.json
index b73ea7dd0..934948273 100644
--- a/lemonldap-ng-manager/site/htdocs/static/languages/zh_TW.json
+++ b/lemonldap-ng-manager/site/htdocs/static/languages/zh_TW.json
@@ -626,6 +626,7 @@
 "oidcRPMetaDataOptionsLogoutUrl":"URL",
 "oidcOPMetaDataOptionsProtocol":"協定",
 "oidcRPMetaDataOptionsPublic":"公開客戶端",
+"oidcRPMetaDataOptionsRequestUris":"Allowed URLs for fetching Request Object",
 "oidcRPMetaDataOptionsRequirePKCE":"需要 PKCE",
 "oidcRPMetaDataOptionsAuthnLevel":"驗證等級",
 "oidcRPMetaDataOptionsRule":"存取規則",
@@ -1194,4 +1195,4 @@
 "samlRelayStateTimeout":"RelayState 工作階段逾時",
 "samlUseQueryStringSpecific":"使用特定的 query_string 方法",
 "samlOverrideIDPEntityID":"充當 IDP 覆寫實體 ID"
-}
\ No newline at end of file
+}
diff --git a/lemonldap-ng-portal/MANIFEST b/lemonldap-ng-portal/MANIFEST
index b048eb3f0..f92323e9c 100644
--- a/lemonldap-ng-portal/MANIFEST
+++ b/lemonldap-ng-portal/MANIFEST
@@ -579,6 +579,7 @@ t/34-Auth-Proxy-and-SOAP-Server.t
 t/35-My-session.t
 t/35-REST-config-backend.t
 t/35-REST-export-password.t
+t/35-REST-sessions-with-AuthBasic-handler-with-2FA.t
 t/35-REST-sessions-with-AuthBasic-handler.t
 t/35-REST-sessions-with-REST-server.t
 t/35-SOAP-config-backend.t
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Mail2F.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Mail2F.pm
index 28167430e..72677248e 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Mail2F.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Mail2F.pm
@@ -82,8 +82,6 @@ sub run {
     }
 
     # Build mail content
-    my %tplPrms;
-    $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
     my $tr      = $self->translate($req);
     my $subject = $self->conf->{mail2fSubject};
 
@@ -104,12 +102,16 @@ sub run {
             $req,
             'mail_2fcode',
             filter => $tr,
-            params => \%tplPrms
+            params => {
+                code => $code,
+            },
         );
         $html = 1;
     }
 
     # Replace variables in body
+    # FIXME: kept for compatibility with 2.0.0 mail templates
+    # in future versions this should only happen for plaintext emails
     $body =~ s/\$code/$code/g;
     $body =~ s/\$(\w+)/$req->{sessionInfo}->{$1} || ''/ge;
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/TOTP.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/TOTP.pm
index cb738a3ad..3cacdb75a 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/TOTP.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/TOTP.pm
@@ -47,6 +47,9 @@ sub run {
     # Verification that user has a valid TOTP app
     if ( $action eq 'verify' ) {
 
+        $req->headers->header('X-CSRF-Check')
+            or return $self->p->sendError( $req, 'csrfError', 400 );
+
         # Get form token
         my $token = $req->param('token');
         unless ($token) {
@@ -182,6 +185,9 @@ sub run {
         my $nk     = 0;
         my $secret = '';
 
+        $req->headers->header('X-CSRF-Check')
+            or return $self->p->sendError( $req, 'csrfError', 400 );
+
         # Read existing 2FDevices
         $self->logger->debug("Looking for 2F Devices...");
         my $_2fDevices;
@@ -226,10 +232,6 @@ sub run {
             return $self->p->sendError( $req, 'notAuthorized', 200 );
         }
 
-        elsif ( $self->conf->{totp2fDisplayExistingSecret} ) {
-            $self->logger->debug("User secret = $secret");
-        }
-
         else {
             return $self->p->sendError( $req, 'totpExistingKey', 200 );
         }
@@ -265,6 +267,9 @@ sub run {
     # Delete TOTP
     elsif ( $action eq 'delete' ) {
 
+        $req->headers->header('X-CSRF-Check')
+            or return $self->p->sendError( $req, 'csrfError', 400 );
+
         # Check if unregistration is allowed
         return $self->p->sendError( $req, 'notAuthorized', 400 )
           unless $self->conf->{totp2fUserCanRemoveKey};
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/U2F.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/U2F.pm
index 5804addf2..cb698bb45 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/U2F.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/2F/Register/U2F.pm
@@ -251,6 +251,9 @@ sub run {
 
     elsif ( $action eq 'delete' ) {
 
+        $req->headers->header('X-CSRF-Check')
+            or return $self->p->sendError( $req, 'csrfError', 400 );
+
         # Check if unregistration is allowed
         return $self->p->sendError( $req, 'notAuthorized', 200 )
           unless $self->conf->{u2fUserCanRemoveKey};
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Auth/_WebForm.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Auth/_WebForm.pm
index ebcb261f1..db88975ca 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Auth/_WebForm.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Auth/_WebForm.pm
@@ -73,7 +73,10 @@ sub extractFormInfo {
     my $res            = PE_OK;
 
     # 1. No user defined at all -> first access
-    unless ( $defUser and $req->method =~ /^POST$/i ) {
+    # _pwdCheck is a workaround to make CheckUser work while using a GET
+    unless ( $defUser
+        and ( uc( $req->method ) eq "POST" or $req->data->{_pwdCheck} ) )
+    {
         $res = PE_FIRSTACCESS;
     }
 
@@ -170,6 +173,7 @@ sub getDisplayType {
 
 sub setSecurity {
     my ( $self, $req ) = @_;
+    return if $req->data->{skipToken};
 
     # If captcha is enable, prepare it
     if ( $self->captcha ) {
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/CDC.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/CDC.pm
index 40099aa00..56f3cfb66 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/CDC.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/CDC.pm
@@ -9,6 +9,7 @@ use strict;
 use Mouse;
 use MIME::Base64;
 use Lemonldap::NG::Common::FormEncode;
+use URI;
 
 our $VERSION = '2.0.6';
 
@@ -163,7 +164,10 @@ sub handler {
         );
 
         # Redirect
-        return [ 302, [ Location => $urldc, $req->spliceHdrs ], [] ];
+        return [
+            302, [ Location => URI->new($urldc)->as_string, $req->spliceHdrs ],
+            []
+        ];
 
     }
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/CAS.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/CAS.pm
index d92c859b6..590dcd716 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/CAS.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/CAS.pm
@@ -13,6 +13,7 @@ use Lemonldap::NG::Portal::Main::Constants qw(
   PE_BADURL
   PE_SENDRESPONSE
 );
+use URI;
 
 our $VERSION = '2.0.9';
 
@@ -84,7 +85,8 @@ sub storeEnvAndCheckGateway {
     if ( $gateway and $gateway eq "true" ) {
         $self->logger->debug(
             "Gateway mode requested, redirect without authentication");
-        $req->response( [ 302, [ Location => $service ], [] ] );
+        $req->response(
+            [ 302, [ Location => URI->new($service)->as_string ], [] ] );
         for my $s ( $self->ipath, $self->ipath . 'Path' ) {
             $self->logger->debug("Removing $s from pdata")
               if delete $req->pdata->{$s};
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
index 9be9d440e..4bd4b4817 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Issuer/OpenIDConnect.pm
@@ -195,32 +195,97 @@ sub run {
             $self->logger->debug(
                 "OIDC $flow flow requested (response type: $response_type)");
 
-            # Extract request_uri/request parameter
-            if ( $oidc_request->{'request_uri'} ) {
-                my $request =
-                  $self->getRequestJWT( $oidc_request->{'request_uri'} );
+            # Client ID must be provided and cannot come from
+            # request or request_uri
+            unless ( $oidc_request->{'client_id'} ) {
+                $self->logger->error("Client ID is required");
+                return PE_ERROR;
+            }
+
+            # Check client_id
+            my $client_id = $oidc_request->{'client_id'};
+            $self->logger->debug("Request from client id $client_id");
+
+            # Verify that client_id is registered in configuration
+            my $rp = $self->getRP($client_id);
+
+            unless ($rp) {
+                $self->logger->error(
+                        "No registered Relying Party found with"
+                      . " client_id $client_id" );
+                return PE_UNAUTHORIZEDPARTNER;
+            }
+            else {
+                $self->logger->debug("Client id $client_id matches RP $rp");
+            }
 
-                if ($request) {
-                    $oidc_request->{'request'} = $request;
+            # Scope must be provided and cannot come from request or request_uri
+            unless ( $oidc_request->{'scope'} ) {
+                $self->logger->error("Scope is required");
+                return PE_ERROR;
+            }
+
+            # Extract request_uri/request parameter
+            if ( my $request_uri = $oidc_request->{'request_uri'} ) {
+                if (
+                    $self->isUriAllowedForRP(
+                        $request_uri,                       $rp,
+                        "oidcRPMetaDataOptionsRequestUris", 1
+                    )
+                  )
+                {
+                    my $request = $self->getRequestJWT($request_uri);
+                    if ($request) {
+                        $oidc_request->{'request'} = $request;
+                    }
+                    else {
+                        $self->logger->error(
+                            "Error with Request URI resolution");
+                        return PE_ERROR;
+                    }
                 }
                 else {
-                    $self->logger->error("Error with Request URI resolution");
+                    $self->logger->error(
+                        "Request URI $request_uri is not allowed for $rp");
                     return PE_ERROR;
                 }
             }
 
             if ( $oidc_request->{'request'} ) {
-                my $request =
-                  $self->getJWTJSONData( $oidc_request->{'request'} );
-
-                # Override OIDC parameters by request content
-                foreach ( keys %$request ) {
-                    $self->logger->debug(
-"Override $_ OIDC param by value present in request parameter"
-                    );
-                    $oidc_request->{$_} = $request->{$_};
-                    $self->p->setHiddenFormValue( $req, $_, $request->{$_}, '',
-                        0 );
+                if (
+                    $self->verifyJWTSignature(
+                        $oidc_request->{'request'},
+                        undef, $rp
+                    )
+                  )
+                {
+                    $self->logger->debug("JWT signature request verified");
+                    my $request = getJWTPayload( $oidc_request->{'request'} );
+
+                    # Override OIDC parameters by request content
+                    foreach ( keys %$request ) {
+                        $self->logger->debug( "Override $_ OIDC param"
+                              . " by value present in request parameter" );
+
+                        if ( $_ eq "client_id" or $_ eq "response_type" ) {
+                            if ( $oidc_request->{$_} ne $request->{$_} ) {
+                                $self->logger->error( "$_ from request JWT ("
+                                      . $oidc_request->{$_}
+                                      . ") does not match $_ from request URI ("
+                                      . $request->{$_}
+                                      . ")" );
+                                return PE_ERROR;
+                            }
+                        }
+                        $oidc_request->{$_} = $request->{$_};
+                        $self->p->setHiddenFormValue( $req, $_, $request->{$_},
+                            '', 0 );
+                    }
+                }
+                else {
+                    $self->logger->error(
+                        "JWT signature request can not be verified");
+                    return PE_ERROR;
                 }
             }
 
@@ -229,37 +294,12 @@ sub run {
                 $self->logger->error("Redirect URI is required");
                 return PE_ERROR;
             }
-            unless ( $oidc_request->{'scope'} ) {
-                $self->logger->error("Scope is required");
-                return PE_ERROR;
-            }
-            unless ( $oidc_request->{'client_id'} ) {
-                $self->logger->error("Client ID is required");
-                return PE_ERROR;
-            }
             if ( $flow eq "implicit" and not defined $oidc_request->{'nonce'} )
             {
                 $self->logger->error("Nonce is required for implicit flow");
                 return PE_ERROR;
             }
 
-            # Check client_id
-            my $client_id = $oidc_request->{'client_id'};
-            $self->logger->debug("Request from client id $client_id");
-
-            # Verify that client_id is registered in configuration
-            my $rp = $self->getRP($client_id);
-
-            unless ($rp) {
-                $self->logger->error(
-"No registered Relying Party found with client_id $client_id"
-                );
-                return PE_UNAUTHORIZEDPARTNER;
-            }
-            else {
-                $self->logger->debug("Client id $client_id matches RP $rp");
-            }
-
             # Check if this RP is authorized
             if ( my $rule = $self->spRules->{$rp} ) {
                 unless ( $rule->( $req, $req->sessionInfo ) ) {
@@ -276,19 +316,15 @@ sub run {
 
             # Check redirect_uri
             my $redirect_uri  = $oidc_request->{'redirect_uri'};
-            my $redirect_uris = $self->conf->{oidcRPMetaDataOptions}->{$rp}
-              ->{oidcRPMetaDataOptionsRedirectUris};
-
-            if ($redirect_uris) {
-                my $redirect_uri_allowed = 0;
-                foreach ( split( /\s+/, $redirect_uris ) ) {
-                    $redirect_uri_allowed = 1 if $redirect_uri eq $_;
-                }
-                unless ($redirect_uri_allowed) {
-                    $self->userLogger->error(
-                        "Redirect URI $redirect_uri not allowed");
-                    return PE_BADURL;
-                }
+            if (
+                !$self->isUriAllowedForRP(
+                    $redirect_uri, $rp, 'oidcRPMetaDataOptionsRedirectUris'
+                )
+              )
+            {
+                $self->userLogger->error(
+                    "Redirect URI $redirect_uri not allowed");
+                return 37; # PE_BADURL value
             }
 
             # Check if flow is allowed
@@ -391,24 +427,6 @@ sub run {
                 return PE_OK;
             }
 
-            # Check Request JWT signature
-            if ( $oidc_request->{'request'} ) {
-                unless (
-                    $self->verifyJWTSignature(
-                        $oidc_request->{'request'},
-                        undef, $rp
-                    )
-                  )
-                {
-                    $self->logger->error(
-                        "JWT signature request can not be verified");
-                    return PE_ERROR;
-                }
-                else {
-                    $self->logger->debug("JWT signature request verified");
-                }
-            }
-
             # Check id_token_hint
             my $id_token_hint = $oidc_request->{'id_token_hint'};
             if ($id_token_hint) {
@@ -951,27 +969,13 @@ sub run {
 
                 if ($post_logout_redirect_uri) {
 
-                    # Check redirect URI is allowed
-                    my $redirect_uri_allowed = 0;
-                    foreach ( keys %{ $self->conf->{oidcRPMetaDataOptions} } ) {
-                        my $logout_rp = $_;
-                        if ( my $redirect_uris =
-                            $self->conf->{oidcRPMetaDataOptions}->{$logout_rp}
-                            ->{oidcRPMetaDataOptionsPostLogoutRedirectUris} )
-                        {
-
-                            foreach ( split( /\s+/, $redirect_uris ) ) {
-                                if ( $post_logout_redirect_uri eq $_ ) {
-                                    $self->logger->debug(
-"$post_logout_redirect_uri is an allowed logout redirect URI for RP $logout_rp"
-                                    );
-                                    $redirect_uri_allowed = 1;
-                                }
-                            }
-                        }
-                    }
-
-                    unless ($redirect_uri_allowed) {
+                    unless (
+                        $self->findRPFromUri(
+                            $post_logout_redirect_uri,
+                            'oidcRPMetaDataOptionsPostLogoutRedirectUris'
+                        )
+                      )
+                    {
                         $self->logger->error(
                             "$post_logout_redirect_uri is not allowed");
                         return PE_BADURL;
@@ -1003,6 +1007,43 @@ sub run {
     return PE_ERROR;
 }
 
+sub findRPFromUri {
+    my ( $self, $uri, $option ) = @_;
+
+    my $found_rp;
+    foreach my $rp ( keys %{ $self->conf->{oidcRPMetaDataOptions} } ) {
+        $found_rp = $rp if $self->isUriAllowedForRP( $uri, $rp, $option );
+    }
+    return $found_rp;
+}
+
+sub isUriAllowedForRP {
+    my ( $self, $uri, $rp, $option, $wildcard_allowed ) = @_;
+    my $allowed_uris = $self->conf->{oidcRPMetaDataOptions}->{$rp}->{$option} // "";
+
+    my $is_uri_allowed;
+    if ($wildcard_allowed) {
+        $is_uri_allowed =
+          grep { _wildcard_match( $_, $uri ) } split( /\s+/, $allowed_uris );
+    }
+    else {
+        $is_uri_allowed = grep { $_ eq $uri } split( /\s+/, $allowed_uris );
+    }
+    return $is_uri_allowed;
+}
+
+sub _wildcard_match {
+    my ( $config_url, $candidate ) = @_;
+
+    # Quote everything
+    my $config_re = $config_url =~ s/(.)/\Q$1/gr;
+
+    # Replace \* by .*
+    $config_re =~ s/\\\*/.*/g;
+
+    return ( $candidate =~ qr/^$config_re$/ ? 1 : 0 );
+}
+
 # Handle token endpoint
 sub token {
     my ( $self, $req ) = @_;
@@ -1911,6 +1952,7 @@ sub registration {
     my $userinfo_signed_response_alg =
       $client_metadata->{userinfo_signed_response_alg};
     my $redirect_uris = $client_metadata->{redirect_uris};
+    my $request_uris  = $client_metadata->{request_uris};
 
     # Register RP in global configuration
     my $conf = $self->confAcc->getConf( { raw => 1, noCache => 1 } );
@@ -1932,6 +1974,9 @@ sub registration {
       = $id_token_signed_response_alg;
     $conf->{oidcRPMetaDataOptions}->{$rp}->{oidcRPMetaDataOptionsRedirectUris}
       = join( ' ', @$redirect_uris );
+    $conf->{oidcRPMetaDataOptions}->{$rp}->{oidcRPMetaDataOptionsRequestUris} =
+      join( ' ', @$request_uris )
+      if $request_uris and @$request_uris;
     $conf->{oidcRPMetaDataOptions}->{$rp}
       ->{oidcRPMetaDataOptionsUserInfoSignAlg} = $userinfo_signed_response_alg
       if defined $userinfo_signed_response_alg;
@@ -1969,6 +2014,8 @@ sub registration {
         $registration_response->{'id_token_signed_response_alg'} =
           $id_token_signed_response_alg;
         $registration_response->{'redirect_uris'} = $redirect_uris;
+        $registration_response->{'request_uris'}  = $request_uris
+          if $request_uris and @$request_uris;
         $registration_response->{'userinfo_signed_response_alg'} =
           $userinfo_signed_response_alg
           if defined $userinfo_signed_response_alg;
@@ -1995,25 +2042,13 @@ sub endSessionDone {
 
     if ($post_logout_redirect_uri) {
 
-        # Check redirect URI is allowed
-        my $redirect_uri_allowed = 0;
-        foreach ( keys %{ $self->conf->{oidcRPMetaDataOptions} } ) {
-            my $logout_rp = $_;
-            my $redirect_uris =
-              $self->conf->{oidcRPMetaDataOptions}->{$logout_rp}
-              ->{oidcRPMetaDataOptionsPostLogoutRedirectUris};
-
-            foreach ( split( /\s+/, $redirect_uris ) ) {
-                if ( $post_logout_redirect_uri eq $_ ) {
-                    $self->logger->debug(
-"$post_logout_redirect_uri is an allowed logout redirect URI for RP $logout_rp"
-                    );
-                    $redirect_uri_allowed = 1;
-                }
-            }
-        }
-
-        unless ($redirect_uri_allowed) {
+        unless (
+            $self->findRPFromUri(
+                $post_logout_redirect_uri,
+                'oidcRPMetaDataOptionsPostLogoutRedirectUris'
+            )
+          )
+        {
             $self->logger->error("$post_logout_redirect_uri is not allowed");
             return $self->p->login($req);
         }
@@ -2196,7 +2231,7 @@ sub metadata {
             claims_supported                 => [qw/sub iss auth_time acr/],
             request_parameter_supported      => JSON::true,
             request_uri_parameter_supported  => JSON::true,
-            require_request_uri_registration => JSON::false,
+            require_request_uri_registration => JSON::true,
 
             # Algorithms
             id_token_signing_alg_values_supported =>
@@ -2248,19 +2283,7 @@ sub exportRequestParameters {
         }
     }
 
-    # Extract request_uri/request parameter
-    my $request = $req->param('request');
-    if ( $req->param('request_uri') ) {
-        $request = $self->getRequestJWT( $req->param('request_uri') );
-    }
-
-    if ($request) {
-        my $request_data = $self->getJWTJSONData($request);
-        foreach ( keys %$request_data ) {
-            $req->env->{ "llng_oidc_" . $_ } = $request_data->{$_};
-        }
-    }
-
+    my $rp;
     if ( $req->param('client_id') ) {
         my $rp = $self->getRP( $req->param('client_id') );
         $req->env->{"llng_oidc_rp"} = $rp if $rp;
@@ -2272,6 +2295,27 @@ sub exportRequestParameters {
           if $targetAuthnLevel;
     }
 
+    # Extract request_uri/request parameter
+    my $request = $req->param('request');
+    if ( my $request_uri = $req->param('request_uri') ) {
+        if (
+            $rp
+            and $self->isUriAllowedForRP(
+                $request_uri, $rp, 'oidcRPMetaDataOptionsRequestUris', 1
+            )
+          )
+        {
+            $request = $self->getRequestJWT($request_uri);
+        }
+    }
+
+    if ($request) {
+        my $request_data = getJWTPayload($request);
+        foreach ( keys %$request_data ) {
+            $req->env->{ "llng_oidc_" . $_ } = $request_data->{$_};
+        }
+    }
+
     return PE_OK;
 }
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
index 0c88fe4b7..3aefdc93e 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/OpenIDConnect.pm
@@ -16,6 +16,7 @@ use Lemonldap::NG::Common::FormEncode;
 use Lemonldap::NG::Common::UserAgent;
 use MIME::Base64 qw/encode_base64 decode_base64/;
 use Mouse;
+use URI;
 
 use Lemonldap::NG::Portal::Main::Constants qw(PE_OK PE_REDIRECT);
 
@@ -1684,7 +1685,7 @@ sub buildLogoutResponse {
         $response_url .= build_urlencoded( state => $state );
     }
 
-    return $response_url;
+    return URI->new($response_url)->as_string;
 }
 
 # Create session_state parameter
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SAML.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SAML.pm
index 937df07a7..d6342cdf8 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SAML.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SAML.pm
@@ -2493,7 +2493,7 @@ sub sendLogoutResponseToServiceProvider {
 
         # Redirect user to response URL
         my $slo_url = $logout->msg_url;
-        return [ 302, [ Location => $slo_url ], [] ];
+        return [ 302, [ Location => URI->new($slo_url)->as_string ], [] ];
     }
 
     # HTTP-POST
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SMTP.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SMTP.pm
index 60462bfd2..490712059 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SMTP.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Lib/SMTP.pm
@@ -49,6 +49,7 @@ sub loadMailTemplate {
     # HTML::Template cache interferes with email translation (#1897)
     $prm{cache} = 0 unless defined $prm{cache};
     $prm{params}->{STATIC_PREFIX} = $self->p->staticPrefix;
+    $prm{params}->{MAIN_LOGO}     = $self->conf->{portalMainLogo};
     my %extra =
         $self->p->can('tplParams')
       ? $self->p->tplParams($req)
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Display.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Display.pm
index 69f94bf7f..2f872ce9a 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Display.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Display.pm
@@ -496,12 +496,16 @@ sub display {
             if ( $self->conf->{authentication} eq 'Choice'
                 and my $authLoop = $self->_buildAuthLoop($req) )
             {
+                my $tab = $req->param("tab");
+                if ($tab) {
+                    $tab = undef unless grep { $_->{key} eq $tab } @$authLoop;
+                }
                 %templateParams = (
                     %templateParams,
                     AUTH_LOOP            => $authLoop,
                     CHOICE_PARAM         => $self->conf->{authChoiceParam},
                     CHOICE_VALUE         => $req->data->{_authChoice},
-                    DISPLAY_TAB          => scalar( $req->param("tab") ),
+                    DISPLAY_TAB          => $tab,
                     DISPLAY_FORM         => 0,
                     DISPLAY_OPENID_FORM  => 0,
                     DISPLAY_YUBIKEY_FORM => 0,
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Init.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Init.pm
index b742783b9..69bc6725d 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Init.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Init.pm
@@ -391,7 +391,7 @@ sub reloadConf {
             }
         }
 
-        my $tmp = 'https?://' . $re->as_string . '(?::\d+)?(?:/|$)';
+        my $tmp = '^https?://' . $re->as_string . '(?::\d+)?(?:/|$)';
         $self->trustedDomainsRe(qr/$tmp/);
 
     }
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Process.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Process.pm
index 950cd1d7d..f9315c9f8 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Process.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Process.pm
@@ -8,6 +8,7 @@ use strict;
 use MIME::Base64;
 use POSIX qw(strftime);
 use Lemonldap::NG::Portal::Main::Constants qw(portalConsts);
+use URI;
 
 # Main method
 # -----------
@@ -131,6 +132,7 @@ sub controlUrl {
                 $req->{urldc} =~ s/[\r\n]//sg;
             }
         }
+        $req->{urldc} = URI->new( $req->{urldc} )->as_string;
 
         # For logout request, test if Referer comes from an authorized site
         my $tmp = (
@@ -152,12 +154,19 @@ sub controlUrl {
         }
 
         # Unprotected hosts
-        my ( $proto, $vhost, $appuri ) = $tmp =~ m#^(https?://)([^/]*)(.*)#;
-        $vhost =~ s/:\d+$//;
+        my ( $proto, $vhost, $appuri );
+        if ($tmp) {
+            my $u = URI->new($tmp);
+            if ( $u->scheme =~ /^https?$/ ) {
+                $proto  = $u->scheme;
+                $vhost  = $u->host if $u->can("host");
+                $appuri = $u->path_query;
+            }
+        }
 
         # Try to resolve alias
         my $originalVhost = $self->HANDLER->resolveAlias($vhost);
-        $vhost = $proto . $originalVhost;
+        $vhost = $proto . '://' . $originalVhost;
         $self->logger->debug( "Required URL (param: "
               . ( $req->param('logout') ? 'HTTP Referer' : 'urldc' )
               . " | value: $tmp | alias: $vhost)" );
@@ -333,6 +342,11 @@ sub checkXSSAttack {
             "XSS attack detected (param: $name | value: $value)");
         return $self->conf->{checkXSS};
     }
+    if ( $value =~ m/#/ ) {
+        $self->userLogger->error(
+            "Browser parameters in URL (param: $name | value: $value)");
+        return $self->conf->{checkXSS};
+    }
     return 0;
 }
 
@@ -475,8 +489,6 @@ sub setPersistentSessionInfo {
     # $user passed by BruteForceProtection plugin
     my ( $self, $req, $user ) = @_;
 
-    # Do not restore infos if session already opened
-    unless ( $req->id ) {
         my $key = $req->{sessionInfo}->{ $self->conf->{whatToTrace} } || $user;
         return PE_OK unless ( $key and length($key) );
 
@@ -492,7 +504,6 @@ sub setPersistentSessionInfo {
                 $req->{sessionInfo}->{$k} = $persistentSession->data->{$k};
             }
         }
-    }
     PE_OK;
 }
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Run.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Run.pm
index 5474826a0..a205dcb8b 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Run.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Main/Run.pm
@@ -402,7 +402,13 @@ sub autoRedirect {
                 $self->logger->info("Force cleaning pdata");
                 delete $req->{pdata}->{_url};
             }
-            return [ 302, [ Location => $req->{urldc}, $req->spliceHdrs ], [] ];
+            return [
+                302,
+                [
+                    Location => URI->new( $req->{urldc} )->as_string,
+                ],
+                []
+            ];
         }
     }
     my ( $tpl, $prms ) = $self->display($req);
@@ -885,14 +891,14 @@ sub sendHtml {
     my $csp = $self->csp . "form-action " . $self->conf->{cspFormAction};
     if ( my $url = $req->urldc ) {
         $self->logger->debug("Required urldc : $url");
-        $url =~ s#(https?://[^/]+).*#$1#;
+        $url =~ s#^(https?://[^/]+).*#$1#;
         $self->logger->debug("Set CSP form-action with urldc : $url");
         $csp .= " $url";
     }
     my $url = $args{params}->{URL};
     if ( defined $url ) {
         $self->logger->debug("Required Params URL : $url");
-        if ( $url =~ s#(https?://[^/]+).*#$1# ) {
+        if ( $url =~ s#^(https?://[^/]+).*#$1# ) {
             $self->logger->debug("Set CSP form-action with Params URL : $url");
             $csp .= " $url";
         }
@@ -932,7 +938,7 @@ sub sendHtml {
     # Check if frames need to be embedded
     my @url;
     if ( $req->info ) {
-        @url = map { s#https?://([^/]+).*#$1#; $_ }
+        @url = map { s#^https?://([^/]+).*#$1#; $_ }
           ( $req->info =~ /<iframe.*?src="(.*?)"/sg );
     }
     if (@url) {
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/AdaptativeAuthenticationLevel.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/AdaptativeAuthenticationLevel.pm
index 65af16ca5..bbcddeefb 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/AdaptativeAuthenticationLevel.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/AdaptativeAuthenticationLevel.pm
@@ -37,6 +37,8 @@ sub init {
 sub adaptAuthenticationLevel {
     my ( $self, $sub, $req ) = @_;
 
+    return $sub->($req) if $req->refresh;
+
     my $userid = $req->sessionInfo->{ $self->conf->{whatToTrace} };
     $self->logger->debug("Check adaptative authentication rules for $userid");
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CertificateResetByMail.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CertificateResetByMail.pm
index d818393aa..a9b93402c 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CertificateResetByMail.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CertificateResetByMail.pm
@@ -129,7 +129,7 @@ sub certificateReset {
 
 sub _certificateReset {
     my ( $self, $req ) = @_;
-    my ( $mailToken, %tplPrms );
+    my ($mailToken);
 
     # CertificatReset FORM => modifyCertificate()
     if ( $req->method =~ /^POST$/i
@@ -359,7 +359,6 @@ sub _certificateReset {
           );
 
         # Build mail content
-        $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
         my $tr      = $self->translate($req);
         my $subject = $self->conf->{certificateResetByMailStep1Subject};
         unless ($subject) {
@@ -380,12 +379,18 @@ sub _certificateReset {
                 $req,
                 'mail_certificateConfirm',
                 filter => $tr,
-                params => \%tplPrms
+                params => {
+                    expMailDate => $req->data->{expMailDate},
+                    expMailTime => $req->data->{expMailTime},
+                    url         => $url,
+                },
             );
             $html = 1;
         }
 
         # Replace variables in body
+        # FIXME: kept for compatibility with 2.0.0 mail templates
+        # in future versions this should only happen for plaintext emails
         $body =~ s/\$expMailDate/$req->data->{expMailDate}/ge;
         $body =~ s/\$expMailTime/$req->data->{expMailTime}/ge;
         $body =~ s/\$url/$url/g;
@@ -420,7 +425,6 @@ sub _certificateReset {
 
 sub modifyCertificate {
     my ( $self, $req ) = @_;
-    my %tplPrms;
     my $nbio;
     my $x509;
     my $notAfter;
@@ -539,7 +543,6 @@ sub modifyCertificate {
         $req->{sessionInfo}->{ $self->conf->{mailSessionKey} } );
 
     # Build mail content
-    $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
     my $tr      = $self->translate($req);
     my $subject = $self->conf->{certificateResetByMailStep2Subject};
     unless ($subject) {
@@ -560,12 +563,14 @@ sub modifyCertificate {
             $req,
             'mail_certificateReset',
             filter => $tr,
-            params => \%tplPrms
+            params => {},
         );
         $html = 1;
     }
 
     # Replace variables in body
+    # FIXME: kept for compatibility with 2.0.0 mail templates
+    # in future versions this should only happen for plaintext emails
     $body =~ s/\$(\w+)/$req->{sessionInfo}->{$1} || ''/ge;
 
     # Send mail
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CheckState.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CheckState.pm
index f3fc4cc81..6f9f7c0c9 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CheckState.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/CheckState.pm
@@ -41,16 +41,22 @@ sub check {
 
     if ( my $user = $req->param('user') and my $pwd = $req->param('password') )
     {
-        $req->user($user);
-        $req->data->{password} = $pwd;
+        $req->parameters->{user}     = ($user);
+        $req->parameters->{password} = $pwd;
+        $req->data->{skipToken}      = 1;
+
+        # This makes Auth::Choice use authChoiceAuthBasic if defined
+        $req->data->{_pwdCheck} = 1;
 
         # Not launched methods:
-        #  - "extractFormInfo" due to "token"
         #  - "buildCookie" useless here
         $req->steps( [
-                'getUser',                         'authenticate',
-                @{ $self->p->betweenAuthAndData }, $self->p->sessionData,
-                @{ $self->p->afterData },          'storeHistory',
+                @{ $self->p->beforeAuth },
+                $self->p->authProcess,
+                @{ $self->p->betweenAuthAndData },
+                $self->p->sessionData,
+                @{ $self->p->afterData },
+                'storeHistory',
                 @{ $self->p->endAuth }
             ]
         );
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/MailPasswordReset.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/MailPasswordReset.pm
index 19b2b7d5c..0662e42d2 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/MailPasswordReset.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/MailPasswordReset.pm
@@ -91,7 +91,7 @@ sub resetPwd {
 
 sub _reset {
     my ( $self, $req ) = @_;
-    my ( $mailToken, %tplPrms );
+    my ($mailToken);
 
     # PASSWORD CHANGE FORM => changePwd()
     if (
@@ -323,7 +323,6 @@ sub _reset {
           );
 
         # Build mail content
-        $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
         my $tr      = $self->translate($req);
         my $subject = $self->conf->{mailConfirmSubject};
         unless ($subject) {
@@ -344,12 +343,18 @@ sub _reset {
                 $req,
                 'mail_confirm',
                 filter => $tr,
-                params => \%tplPrms
+                params => {
+                    expMailDate => $req->data->{expMailDate},
+                    expMailTime => $req->data->{expMailTime},
+                    url         => $url,
+                },
             );
             $html = 1;
         }
 
         # Replace variables in body
+        # FIXME: kept for compatibility with 2.0.0 mail templates
+        # in future versions this should only happen for plaintext emails
         $body =~ s/\$expMailDate/$req->data->{expMailDate}/ge;
         $body =~ s/\$expMailTime/$req->data->{expMailTime}/ge;
         $body =~ s/\$url/$url/g;
@@ -496,7 +501,6 @@ sub changePwd {
         $req->{sessionInfo}->{ $self->conf->{mailSessionKey} } );
 
     # Build mail content
-    $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
     my $tr      = $self->translate($req);
     my $subject = $self->conf->{mailSubject};
     unless ($subject) {
@@ -505,6 +509,8 @@ sub changePwd {
     }
     my $body;
     my $html;
+    my $password = $req->data->{newpassword};
+
     if ( $self->conf->{mailBody} ) {
 
         # We use a specific text message, no html
@@ -517,13 +523,16 @@ sub changePwd {
             $req,
             'mail_password',
             filter => $tr,
-            params => \%tplPrms
+            params => {
+                %tplPrms, password => $password,
+            },
         );
         $html = 1;
     }
 
     # Replace variables in body
-    my $password = $req->data->{newpassword};
+    # FIXME: kept for compatibility with 2.0.0 mail templates
+    # in future versions this should only happen for plaintext emails
     $body =~ s/\$password/$password/g;
     $body =~ s/\$(\w+)/$req->{sessionInfo}->{$1} || ''/ge;
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/RESTServer.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/RESTServer.pm
index adb75de83..200a7efcc 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/RESTServer.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/RESTServer.pm
@@ -293,7 +293,7 @@ sub newSession {
       unless ($session);
 
     $self->logger->debug(
-        "SOAP request create a new session (" . $session->id . ")" );
+        "REST request create a new session (" . $session->id . ")" );
 
     return $self->p->sendJSONresponse( $req,
         { result => 1, session => $session->data } );
@@ -308,13 +308,14 @@ sub newAuthSession {
         return $self->p->sendError( $req, 'Bad secret', 403 );
     }
 
+    $req->env->{AuthBasic} = 1;
     $req->{id}    = $id;
     $req->{force} = 1;
     $req->user( $req->param('user') );
     $req->data->{password} = $req->param('password');
     $req->steps( [
             @{ $self->p->beforeAuth },
-            qw(getUser extractFormInfo authenticate setAuthSessionInfo),
+            $self->p->authProcess,
             @{ $self->p->betweenAuthAndData },
             $self->p->sessionData,
             @{ $self->p->afterData },
@@ -326,7 +327,8 @@ sub newAuthSession {
     $self->logger->debug(
         "REST authentication result for $req->{user}: code $req->{error}");
 
-    if ( $req->error > 0 ) {
+    if ( $req->error != 0 ) {
+        $self->p->deleteSession($req);
         return $self->p->sendError( $req, 'Bad credentials', 401 );
     }
     return $self->session( $req, $id );
@@ -681,11 +683,13 @@ sub pwdConfirm {
             400 );
     }
 
-    $req->user($user);
-    $req->data->{password} = $password;
+    $req->parameters->{user}     = $user;
+    $req->parameters->{password} = $password;
+    $req->data->{_pwdCheck}      = 1;
+    $req->data->{skipToken}      = 1;
 
     if ( $self->p->_userDB ) {
-        $req->steps( [ 'getUser', 'authenticate' ] );
+        $req->steps( [ $self->p->authProcess ] );
         my $result = $self->p->process($req);
         if ( $result == PE_PASSWORD_OK or $result == PE_OK ) {
             return $self->p->sendJSONresponse( $req,
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Register.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Register.pm
index acac9f795..3834a8b99 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Register.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Register.pm
@@ -114,7 +114,6 @@ sub register {
 # Parameters check
 sub _register {
     my ( $self, $req ) = @_;
-    my %tplPrms;
 
     # Check if it's a first access
     unless ( ( $req->method =~ /^POST$/i and $req->param('mail') )
@@ -301,7 +300,6 @@ sub _register {
           );
 
         # Build mail content
-        $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
         my $tr      = $self->translate($req);
         my $subject = $self->conf->{registerConfirmSubject};
         unless ($subject) {
@@ -316,10 +314,17 @@ sub _register {
             $req,
             'mail_register_confirm',
             filter => $tr,
-            params => \%tplPrms
+            params => {
+                expMailDate => $req->data->{expMailDate},
+                expMailTime => $req->data->{expMailTime},
+                url         => $url,
+                %{ $req->data->{registerInfo} || {} },
+            },
         );
 
         # Replace variables in body
+        # FIXME: kept for compatibility with 2.0.0 mail templates
+        # in future versions this should only happen for plaintext emails
         $body =~ s/\$expMailDate/$req->data->{expMailDate}/g;
         $body =~ s/\$expMailTime/$req->data->{expMailTime}/g;
         $body =~ s/\$url/$url/g;
@@ -361,7 +366,6 @@ sub _register {
     }
 
     # Build mail content
-    $tplPrms{MAIN_LOGO} = $self->conf->{portalMainLogo};
     my $tr      = $self->translate($req);
     my $subject = $self->conf->{registerDoneSubject};
     unless ($subject) {
@@ -371,14 +375,6 @@ sub _register {
     my $body;
     my $html = 1;
 
-    # Use HTML template
-    $body = $self->loadMailTemplate(
-        $req,
-        'mail_register_done',
-        filter => $tr,
-        params => \%tplPrms
-    );
-
     # Build portal url
     my $url = $self->conf->{portal};
     $url =~ s#/*$##;
@@ -390,7 +386,20 @@ sub _register {
         ( $req_url ? ( url => $req_url ) : () ),
       );
 
+    # Use HTML template
+    $body = $self->loadMailTemplate(
+        $req,
+        'mail_register_done',
+        filter => $tr,
+        params => {
+            url => $url,
+            %{ $req->data->{registerInfo} || {} },
+        },
+    );
+
     # Replace variables in body
+    # FIXME: kept for compatibility with 2.0.0 mail templates
+    # in future versions this should only happen for plaintext emails
     $body =~ s/\$url/$url/g;
     $body =~ s/\$(\w+)/$req->data->{registerInfo}->{$1}/ge;
 
diff --git a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Upgrade.pm b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Upgrade.pm
index 63b88c408..dccb3385d 100644
--- a/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Upgrade.pm
+++ b/lemonldap-ng-portal/lib/Lemonldap/NG/Portal/Plugins/Upgrade.pm
@@ -78,6 +78,8 @@ sub ask {
     $self->logger->debug(" -> Skip confirmation is enabled")
       if $self->conf->{"skip${action}Confirmation"};
 
+    $url = '' if $self->p->checkXSSAttack('url', $url);
+
     # Display form
     return $self->p->sendHtml(
         $req,
diff --git a/lemonldap-ng-portal/site/coffee/2fregistration.coffee b/lemonldap-ng-portal/site/coffee/2fregistration.coffee
index 5b39bfc31..e2040f858 100644
--- a/lemonldap-ng-portal/site/coffee/2fregistration.coffee
+++ b/lemonldap-ng-portal/site/coffee/2fregistration.coffee
@@ -34,6 +34,8 @@ delete2F = (device, epoch) ->
 			url: "#{portal}2fregisters/#{device}/delete"
 			data:
 				epoch: epoch
+			headers:
+				"X-CSRF-Check": 1
 			dataType: 'json'
 			error: displayError
 			success: (resp) ->
diff --git a/lemonldap-ng-portal/site/coffee/portal.coffee b/lemonldap-ng-portal/site/coffee/portal.coffee
index 4438b993c..526eb7304 100644
--- a/lemonldap-ng-portal/site/coffee/portal.coffee
+++ b/lemonldap-ng-portal/site/coffee/portal.coffee
@@ -279,9 +279,6 @@ $(window).on 'load', () ->
 	if datas['choicetab']
 		authMenuTabs.tabs "option", "active", $('#authMenu a[href="#' + datas['choicetab'] + '"]').parent().index()
 
-	if datas['login']
-		$("input[type=password]:first").focus()
-	else
 		# If there are no auto-focused fields, focus on first visible input
 		if $("input[autofocus]").length == 0
 			$("input[type!=hidden]:first").focus();
diff --git a/lemonldap-ng-portal/site/coffee/totpregistration.coffee b/lemonldap-ng-portal/site/coffee/totpregistration.coffee
index 8c4be7e36..fcb14c86d 100644
--- a/lemonldap-ng-portal/site/coffee/totpregistration.coffee
+++ b/lemonldap-ng-portal/site/coffee/totpregistration.coffee
@@ -25,6 +25,8 @@ getKey = (reset) ->
 		type: "POST",
 		url: "#{portal}/2fregisters/totp/getkey"
 		dataType: 'json'
+		headers:
+			"X-CSRF-Check": 1
 		data:
 			newkey: reset
 		error: displayError
@@ -71,6 +73,8 @@ verify = ->
 				token: token
 				code: val
 				TOTPName: $('#TOTPName').val()
+			headers:
+				"X-CSRF-Check": 1
 			error: displayError
 			success: (data) ->
 				if data.error
diff --git a/lemonldap-ng-portal/site/htdocs/static/common/js/2fregistration.js b/lemonldap-ng-portal/site/htdocs/static/common/js/2fregistration.js
index 2f2d30c59..dd5a72d09 100644
--- a/lemonldap-ng-portal/site/htdocs/static/common/js/2fregistration.js
+++ b/lemonldap-ng-portal/site/htdocs/static/common/js/2fregistration.js
@@ -48,6 +48,9 @@ LemonLDAP::NG 2F registration script
       data: {
         epoch: epoch
       },
+      headers: {
+        "X-CSRF-Check": 1
+      },
       dataType: 'json',
       error: displayError,
       success: function(resp) {
diff --git a/lemonldap-ng-portal/site/htdocs/static/common/js/portal.js b/lemonldap-ng-portal/site/htdocs/static/common/js/portal.js
index 5664cae94..314afd214 100644
--- a/lemonldap-ng-portal/site/htdocs/static/common/js/portal.js
+++ b/lemonldap-ng-portal/site/htdocs/static/common/js/portal.js
@@ -271,13 +271,9 @@ LemonLDAP::NG Portal jQuery scripts
     if (datas['choicetab']) {
       authMenuTabs.tabs("option", "active", $('#authMenu a[href="#' + datas['choicetab'] + '"]').parent().index());
     }
-    if (datas['login']) {
-      $("input[type=password]:first").focus();
-    } else {
       if ($("input[autofocus]").length === 0) {
         $("input[type!=hidden]:first").focus();
       }
-    }
     if (datas['newwindow']) {
       $('#appslist a').attr("target", "_blank");
     }
diff --git a/lemonldap-ng-portal/site/htdocs/static/common/js/totpregistration.js b/lemonldap-ng-portal/site/htdocs/static/common/js/totpregistration.js
index 720897af1..2b5290b91 100644
--- a/lemonldap-ng-portal/site/htdocs/static/common/js/totpregistration.js
+++ b/lemonldap-ng-portal/site/htdocs/static/common/js/totpregistration.js
@@ -36,6 +36,9 @@ LemonLDAP::NG TOTP registration script
       type: "POST",
       url: portal + "/2fregisters/totp/getkey",
       dataType: 'json',
+      headers: {
+        "X-CSRF-Check": 1
+      },
       data: {
         newkey: reset
       },
@@ -90,6 +93,9 @@ LemonLDAP::NG TOTP registration script
           code: val,
           TOTPName: $('#TOTPName').val()
         },
+        headers: {
+          "X-CSRF-Check": 1
+        },
         error: displayError,
         success: function(data) {
           if (data.error) {
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/ar.json b/lemonldap-ng-portal/site/htdocs/static/languages/ar.json
index 19c1f0296..70670ddc5 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/ar.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/ar.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"استمر",
 "createAccount":"انشئ حساب",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"كلمة المرور الحالية",
 "date":"تاريخ",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/de.json b/lemonldap-ng-portal/site/htdocs/static/languages/de.json
index 12d3501c6..1ea460dc7 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/de.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/de.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Weiter",
 "createAccount":"Konto erstellen",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Aktuelles Passwort",
 "date":"Datum",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/en.json b/lemonldap-ng-portal/site/htdocs/static/languages/en.json
index 00ae8c58e..9a6c1b42d 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/en.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/en.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Continue",
 "createAccount":"Create an account",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Current password",
 "date":"Date",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/es.json b/lemonldap-ng-portal/site/htdocs/static/languages/es.json
index 1df0a6140..02feaf27f 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/es.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/es.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Parar suplantación",
 "continue":"Continuar",
 "createAccount":"Crear una cuenta",
+"csrfError":"CSRF check failed",
 "current":"Actual",
 "currentPwd":"Contraseña actual",
 "date":"Fecha",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/fi.json b/lemonldap-ng-portal/site/htdocs/static/languages/fi.json
index f924f701d..9c9e2a638 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/fi.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/fi.json
@@ -145,6 +145,8 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Jatka",
 "createAccount":"Rekisteröidy",
+"csrfError":"CSRF check failed",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Nykyinen salasana",
 "date":"Päivämäärä",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/fr.json b/lemonldap-ng-portal/site/htdocs/static/languages/fr.json
index c01157c60..ea68dc858 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/fr.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/fr.json
@@ -145,6 +145,7 @@
 "connect":"Se connecter",
 "continue":"Continuer",
 "createAccount":"Créer un compte",
+"csrfError":"CSRF check failed",
 "current":"Courante",
 "currentPwd":"Mot de passe actuel",
 "date":"Date",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/it.json b/lemonldap-ng-portal/site/htdocs/static/languages/it.json
index edcef5822..896382f84 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/it.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/it.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Procedi",
 "createAccount":"Crea un account",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Password attuale",
 "date":"Data",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/nl.json b/lemonldap-ng-portal/site/htdocs/static/languages/nl.json
index 23d126dea..110ecda98 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/nl.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/nl.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Continue",
 "createAccount":"Create an account",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Current password",
 "date":"Date",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/pl.json b/lemonldap-ng-portal/site/htdocs/static/languages/pl.json
index 2529d8d82..5cd9ab6f4 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/pl.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/pl.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Przestań się podszywać",
 "continue":"Kontyntynuj",
 "createAccount":"Utwórz konto",
+"csrfError":"CSRF check failed",
 "current":"Obecny",
 "currentPwd":"Aktualne hasło",
 "date":"Data",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/pt.json b/lemonldap-ng-portal/site/htdocs/static/languages/pt.json
index 440094822..3655ef714 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/pt.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/pt.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Continue",
 "createAccount":"Create an account",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Current password",
 "date":"Date",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/ro.json b/lemonldap-ng-portal/site/htdocs/static/languages/ro.json
index 3c0d3933b..4dd55ccc5 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/ro.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/ro.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Continue",
 "createAccount":"Create an account",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Current password",
 "date":"Date",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/tr.json b/lemonldap-ng-portal/site/htdocs/static/languages/tr.json
index efa8164cb..f9bf13de1 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/tr.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/tr.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Başka bir kullanıcı gibi davranmayı bırak",
 "continue":"Devam Et",
 "createAccount":"Hesap oluştur",
+"csrfError":"CSRF check failed",
 "current":"Geçerli",
 "currentPwd":"Mevcut parola",
 "date":"Tarih",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/vi.json b/lemonldap-ng-portal/site/htdocs/static/languages/vi.json
index f5e4ddfb4..38a6aa9cc 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/vi.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/vi.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"Tiếp tục",
 "createAccount":"Tạo một tài khoản",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"Mật khẩu hiện tại",
 "date":"Ngày",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/zh.json b/lemonldap-ng-portal/site/htdocs/static/languages/zh.json
index 1a0662f18..1dabf097f 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/zh.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/zh.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"Stop impersonation",
 "continue":"继续",
 "createAccount":"创建账户",
+"csrfError":"CSRF check failed",
 "current":"Current",
 "currentPwd":"当前密码",
 "date":"日期",
diff --git a/lemonldap-ng-portal/site/htdocs/static/languages/zh_TW.json b/lemonldap-ng-portal/site/htdocs/static/languages/zh_TW.json
index cb2c43135..f7ffe28d2 100644
--- a/lemonldap-ng-portal/site/htdocs/static/languages/zh_TW.json
+++ b/lemonldap-ng-portal/site/htdocs/static/languages/zh_TW.json
@@ -145,6 +145,7 @@
 "contextSwitching_OFF":"停止模擬",
 "continue":"繼續",
 "createAccount":"建立帳號",
+"csrfError":"CSRF check failed",
 "current":"目前",
 "currentPwd":"目前的密碼",
 "date":"日期",
diff --git a/lemonldap-ng-portal/site/templates/bootstrap/checkuser.tpl b/lemonldap-ng-portal/site/templates/bootstrap/checkuser.tpl
index 2b854ae7d..c33fe5b0f 100644
--- a/lemonldap-ng-portal/site/templates/bootstrap/checkuser.tpl
+++ b/lemonldap-ng-portal/site/templates/bootstrap/checkuser.tpl
@@ -11,7 +11,7 @@
         <div class="input-group-prepend">
           <span class="input-group-text"><label for="userfield" class="mb-0"><i class="fa fa-user"></i></label></span>
         </div>
-        <input id="userfield" name="user" type="text" class="form-control" value="<TMPL_VAR NAME="LOGIN">" trplaceholder="user" aria-required="true"/>
+        <input id="userfield" name="user" type="text" class="form-control" value="<TMPL_VAR NAME="LOGIN" ESCAPE=HTML>" trplaceholder="user" aria-required="true"/>
       </div>
       <div class="input-group mb-3">
         <div class="input-group-prepend">
diff --git a/lemonldap-ng-portal/site/templates/bootstrap/globallogout.tpl b/lemonldap-ng-portal/site/templates/bootstrap/globallogout.tpl
index 72f72e8a9..4a7109668 100644
--- a/lemonldap-ng-portal/site/templates/bootstrap/globallogout.tpl
+++ b/lemonldap-ng-portal/site/templates/bootstrap/globallogout.tpl
@@ -6,7 +6,7 @@
   <div class="row">
     <TMPL_IF NAME="SESSIONS">
     <div class="card col border-secondary">
-      <div class="text-center bg-light text-dark"><b><span trspan="activeSessions">ACTIVE SSO SESSIONS</span>: <u><TMPL_VAR NAME="LOGIN"></u></b></div>
+      <div class="text-center bg-light text-dark"><b><span trspan="activeSessions">ACTIVE SSO SESSIONS</span>: <u><TMPL_VAR NAME="LOGIN" ESCAPE=HTML></u></b></div>
       <table class="table table-sm table-hover text-center">
         <thead>
           <tr>
diff --git a/lemonldap-ng-portal/site/templates/bootstrap/gpgform.tpl b/lemonldap-ng-portal/site/templates/bootstrap/gpgform.tpl
index ecb5cc46c..f0dc19cc1 100644
--- a/lemonldap-ng-portal/site/templates/bootstrap/gpgform.tpl
+++ b/lemonldap-ng-portal/site/templates/bootstrap/gpgform.tpl
@@ -5,7 +5,7 @@
     <div class="input-group-prepend">
       <span class="input-group-text"><label for="userfield" class="mb-0"><i class="fa fa-user"></i></label></span>
     </div>
-    <input id="userfield" name="user" type="text" class="form-control" value="<TMPL_VAR NAME="LOGIN">" trplaceholder="mail" required aria-required="true"/>
+    <input id="userfield" name="user" type="text" class="form-control" value="<TMPL_VAR NAME="LOGIN" ESCAPE=HTML>" trplaceholder="mail" required aria-required="true"/>
   </div>
 
   <div class="input-group mb-3">
diff --git a/lemonldap-ng-portal/site/templates/bootstrap/password.tpl b/lemonldap-ng-portal/site/templates/bootstrap/password.tpl
index 5d6218728..98b105930 100644
--- a/lemonldap-ng-portal/site/templates/bootstrap/password.tpl
+++ b/lemonldap-ng-portal/site/templates/bootstrap/password.tpl
@@ -17,11 +17,11 @@
 
     <TMPL_IF NAME="LOGIN">
     <div class="input-group mb-3">
-      <input name="user" type="hidden" value="<TMPL_VAR NAME=LOGIN>" />
+      <input name="user" type="hidden" value="<TMPL_VAR NAME=LOGIN ESCAPE=HTML>" />
       <div class="input-group-prepend">
         <span class="input-group-text"><label for="staticUser" class="mb-0"><i class="fa fa-user"></i></label></span>
       </div>
-      <input id="staticUser" type="text" readonly class="form-control" value="<TMPL_VAR NAME=LOGIN>" />
+      <input id="staticUser" type="text" readonly class="form-control" value="<TMPL_VAR NAME=LOGIN ESCAPE=HTML>" />
     </div>
     </TMPL_IF>
 
diff --git a/lemonldap-ng-portal/site/templates/bootstrap/standardform.tpl b/lemonldap-ng-portal/site/templates/bootstrap/standardform.tpl
index 38e38e20f..fc99a375a 100644
--- a/lemonldap-ng-portal/site/templates/bootstrap/standardform.tpl
+++ b/lemonldap-ng-portal/site/templates/bootstrap/standardform.tpl
@@ -10,16 +10,16 @@
     <div class="input-group-prepend">
       <span class="input-group-text"><label for="userfield" class="mb-0"><i class="fa fa-user"></i></label></span>
     </div>
-    <input id="userfield" name="user" type="text" class="form-control" value="<TMPL_VAR NAME="LOGIN">" trplaceholder="login" required aria-required="true"/>
+    <input id="userfield" name="user" type="text" class="form-control" value="<TMPL_VAR NAME="LOGIN" ESCAPE=HTML>" trplaceholder="login" required aria-required="true" <TMPL_UNLESS NAME="LOGIN">autofocus</TMPL_UNLESS>/>
   </div>
   <div class="input-group mb-3">
     <div class="input-group-prepend">
       <span class="input-group-text"><label for="passwordfield" class="mb-0"><i class="fa fa-lock"></i></label></span>
     </div>
     <TMPL_IF NAME="DONT_STORE_PASSWORD">
-      <input id="passwordfield" name="password" type="text" class="form-control key" autocomplete="off" required aria-required="true" aria-hidden="true"/>
+      <input id="passwordfield" name="password" type="text" class="form-control key" autocomplete="off" required aria-required="true" aria-hidden="true" <TMPL_IF NAME="LOGIN">autofocus</TMPL_IF>/>
     <TMPL_ELSE>
-      <input id="passwordfield" name="password" type="password" class="form-control" trplaceholder="password" required aria-required="true"/>
+      <input id="passwordfield" name="password" type="password" class="form-control" trplaceholder="password" required aria-required="true" <TMPL_IF NAME="LOGIN">autofocus</TMPL_IF>/>
     </TMPL_IF>
   </div>
 
diff --git a/lemonldap-ng-portal/site/templates/common/mail_2fcode.tpl b/lemonldap-ng-portal/site/templates/common/mail_2fcode.tpl
index b91add955..d78fa4e31 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_2fcode.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_2fcode.tpl
@@ -1,10 +1,10 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <span>
-<span trspan="hello">Hello</span> $cn,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="session_cn" ESCAPE=HTML>,<br />
 <br />
 <span trspan="yourLoginCodeIs">Your login code is</span>
-<b>$code</b><br/>
+<b><TMPL_VAR NAME="code" ESCAPE=HTML></b><br/>
 </span>
 
 <TMPL_INCLUDE NAME="mail_footer.tpl">
diff --git a/lemonldap-ng-portal/site/templates/common/mail_certificateConfirm.tpl b/lemonldap-ng-portal/site/templates/common/mail_certificateConfirm.tpl
index 871cf16a0..57d23b4d7 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_certificateConfirm.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_certificateConfirm.tpl
@@ -1,10 +1,10 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <p>
-<span trspan="hello">Hello</span> $cn,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="session_cn" ESCAPE=HTML>,<br />
 <br />
 <span><img src="cid:arrow:../common/bullet_go.png" alt="go"/></span>
-<a href="$url" style="text-decoration:none;color:orange;">
+<a href="<TMPL_VAR NAME="url" ESCAPE=HTML>" style="text-decoration:none;color:orange;">
 <span trspan="click2ResetCertificate">Click here to reset your certificate</span>
 </a>
 </p>
diff --git a/lemonldap-ng-portal/site/templates/common/mail_certificateReset.tpl b/lemonldap-ng-portal/site/templates/common/mail_certificateReset.tpl
index df463ec7a..c6cef2b18 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_certificateReset.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_certificateReset.tpl
@@ -1,7 +1,7 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <p>
-<span trspan="hello">Hello</span> $cn,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="session_cn" ESCAPE=HTML>,<br />
 <br />
 <span trspan="resetCertificateOK">Your certificate has been successfully reset!</span> 
 </p>
diff --git a/lemonldap-ng-portal/site/templates/common/mail_confirm.tpl b/lemonldap-ng-portal/site/templates/common/mail_confirm.tpl
index 85a56b30a..383511bb8 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_confirm.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_confirm.tpl
@@ -1,10 +1,10 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <p>
-<span trspan="hello">Hello</span> $cn,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="session_cn" ESCAPE=HTML>,<br />
 <br />
 <span><img src="cid:arrow:../common/bullet_go.png" alt="go"/></span>
-<a href="$url" style="text-decoration:none;color:orange;">
+<a href="<TMPL_VAR NAME="url" ESCAPE=HTML>" style="text-decoration:none;color:orange;">
 <span trspan="click2Reset">Click here to reset your password</span>
 </a>
 </p>
diff --git a/lemonldap-ng-portal/site/templates/common/mail_footer.tpl b/lemonldap-ng-portal/site/templates/common/mail_footer.tpl
index c5cd433da..d951c7918 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_footer.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_footer.tpl
@@ -4,7 +4,7 @@
 <p>
 <span trspan="autoMail">This mail was sent automatically</span><br />
 <span trspan="requestIssuedFromIP">The request was issued from IP</span>
-$ipAddr
+<TMPL_VAR NAME="session_ipAddr" ESCAPE=HTML>
 </p>
 </div>
 
diff --git a/lemonldap-ng-portal/site/templates/common/mail_password.tpl b/lemonldap-ng-portal/site/templates/common/mail_password.tpl
index 19f7b3932..56e85c0a2 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_password.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_password.tpl
@@ -1,12 +1,12 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <p>
-<span trspan="hello">Hello</span> $cn,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="session_cn" ESCAPE=HTML>,<br />
 <br />
 <TMPL_IF NAME="RESET">
 <span trspan="newPwdIs">Your new password is</span> 
 <span><img src="cid:key:../common/key.png" alt="key"/></span>
-<b>$password</b>
+<b><TMPL_VAR NAME="password" ESCAPE=HTML></b>
 <TMPL_ELSE>
 <span trspan="pwdChanged">Your password has been successfully changed!</span> 
 </TMPL_IF>
diff --git a/lemonldap-ng-portal/site/templates/common/mail_register_confirm.tpl b/lemonldap-ng-portal/site/templates/common/mail_register_confirm.tpl
index 1a7fdb14a..954ee1dff 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_register_confirm.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_register_confirm.tpl
@@ -1,10 +1,10 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <p>
-<span trspan="hello">Hello</span> $firstname $lastname,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="firstname" ESCAPE=HTML> <TMPL_VAR NAME="lastname" ESCAPE=HTML>,<br />
 <br />
 <span><img src="cid:arrow:../common/bullet_go.png" alt="go"/></span>
-<a href="$url" style="text-decoration:none;color:orange;">
+<a href="<TMPL_VAR NAME="url" ESCAPE=HTML>" style="text-decoration:none;color:orange;">
 <span trspan="click2Register">Click here to confirm your account registration</span>
 </a>
 </p>
diff --git a/lemonldap-ng-portal/site/templates/common/mail_register_done.tpl b/lemonldap-ng-portal/site/templates/common/mail_register_done.tpl
index 5b9326cf8..36b07bc5f 100644
--- a/lemonldap-ng-portal/site/templates/common/mail_register_done.tpl
+++ b/lemonldap-ng-portal/site/templates/common/mail_register_done.tpl
@@ -1,19 +1,19 @@
 <TMPL_INCLUDE NAME="mail_header.tpl">
 
 <p>
-<span trspan="hello">Hello</span> $firstname $lastname,<br />
+<span trspan="hello">Hello</span> <TMPL_VAR NAME="firstname" ESCAPE=HTML> <TMPL_VAR NAME="lastname" ESCAPE=HTML>,<br />
 <br />
 <span trspan="accountCreated">Your account was successfully created.</span>
 <br /> 
 <br /> 
 <span trspan="yourLoginIs">Your login is</span> 
 <span><img src="cid:key:../common/bullet_go.png" alt="go"/></span>
-<b>$login</b>
+<b><TMPL_VAR NAME="login" ESCAPE=HTML></b>
 <br /> 
 <span trspan="pwdIs">Your password is</span> 
 <span><img src="cid:key:../common/key.png" alt="key"/></span>
-<b>$password</b>
+<b><TMPL_VAR NAME="password" ESCAPE=HTML></b>
 </p>
-<p><a href="$url"><span trspan="goToPortal">Click here to access to portal</span></a></p>
+<p><a href="<TMPL_VAR NAME="url" ESCAPE=HTML>"><span trspan="goToPortal">Click here to access to portal</span></a></p>
 
 <TMPL_INCLUDE NAME="mail_footer.tpl">
diff --git a/lemonldap-ng-portal/site/templates/common/script.tpl b/lemonldap-ng-portal/site/templates/common/script.tpl
index 9b6dfd9c6..d08308a52 100644
--- a/lemonldap-ng-portal/site/templates/common/script.tpl
+++ b/lemonldap-ng-portal/site/templates/common/script.tpl
@@ -20,7 +20,6 @@
  {
  "displaytab":"<TMPL_VAR NAME="DISPLAY_TAB">",
  "choicetab":"<TMPL_VAR NAME="CHOICE_VALUE">",
- "login":"<TMPL_VAR NAME="LOGIN">",
  "newwindow":<TMPL_VAR NAME="NEWWINDOW" DEFAULT="0">,
  "appslistorder":"<TMPL_VAR NAME="APPSLIST_ORDER">",
  "scriptname":"<TMPL_VAR NAME="SCRIPT_NAME">",
diff --git a/lemonldap-ng-portal/t/01-Reject-Hashes-in-URL.t b/lemonldap-ng-portal/t/01-Reject-Hashes-in-URL.t
new file mode 100644
index 000000000..839f882c5
--- /dev/null
+++ b/lemonldap-ng-portal/t/01-Reject-Hashes-in-URL.t
@@ -0,0 +1,29 @@
+use Test::More;
+use strict;
+use IO::String;
+use MIME::Base64;
+
+require 't/test-lib.pm';
+
+my $res;
+
+my $client = LLNG::Manager::Test->new(
+    { ini => { logLevel => 'error', useSafeJail => 1 } } );
+
+ok(
+    $res = $client->_get(
+        '/',
+        query => 'url='
+          . encode_base64( 'http://bad.com#test.example.llng', '' )
+    ),
+    'Try http://bad.com#test.example.llng'
+);
+expectReject($res);
+ok( $res->[2]->[0] =~ /37/, 'Rejected with PE_BADURL' )
+  or print STDERR Dumper( $res->[2]->[0] );
+
+count(2);
+
+clean_sessions();
+
+done_testing( count() );
diff --git a/lemonldap-ng-portal/t/03-XSS-protection.t b/lemonldap-ng-portal/t/03-XSS-protection.t
index 032481593..5886ba8f9 100644
--- a/lemonldap-ng-portal/t/03-XSS-protection.t
+++ b/lemonldap-ng-portal/t/03-XSS-protection.t
@@ -19,21 +19,25 @@ my @tests = (
     '' => 0, 'Empty',
 
     # 2 http://test1.example.com/
-    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29tLw==' => 1, 'Protected virtual host',
+    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29tLw==' => 'http://test1.example.com/',
+    'Protected virtual host',
 
     # 3 http://test1.example.com
-    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29t' => 1, 'Missing / in URL',
+    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29t' => 'http://test1.example.com',
+    'Missing / in URL',
 
     # 4 http://test1.example.com:8000/test
-    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29tOjgwMDAvdGVzdA==' => 1,
+    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29tOjgwMDAvdGVzdA==' =>
+      'http://test1.example.com:8000/test',
     'Non default port',
 
     # 5 http://test1.example.com:8000/
-    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29tOjgwMDAv' => 1,
+    'aHR0cDovL3Rlc3QxLmV4YW1wbGUuY29tOjgwMDAv' =>
+      'http://test1.example.com:8000/',
     'Non default port with missing /',
 
     # 6 http://t.example2.com/test
-    'aHR0cDovL3QuZXhhbXBsZTIuY29tL3Rlc3Q=' => 1,
+    'aHR0cDovL3QuZXhhbXBsZTIuY29tL3Rlc3Q=' => 'http://t.example2.com/test',
     'Undeclared virtual host in trusted domain',
 
     # 7 http://testexample2.com/
@@ -47,7 +51,7 @@ my @tests = (
       . ' "example3.com" is trusted, but domain "*.example3.com" not)',
 
     # 9 http://example3.com/
-    'aHR0cDovL2V4YW1wbGUzLmNvbS8K' => 1,
+    'aHR0cDovL2V4YW1wbGUzLmNvbS8K' => 'http://example3.com/',
     'Undeclared virtual host with trusted domain name',
 
     # 10 http://t.example.com/test
@@ -80,6 +84,26 @@ my @tests = (
       => 0,
     'base64 encoded HTML tags',
 
+    # Make sure userinfo does not confuse URL parsing (#2832)
+    # https://test1.example.com:test@hacker.com
+    'aHR0cHM6Ly90ZXN0MS5leGFtcGxlLmNvbTp0ZXN0QGhhY2tlci5jb20=' => 0,
+    'userinfo trick',
+
+    # 22 url=https://hacker.com\@@test1.example.com/
+    'aHR0cHM6Ly9oYWNrZXIuY29tXEBAdGVzdDEuZXhhbXBsZS5jb20v' =>
+      'https://hacker.com%5C@@test1.example.com/',
+    'Good reencoding (2931)',
+
+    # 23 url=https://hacker.com:\@@test1.example.com/
+    'aHR0cHM6Ly9oYWNrZXIuY29tOlxAQHRlc3QxLmV4YW1wbGUuY29tLw==' =>
+      'https://hacker.com:%5C@@test1.example.com/',
+    'Good reencoding (2931)',
+
+    # 24 url='https://hacker.com\anything@test1.example.com/'
+    'aHR0cHM6Ly9oYWNrZXIuY29tXGFueXRoaW5nQHRlc3QxLmV4YW1wbGUuY29tLw==' =>
+      'https://hacker.com%5Canything@test1.example.com/',
+    'Good reencoding (2931)',
+
     # LOGOUT TESTS
     'LOGOUT',
 
@@ -90,7 +114,7 @@ my @tests = (
 
     # 19 url=http://www.toto.com/, good referer
     'aHR0cDovL3d3dy50b3RvLmNvbS8=',
-    'http://test1.example.com/' => 1,
+    'http://test1.example.com/' => 'http://www.toto.com/',
     'Logout required by good site',
 
     # 20 url=http://www?<script>, good referer
@@ -125,10 +149,13 @@ while ( defined( my $url = shift(@tests) ) ) {
         ),
         $detail
     );
-    ok( ( $res->[0] == ( $redir ? 302 : 200 ) ),
-        ( $redir ? 'Get redirection' : 'Redirection dropped' ) )
-      or explain( $res->[0], ( $redir ? 302 : 200 ) );
-    count(2);
+    if ($redir) {
+        expectRedirection( $res, $redir );
+    }
+    else {
+        expectOK($res);
+    }
+    count(1);
 }
 
 while ( defined( my $url = shift(@tests) ) ) {
@@ -146,9 +173,12 @@ while ( defined( my $url = shift(@tests) ) ) {
         ),
         $detail
     );
-    ok( ( $res->[0] == ( $redir ? 302 : 200 ) ),
-        ( $redir ? 'Get redirection' : 'Redirection dropped' ) )
-      or explain( $res->[0], ( $redir ? 302 : 200 ) );
+    if ($redir) {
+        expectRedirection( $res, $redir );
+    }
+    else {
+        expectOK($res);
+    }
     ok(
         $res = $client->_post(
             '/',
@@ -159,7 +189,7 @@ while ( defined( my $url = shift(@tests) ) ) {
     );
     expectOK($res);
     $id = expectCookie($res);
-    count(3);
+    count(2);
 }
 
 clean_sessions();
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-OP-logout.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-OP-logout.t
index ca7f88984..6683cd676 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-OP-logout.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-OP-logout.t
@@ -228,6 +228,8 @@ sub op {
                           'http://auth.rp.com/oidc/logout',
                         oidcRPMetaDataOptionsLogoutType            => 'front',
                         oidcRPMetaDataOptionsLogoutSessionRequired => 0,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-public_client.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-public_client.t
index 2af4180b5..e27296057 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-public_client.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-public_client.t
@@ -338,7 +338,9 @@ sub op {
                         oidcRPMetaDataOptionsUserIDAttr            => "",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-authchoice.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-authchoice.t
index ce21beeb5..d3cdb2788 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-authchoice.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-authchoice.t
@@ -292,7 +292,9 @@ sub op {
                         oidcRPMetaDataOptionsUserIDAttr        => "",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-info.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-info.t
index 3ec8b1676..04c38a493 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-info.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-info.t
@@ -342,7 +342,9 @@ sub op {
                         oidcRPMetaDataOptionsUserIDAttr        => "",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-none-alg.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-none-alg.t
index 55697bfc2..6ca4ee248 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-none-alg.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code-with-none-alg.t
@@ -334,7 +334,9 @@ sub op {
                         oidcRPMetaDataOptionsUserIDAttr        => "",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code.t
index 20d841fb0..915c66eae 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-authorization_code.t
@@ -337,6 +337,8 @@ sub op {
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
                           "http://auth.rp.com/?logout=1"
                     }
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-hybrid.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-hybrid.t
index 017b5f61c..f96061557 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-hybrid.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-hybrid.t
@@ -255,7 +255,9 @@ sub op {
                         oidcRPMetaDataOptionsBypassConsent     => 1,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit-no-token.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit-no-token.t
index c05babd13..5861fad3e 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit-no-token.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit-no-token.t
@@ -237,7 +237,9 @@ sub op {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit.t b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit.t
index 3b23dc842..20d8f7721 100644
--- a/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit.t
+++ b/lemonldap-ng-portal/t/32-Auth-and-issuer-OIDC-implicit.t
@@ -253,7 +253,9 @@ sub op {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F-UpgradeOnly.t b/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F-UpgradeOnly.t
index 3a7972958..81ec2d56d 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F-UpgradeOnly.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F-UpgradeOnly.t
@@ -362,7 +362,9 @@ sub op {
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsAuthnLevel            => 5,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F.t b/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F.t
index 5b1ae3c9c..5e6685916 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Code-Flow-with-2F.t
@@ -362,7 +362,9 @@ sub op {
                         oidcRPMetaDataOptionsUserIDAttr        => "",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.rp.com/?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-OIDC-Hooks.t b/lemonldap-ng-portal/t/32-OIDC-Hooks.t
index ead6125c4..f16907daf 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Hooks.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Hooks.t
@@ -57,6 +57,7 @@ my $op = LLNG::Manager::Test->new( {
                     oidcRPMetaDataOptionsUserIDAttr            => "",
                     oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                     oidcRPMetaDataOptionsBypassConsent         => 1,
+                    oidcRPMetaDataOptionsRedirectUris => 'http://rp2.com/',
                 },
                 oauth => {
                     oidcRPMetaDataOptionsDisplayName  => "oauth",
diff --git a/lemonldap-ng-portal/t/32-OIDC-Macro.t b/lemonldap-ng-portal/t/32-OIDC-Macro.t
index 54197e7e1..d214b7d69 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Macro.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Macro.t
@@ -136,6 +136,7 @@ sub op {
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "custom_sub",
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris => 'http://rp.com/',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-OIDC-Offline-Session.t b/lemonldap-ng-portal/t/32-OIDC-Offline-Session.t
index 2f600327a..c0c8a8c96 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Offline-Session.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Offline-Session.t
@@ -60,7 +60,7 @@ my $op = LLNG::Manager::Test->new( {
                     oidcRPMetaDataOptionsIDTokenForceClaims    => 1,
                     oidcRPMetaDataOptionsAdditionalAudiences =>
                       "http://my.extra.audience/test urn:extra2",
-
+                      oidcRPMetaDataOptionsRedirectUris => 'http://test/',
                 }
             },
             oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-OIDC-Refresh-Token.t b/lemonldap-ng-portal/t/32-OIDC-Refresh-Token.t
index 1449b0af8..8f21a44e3 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Refresh-Token.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Refresh-Token.t
@@ -56,6 +56,7 @@ my $op = LLNG::Manager::Test->new( {
                     oidcRPMetaDataOptionsIDTokenForceClaims    => 1,
                     oidcRPMetaDataOptionsAdditionalAudiences =>
                       "http://my.extra.audience/test urn:extra2",
+                    oidcRPMetaDataOptionsRedirectUris => 'http://test/',
                 }
             },
             oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/32-OIDC-Token-Introspection.t b/lemonldap-ng-portal/t/32-OIDC-Token-Introspection.t
index 0eecdf68a..ff3b1e112 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Token-Introspection.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Token-Introspection.t
@@ -57,6 +57,7 @@ my $op = LLNG::Manager::Test->new( {
                     oidcRPMetaDataOptionsUserIDAttr            => "",
                     oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                     oidcRPMetaDataOptionsBypassConsent         => 1,
+                    oidcRPMetaDataOptionsRedirectUris => 'http://rp2.com/',
                 },
                 oauth => {
                     oidcRPMetaDataOptionsDisplayName  => "oauth",
diff --git a/lemonldap-ng-portal/t/32-OIDC-Token-Security.t b/lemonldap-ng-portal/t/32-OIDC-Token-Security.t
index 9b8e90b09..cd4632239 100644
--- a/lemonldap-ng-portal/t/32-OIDC-Token-Security.t
+++ b/lemonldap-ng-portal/t/32-OIDC-Token-Security.t
@@ -57,6 +57,7 @@ my $op = LLNG::Manager::Test->new( {
                     oidcRPMetaDataOptionsUserIDAttr            => "",
                     oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                     oidcRPMetaDataOptionsBypassConsent         => 1,
+                    oidcRPMetaDataOptionsRedirectUris => 'http://rp.com/',
                 },
                 rp2 => {
                     oidcRPMetaDataOptionsDisplayName           => "RP2",
@@ -67,7 +68,8 @@ my $op = LLNG::Manager::Test->new( {
                     oidcRPMetaDataOptionsUserIDAttr            => "",
                     oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                     oidcRPMetaDataOptionsBypassConsent         => 1,
-                    oidcRPMetaDataOptionsRule => '$uid eq "dwho"',
+                    oidcRPMetaDataOptionsRule         => '$uid eq "dwho"',
+                    oidcRPMetaDataOptionsRedirectUris => 'http://rp2.com/',
                 }
             },
             oidcOPMetaDataOptions           => {},
@@ -104,7 +106,7 @@ my $idpId = expectCookie($res);
 
 # Try to get code for RP1 with invalide scope name
 $query =
-"response_type=code&scope=openid%20profile%20email%22&client_id=rpid&state=af0ifjsldkj&redirect_uri=http%3A%2F%2Frp2.com%2F";
+"response_type=code&scope=openid%20profile%20email%22&client_id=rpid&state=af0ifjsldkj&redirect_uri=http%3A%2F%2Frp.com%2F";
 ok(
     $res = $op->_get(
         "/oauth2/authorize",
@@ -119,7 +121,7 @@ expectPortalError( $res, 24, "Invalid scope" );
 #
 # Get code for RP1
 $query =
-"response_type=code&scope=openid%20profile%20email&client_id=rpid&state=af0ifjsldkj&redirect_uri=http%3A%2F%2Frp2.com%2F";
+"response_type=code&scope=openid%20profile%20email&client_id=rpid&state=af0ifjsldkj&redirect_uri=http%3A%2F%2Frp.com%2F";
 ok(
     $res = $op->_get(
         "/oauth2/authorize",
@@ -131,7 +133,7 @@ ok(
 );
 count(1);
 
-my ($code) = expectRedirection( $res, qr#http://rp2\.com/.*code=([^\&]*)# );
+my ($code) = expectRedirection( $res, qr#http://rp\.com/.*code=([^\&]*)# );
 
 # Play code on RP2
 $query =
diff --git a/lemonldap-ng-portal/t/35-REST-auth-password-server.t b/lemonldap-ng-portal/t/35-REST-auth-password-server.t
new file mode 100644
index 000000000..7e60e65ad
--- /dev/null
+++ b/lemonldap-ng-portal/t/35-REST-auth-password-server.t
@@ -0,0 +1,126 @@
+use Test::More;
+use strict;
+use IO::String;
+use MIME::Base64;
+use JSON;
+
+require 't/test-lib.pm';
+
+my $res;
+
+my $client = LLNG::Manager::Test->new( {
+        ini => {
+            logLevel           => 'error',
+            useSafeJail        => 1,
+            requireToken       => 1,
+            restAuthServer     => 1,
+            restPasswordServer => 1,
+            authentication     => 'Combination',
+            userDB             => 'Same',
+
+            combination => '[K,Dm] or [Dm]',
+            combModules => {
+                K => {
+                    for  => 1,
+                    type => 'Kerberos',
+                },
+                Dm => {
+                    for  => 0,
+                    type => 'Demo',
+                },
+            },
+            krbKeytab => '/etc/keytab',
+            krbByJs   => 1,
+        }
+    }
+);
+
+# Test pwdConfirm endpoint
+
+my $res = expectJSON(
+    postJSON(
+        $client,
+        "/proxy/pwdConfirm",
+        {
+            user     => "dwho",
+            password => "dwho",
+        }
+    )
+);
+
+is( $res->{result}, 1, "Correct password is accepted" );
+count(1);
+
+my $res = expectJSON(
+    postJSON(
+        $client,
+        "/proxy/pwdConfirm",
+        {
+            user     => "waldo",
+            password => "dwho",
+        }
+    )
+);
+
+is( $res->{result}, 0, "Incorrect user is rejected" );
+count(1);
+
+my $res = expectJSON(
+    postJSON(
+        $client,
+        "/proxy/pwdConfirm",
+        {
+            user     => "dwho",
+            password => "wrongpass",
+        }
+    )
+);
+
+is( $res->{result}, 0, "Incorrect password is rejected" );
+count(1);
+
+# Test getUser endpoint
+# Existing user
+my $res = expectJSON(
+    postJSON(
+        $client,
+        "/proxy/getUser",
+        {
+            user => "dwho",
+        }
+    )
+);
+is( $res->{result},               1,            "Correct result" );
+is( $res->{info}->{cn},           "Doctor Who", "Correct attributes" );
+is( $res->{info}->{_whatToTrace}, "dwho",       "Correct macro" );
+count(3);
+
+# Missing user
+my $res = expectJSON(
+    postJSON(
+        $client,
+        "/proxy/getUser",
+        {
+            user => "notfound",
+        }
+    )
+);
+is( $res->{result}, 0,     "Correct result" );
+is( $res->{info},   undef, "No attributes" );
+count(2);
+
+clean_sessions();
+
+done_testing( count() );
+
+sub postJSON {
+    my ( $portal, $url, $payload ) = @_;
+    my $string_payload = to_json($payload);
+    return $portal->_post(
+        $url,
+        IO::String->new($string_payload),
+        accept => 'application/json',
+        type   => 'application/json',
+        length => length($string_payload)
+    );
+}
diff --git a/lemonldap-ng-portal/t/35-REST-sessions-with-AuthBasic-handler-with-2FA.t b/lemonldap-ng-portal/t/35-REST-sessions-with-AuthBasic-handler-with-2FA.t
new file mode 100644
index 000000000..cb212cd37
--- /dev/null
+++ b/lemonldap-ng-portal/t/35-REST-sessions-with-AuthBasic-handler-with-2FA.t
@@ -0,0 +1,276 @@
+use warnings;
+use lib 'inc';
+use strict;
+use File::Temp 'tempdir';
+use IO::String;
+use JSON;
+use MIME::Base64;
+use Test::More;
+
+no warnings 'once';
+
+our $debug     = 'error';
+our $maintests = 51;
+my ( $p, $res, $spId );
+$| = 1;
+
+$LLNG::TMPDIR = tempdir( 'tmpSessionXXXXX', DIR => 't/sessions', CLEANUP => 1 );
+
+require 't/separate-handler.pm';
+
+require "t/test-lib.pm";
+
+SKIP: {
+    eval { require Convert::Base32 };
+    if ($@) {
+        skip 'Convert::Base32 is missing', $maintests;
+    }
+    eval { require Authen::OATH };
+    if ($@) {
+        skip 'Authen::OATH is missing', $maintests;
+    }
+
+    ok( $p = issuer(), 'Issuer portal' );
+
+    # BEGIN TESTS
+    ok( $res = handler( req => [ GET => 'http://test2.example.com/' ] ),
+        'Simple request to handler' );
+    ok(
+        getHeader( $res, 'WWW-Authenticate' ) eq 'Basic realm="LemonLDAP::NG"',
+        'Get WWW-Authenticate header'
+    );
+
+    my $subtest = 0;
+    foreach my $user (qw(dwho)) {
+        ok( $res = $p->_get( '/', accept => 'text/html' ), 'Get Menu', );
+        my ( $host, $url, $query ) =
+          expectForm( $res, '#', undef, 'user', 'password' );
+
+        $query =~ s/user=/user=dwho/;
+        $query =~ s/password=/password=dwho/;
+        ok(
+            $res = $p->_post(
+                '/',
+                IO::String->new($query),
+                length => length($query),
+                accept => 'text/html',
+            ),
+            'Auth query'
+        );
+        my $id = expectCookie($res);
+        expectRedirection( $res, 'http://auth.idp.com' );
+
+        # TOTP form
+        ok(
+            $res = $p->_get(
+                '/2fregisters',
+                cookie => "lemonldap=$id",
+                accept => 'text/html',
+            ),
+            'Form registration'
+        );
+        expectRedirection( $res, qr#/2fregisters/totp$# );
+        ok(
+            $res = $p->_get(
+                '/2fregisters/totp',
+                cookie => "lemonldap=$id",
+                accept => 'text/html',
+            ),
+            'Form registration'
+        );
+        ok( $res->[2]->[0] =~ /totpregistration\.(?:min\.)?js/,
+            'Found TOTP js' );
+
+        # JS query
+        ok(
+            $res = $p->_post(
+                '/2fregisters/totp/getkey',
+                IO::String->new(''),
+                cookie => "lemonldap=$id",
+                length => 0,
+                custom => {
+                    HTTP_X_CSRF_CHECK => 1,
+                },
+            ),
+            'Get new key'
+        );
+        eval { $res = JSON::from_json( $res->[2]->[0] ) };
+        ok( not($@), 'Content is JSON' )
+          or explain( $res->[2]->[0], 'JSON content' );
+        my ( $key, $token );
+        ok( $key   = $res->{secret}, 'Found secret' );
+        ok( $token = $res->{token},  'Found token' );
+        $key = Convert::Base32::decode_base32($key);
+
+        # Post code
+        my $code;
+        ok( $code = Lemonldap::NG::Common::TOTP::_code( undef, $key, 0, 30, 6 ),
+            'Code' );
+        ok( $code =~ /^\d{6}$/, 'Code contains 6 digits' );
+
+        my $s = "code=$code&token=$token";
+        ok(
+            $res = $p->_post(
+                '/2fregisters/totp/verify',
+                IO::String->new($s),
+                length => length($s),
+                cookie => "lemonldap=$id",
+                custom => {
+                    HTTP_X_CSRF_CHECK => 1,
+                },
+            ),
+            'Post code'
+        );
+        eval { $res = JSON::from_json( $res->[2]->[0] ) };
+        ok( not($@), 'Content is JSON' )
+          or explain( $res->[2]->[0], 'JSON content' );
+        ok( $res->{result} == 1, 'Key is registered' );
+        ok( $res = $p->_get( '/', accept => 'text/html' ), 'Get Menu', );
+        ( $host, $url, $query ) =
+          expectForm( $res, '#', undef, 'user', 'password' );
+
+        $query =~ s/user=/user=dwho/;
+        $query =~ s/password=/password=dwho/;
+        ok(
+            $res = $p->_post(
+                '/',
+                IO::String->new($query),
+                length => length($query),
+                accept => 'text/html',
+            ),
+            'Auth query'
+        );
+        ( $host, $url, $query ) = expectForm( $res, undef, '/totp2fcheck' );
+
+        ok(
+            $res = handler(
+                req => [
+                    GET => 'http://test2.example.com/',
+                    [
+                        'Authorization' => 'Basic '
+                          . encode_base64( "$user:$user", '' )
+                    ]
+                ],
+                sub => sub {
+                    my ($res) = @_;
+                    $subtest++;
+                    subtest 'REST request to Portal' => sub {
+                        plan tests => 2;
+                        ok( $res->[0] eq 'POST', 'Get POST request' );
+                        my ( $url, $query ) = split /\?/, $res->[1];
+                        ok(
+                            $res = $p->_post(
+                                $url, IO::String->new( $res->[3] ),
+                                length => length( $res->[3] ),
+                                query  => $query,
+                            ),
+                            'Push request to portal'
+                        );
+                        return $res;
+                    };
+                    return $res;
+                },
+            ),
+            'AuthBasic request'
+        );
+        ok( $res->[0] == 401, "Authentication rejected" );
+    }
+    ok( $subtest == 1, 'REST requests were done by handler' );
+
+    $subtest = 0;
+    foreach my $user (qw(dwho)) {
+        ok(
+            $res = handler(
+                req => [
+                    GET => 'http://test2.example.com/',
+                    [
+                        'Authorization' => 'Basic '
+                          . encode_base64( "$user:$user", '' )
+                    ]
+                ],
+                sub => sub {
+                    my ($res) = @_;
+                    $subtest++;
+                    subtest 'REST request to Portal' => sub {
+                        plan tests => 2;
+                        ok( $res->[0] eq 'POST', 'Get POST request' );
+                        my ( $url, $query ) = split /\?/, $res->[1];
+                        ok(
+                            $res = $p->_post(
+                                $url, IO::String->new( $res->[3] ),
+                                length => length( $res->[3] ),
+                                query  => $query,
+                            ),
+                            'Push request to portal'
+                        );
+                        return $res;
+                    };
+                    return $res;
+                },
+            ),
+            'New AuthBasic request'
+        );
+        ok( $subtest == 1,    'Handler used its local cache' );
+        ok( $res->[0] == 401, 'Authentication rejected a second time' );
+    }
+
+    foreach my $user (qw(rtyler)) {
+        ok(
+            $res = handler(
+                req => [
+                    GET => 'http://test2.example.com/',
+                    [
+                        'Authorization' => 'Basic '
+                          . encode_base64( "$user:$user", '' )
+                    ]
+                ],
+                sub => sub {
+                    my ($res) = @_;
+                    $subtest++;
+                    subtest 'REST request to Portal' => sub {
+                        plan tests => 2;
+                        ok( $res->[0] eq 'POST', 'Get POST request' );
+                        my ( $url, $query ) = split /\?/, $res->[1];
+                        ok(
+                            $res = $p->_post(
+                                $url, IO::String->new( $res->[3] ),
+                                length => length( $res->[3] ),
+                                query  => $query,
+                            ),
+                            'Push request to portal'
+                        );
+                        return $res;
+                    };
+                    return $res;
+                },
+            ),
+            'New AuthBasic request'
+        );
+        ok( $subtest == 2, 'Portal was called a second time' );
+        is( $res->[0], 200,
+            '2FA did not trigger for rtyler because of ENV rule' );
+    }
+
+    end_handler();
+    clean_sessions();
+}
+done_testing();
+
+sub issuer {
+    return LLNG::Manager::Test->new( {
+            ini => {
+                logLevel          => $debug,
+                domain            => 'idp.com',
+                portal            => 'http://auth.idp.com',
+                authentication    => 'Demo',
+                userDB            => 'Same',
+                restSessionServer => 1,
+                totp2fActivation  =>
+                  'has2f("TOTP") and ($uid eq "dwho" or not $ENV{AuthBasic})',
+                totp2fSelfRegistration => 1,
+                totp2fRange            => 2,
+                totp2fAuthnLevel       => 5,
+            }
+        }
+    );
+}
diff --git a/lemonldap-ng-portal/t/36-Combination-with-TOTP.t b/lemonldap-ng-portal/t/36-Combination-with-TOTP.t
index 5cb7e3471..1f6ad5d8f 100644
--- a/lemonldap-ng-portal/t/36-Combination-with-TOTP.t
+++ b/lemonldap-ng-portal/t/36-Combination-with-TOTP.t
@@ -81,6 +81,9 @@ SKIP: {
             '/2fregisters/totp/getkey', IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -104,6 +107,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/37-Issuer-Timeout.t b/lemonldap-ng-portal/t/37-Issuer-Timeout.t
index 7bb11214e..50dc6a235 100644
--- a/lemonldap-ng-portal/t/37-Issuer-Timeout.t
+++ b/lemonldap-ng-portal/t/37-Issuer-Timeout.t
@@ -182,7 +182,9 @@ sub op {
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsBypassConsent         => 1,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp.com/?logout=1"
+                          "http://auth.rp.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://rp.example.com/',
                     },
                     rp2 => {
                         oidcRPMetaDataOptionsDisplayName       => "RP",
@@ -195,7 +197,9 @@ sub op {
                         oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
                         oidcRPMetaDataOptionsBypassConsent         => 1,
                         oidcRPMetaDataOptionsPostLogoutRedirectUris =>
-                          "http://auth.rp2.com/?logout=1"
+                          "http://auth.rp2.com/?logout=1",
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://rp2.example.com/',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/37-Logout-from-OIDC-RP-to-SAML-SP.t b/lemonldap-ng-portal/t/37-Logout-from-OIDC-RP-to-SAML-SP.t
index 26e55a987..eec826c2f 100644
--- a/lemonldap-ng-portal/t/37-Logout-from-OIDC-RP-to-SAML-SP.t
+++ b/lemonldap-ng-portal/t/37-Logout-from-OIDC-RP-to-SAML-SP.t
@@ -356,7 +356,9 @@ sub op {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET-with-WAYF.t b/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET-with-WAYF.t
index 4feb42a79..e2f60d9c5 100644
--- a/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET-with-WAYF.t
+++ b/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET-with-WAYF.t
@@ -377,7 +377,9 @@ sub sp {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET.t b/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET.t
index b8c640518..c703df09a 100644
--- a/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET.t
+++ b/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-GET.t
@@ -357,7 +357,9 @@ sub sp {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-POST.t b/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-POST.t
index 50d0c5cd3..b1e1c834c 100644
--- a/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-POST.t
+++ b/lemonldap-ng-portal/t/37-OIDC-RP-to-SAML-IdP-POST.t
@@ -359,7 +359,9 @@ sub sp {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.rp.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/37-SAML-SP-GET-to-OIDC-OP.t b/lemonldap-ng-portal/t/37-SAML-SP-GET-to-OIDC-OP.t
index de63b61ac..1929224ff 100644
--- a/lemonldap-ng-portal/t/37-SAML-SP-GET-to-OIDC-OP.t
+++ b/lemonldap-ng-portal/t/37-SAML-SP-GET-to-OIDC-OP.t
@@ -295,7 +295,9 @@ sub op {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris          =>
+                          'http://auth.proxy.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/37-SAML-SP-POST-to-OIDC-OP.t b/lemonldap-ng-portal/t/37-SAML-SP-POST-to-OIDC-OP.t
index 095924cdc..7e589d306 100644
--- a/lemonldap-ng-portal/t/37-SAML-SP-POST-to-OIDC-OP.t
+++ b/lemonldap-ng-portal/t/37-SAML-SP-POST-to-OIDC-OP.t
@@ -294,7 +294,9 @@ sub op {
                         oidcRPMetaDataOptionsBypassConsent     => 0,
                         oidcRPMetaDataOptionsClientSecret      => "rpsecret",
                         oidcRPMetaDataOptionsUserIDAttr        => "",
-                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600
+                        oidcRPMetaDataOptionsAccessTokenExpiration => 3600,
+                        oidcRPMetaDataOptionsRedirectUris =>
+                          'http://auth.proxy.com?openidconnectcallback=1',
                     }
                 },
                 oidcOPMetaDataOptions           => {},
diff --git a/lemonldap-ng-portal/t/38-No-persistent-session.t b/lemonldap-ng-portal/t/38-No-persistent-session.t
index bf74360f2..42f5f268d 100644
--- a/lemonldap-ng-portal/t/38-No-persistent-session.t
+++ b/lemonldap-ng-portal/t/38-No-persistent-session.t
@@ -100,6 +100,9 @@ SKIP: {
             '/2fregisters/totp/getkey', IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -123,6 +126,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/61-AdaptativeAuthenticationLevel.t b/lemonldap-ng-portal/t/61-AdaptativeAuthenticationLevel.t
index dcacae271..b766aa098 100644
--- a/lemonldap-ng-portal/t/61-AdaptativeAuthenticationLevel.t
+++ b/lemonldap-ng-portal/t/61-AdaptativeAuthenticationLevel.t
@@ -37,17 +37,23 @@ ok(
 count(1);
 $id = expectCookie($res);
 
+my $session = getSession($id)->data;
+is( $session->{uid}, 'dwho', 'uid found' ) or explain( $json, "uid='dwho'" );
+is( $session->{authenticationLevel}, 3, 'Authentication level upgraded' );
+count(2);
+
 ok(
     $res = $client->_get(
-        '/session/my/global', cookie => "lemonldap=$id"
+        '/refresh', cookie => "lemonldap=$id"
     ),
     'Get session'
 );
 count(1);
-$json = expectJSON($res);
 
-ok( $json->{authenticationLevel} == 3, 'Authentication level upgraded' );
-count(1);
+$session = getSession($id)->data;
+is( $session->{uid}, 'dwho', 'uid found' ) or explain( $json, "uid='dwho'" );
+is( $session->{authenticationLevel}, 3, 'Authentication level upgraded' );
+count(2);
 
 ok( $client->logout($id), 'Logout' );
 count(1);
@@ -64,16 +70,8 @@ ok(
 count(1);
 $id = expectCookie($res);
 
-ok(
-    $res = $client->_get(
-        '/session/my/global', cookie => "lemonldap=$id"
-    ),
-    'Get session'
-);
-count(1);
-$json = expectJSON($res);
-
-ok( $json->{authenticationLevel} == 5, 'Authentication level upgraded' );
+$session = getSession($id)->data;
+ok( $session->{authenticationLevel} == 5, 'Authentication level upgraded' );
 count(1);
 
 ok( $client->logout($id), 'Logout' );
diff --git a/lemonldap-ng-portal/t/61-BruteForceProtection-with-Incremental-lockTimes-and-TOTP.t b/lemonldap-ng-portal/t/61-BruteForceProtection-with-Incremental-lockTimes-and-TOTP.t
index 8daea995e..d1ce08c79 100644
--- a/lemonldap-ng-portal/t/61-BruteForceProtection-with-Incremental-lockTimes-and-TOTP.t
+++ b/lemonldap-ng-portal/t/61-BruteForceProtection-with-Incremental-lockTimes-and-TOTP.t
@@ -51,6 +51,9 @@ SKIP: {
             '/2fregisters/totp/getkey', IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -75,6 +78,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/64-StayConnected-with-2F-and-History.t b/lemonldap-ng-portal/t/64-StayConnected-with-2F-and-History.t
index 7be28c4a3..b125719c1 100644
--- a/lemonldap-ng-portal/t/64-StayConnected-with-2F-and-History.t
+++ b/lemonldap-ng-portal/t/64-StayConnected-with-2F-and-History.t
@@ -156,9 +156,13 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -184,6 +188,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/65-CheckState.t b/lemonldap-ng-portal/t/65-CheckState.t
index af8af02e6..e399a30fb 100644
--- a/lemonldap-ng-portal/t/65-CheckState.t
+++ b/lemonldap-ng-portal/t/65-CheckState.t
@@ -8,10 +8,25 @@ my $res;
 my $client = LLNG::Manager::Test->new( {
         ini => {
             logLevel         => 'error',
-            authentication   => 'Demo',
+            requireToken     => 1,
             checkStateSecret => 'x',
             checkState       => 1,
+            authentication   => 'Combination',
             userDB           => 'Same',
+
+            combination => '[K,Dm] or [Dm]',
+            combModules => {
+                K => {
+                    for  => 1,
+                    type => 'Kerberos',
+                },
+                Dm => {
+                    for  => 0,
+                    type => 'Demo',
+                },
+            },
+            krbKeytab => '/etc/keytab',
+            krbByJs   => 1,
         }
     }
 );
diff --git a/lemonldap-ng-portal/t/67-CheckUser.t b/lemonldap-ng-portal/t/67-CheckUser.t
index 076685547..9457c6c62 100644
--- a/lemonldap-ng-portal/t/67-CheckUser.t
+++ b/lemonldap-ng-portal/t/67-CheckUser.t
@@ -128,6 +128,9 @@ ok(
         '/2fregisters/totp/getkey', IO::String->new(''),
         cookie => "lemonldap=$id",
         length => 0,
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Get new key'
 );
@@ -151,6 +154,9 @@ ok(
         IO::String->new($s),
         length => length($s),
         cookie => "lemonldap=$id",
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Post code'
 );
@@ -182,6 +188,9 @@ ok(
         '/totp2fcheck',
         IO::String->new($query),
         length => length($query),
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Post code'
 );
diff --git a/lemonldap-ng-portal/t/68-ContextSwitching-with-2F-allowed.t b/lemonldap-ng-portal/t/68-ContextSwitching-with-2F-allowed.t
index fa7b3f6f2..3d5d590cb 100644
--- a/lemonldap-ng-portal/t/68-ContextSwitching-with-2F-allowed.t
+++ b/lemonldap-ng-portal/t/68-ContextSwitching-with-2F-allowed.t
@@ -98,9 +98,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -124,6 +128,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -362,9 +369,13 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id2",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -381,6 +392,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=1234567890"),
             length => 16,
             cookie => "lemonldap=$id2",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete TOTP query'
     );
@@ -399,6 +413,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id2",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -448,6 +465,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=1234567890"),
             length => 16,
             cookie => "lemonldap=$id2",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete U2F key query'
     );
diff --git a/lemonldap-ng-portal/t/68-ContextSwitching-with-2F.t b/lemonldap-ng-portal/t/68-ContextSwitching-with-2F.t
index d95300187..2190876f2 100644
--- a/lemonldap-ng-portal/t/68-ContextSwitching-with-2F.t
+++ b/lemonldap-ng-portal/t/68-ContextSwitching-with-2F.t
@@ -98,9 +98,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -124,6 +128,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -359,9 +366,13 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id2",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -378,6 +389,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=1234567890"),
             length => 16,
             cookie => "lemonldap=$id2",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete TOTP query'
     );
@@ -397,6 +411,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id2",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -447,6 +464,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=1234567890"),
             length => 16,
             cookie => "lemonldap=$id2",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete U2F key query'
     );
diff --git a/lemonldap-ng-portal/t/68-ContextSwitching-with-TOTP-and-Notification.t b/lemonldap-ng-portal/t/68-ContextSwitching-with-TOTP-and-Notification.t
index 84229a9bc..bb99bc936 100644
--- a/lemonldap-ng-portal/t/68-ContextSwitching-with-TOTP-and-Notification.t
+++ b/lemonldap-ng-portal/t/68-ContextSwitching-with-TOTP-and-Notification.t
@@ -64,6 +64,9 @@ ok(
         '/2fregisters/totp/getkey', IO::String->new(''),
         cookie => "lemonldap=$id",
         length => 0,
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Get new key'
 );
@@ -88,6 +91,9 @@ ok(
         IO::String->new($s),
         length => length($s),
         cookie => "lemonldap=$id",
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Post code'
 );
@@ -145,6 +151,9 @@ ok(
         '/2fregisters/totp/getkey', IO::String->new(''),
         cookie => "lemonldap=$id",
         length => 0,
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Get new key'
 );
@@ -168,6 +177,9 @@ ok(
         IO::String->new($s),
         length => length($s),
         cookie => "lemonldap=$id",
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Post code'
 );
@@ -368,6 +380,9 @@ ok(
         '/totp2fcheck',
         IO::String->new($query),
         length => length($query),
+        custom => {
+            HTTP_X_CSRF_CHECK => 1,
+        },
     ),
     'Post code'
 );
diff --git a/lemonldap-ng-portal/t/68-Impersonation-with-2F.t b/lemonldap-ng-portal/t/68-Impersonation-with-2F.t
index 99c2cafbc..775a4767f 100644
--- a/lemonldap-ng-portal/t/68-Impersonation-with-2F.t
+++ b/lemonldap-ng-portal/t/68-Impersonation-with-2F.t
@@ -78,9 +78,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -106,6 +110,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -300,9 +307,13 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -319,6 +330,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=1234567890"),
             length => 16,
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete TOTP query'
     );
@@ -338,6 +352,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -388,6 +405,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=1234567890"),
             length => 16,
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete U2F key query'
     );
diff --git a/lemonldap-ng-portal/t/68-Impersonation-with-TOTP.t b/lemonldap-ng-portal/t/68-Impersonation-with-TOTP.t
index 013743fc4..5c7270f88 100644
--- a/lemonldap-ng-portal/t/68-Impersonation-with-TOTP.t
+++ b/lemonldap-ng-portal/t/68-Impersonation-with-TOTP.t
@@ -104,9 +104,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -131,6 +135,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-8-with-global-storage.t b/lemonldap-ng-portal/t/70-2F-TOTP-8-with-global-storage.t
index 2e15c0b25..7a3082c7e 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-8-with-global-storage.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-8-with-global-storage.t
@@ -77,6 +77,9 @@ SKIP: {
             '/2fregisters/totp/getkey', IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -100,6 +103,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-and-U2F-with-TTL-and-JSON.t b/lemonldap-ng-portal/t/70-2F-TOTP-and-U2F-with-TTL-and-JSON.t
index f453907d4..e37c9794a 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-and-U2F-with-TTL-and-JSON.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-and-U2F-with-TTL-and-JSON.t
@@ -65,9 +65,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -91,6 +95,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -115,10 +122,14 @@ SKIP: {
     # Ajax registration request
     ok(
         $res = $client->_post(
-            '/2fregisters/u/register', IO::String->new(''),
+            '/2fregisters/u/register',
+            IO::String->new(''),
             accept => 'application/json',
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get registration challenge'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-with-History-and-Refresh.t b/lemonldap-ng-portal/t/70-2F-TOTP-with-History-and-Refresh.t
index 6c2fff498..778143d8d 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-with-History-and-Refresh.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-with-History-and-Refresh.t
@@ -63,9 +63,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -89,6 +93,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-with-Range.t b/lemonldap-ng-portal/t/70-2F-TOTP-with-Range.t
index a9efd1edd..3ef5115ca 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-with-Range.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-with-Range.t
@@ -70,9 +70,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -97,6 +101,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-JSON.t b/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-JSON.t
index b488e9384..d6babd800 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-JSON.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-JSON.t
@@ -70,9 +70,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -96,6 +100,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-XML.t b/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-XML.t
index d90498745..7319d461a 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-XML.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL-and-XML.t
@@ -74,9 +74,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -100,6 +104,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL.t b/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL.t
index b4d12be91..cb1667e1a 100644
--- a/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL.t
+++ b/lemonldap-ng-portal/t/70-2F-TOTP-with-TTL.t
@@ -77,9 +77,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -107,6 +111,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -135,6 +142,9 @@ SKIP: {
         $res = $client->_post(
             '/totp2fcheck', IO::String->new($query),
             length => length($query),
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F-with-History.t b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F-with-History.t
index 37644efbf..8a7d9b435 100644
--- a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F-with-History.t
+++ b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F-with-History.t
@@ -68,9 +68,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -94,6 +98,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F.t b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F.t
index 3502c0e8d..2babbefd0 100644
--- a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F.t
+++ b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-and-U2F.t
@@ -70,9 +70,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -96,6 +100,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -135,6 +142,9 @@ SKIP: {
             '/2fregisters',
             cookie => "lemonldap=$id",
             accept => 'text/html',
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Form registration'
     );
diff --git a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only-with-History.t b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only-with-History.t
index 2ac4b7d59..23c32c1fb 100644
--- a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only-with-History.t
+++ b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only-with-History.t
@@ -60,9 +60,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -86,6 +90,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only.t b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only.t
index 881f9db97..e5bf6980f 100644
--- a/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only.t
+++ b/lemonldap-ng-portal/t/73-2F-UTOTP-TOTP-only.t
@@ -57,9 +57,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -83,6 +87,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/74-2F-Required.t b/lemonldap-ng-portal/t/74-2F-Required.t
index e02404669..ae2e3d0d7 100644
--- a/lemonldap-ng-portal/t/74-2F-Required.t
+++ b/lemonldap-ng-portal/t/74-2F-Required.t
@@ -54,9 +54,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => $pdata,
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -80,6 +84,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => $pdata,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
diff --git a/lemonldap-ng-portal/t/75-2F-Registers.t b/lemonldap-ng-portal/t/75-2F-Registers.t
index 6bb3d5644..409a742df 100644
--- a/lemonldap-ng-portal/t/75-2F-Registers.t
+++ b/lemonldap-ng-portal/t/75-2F-Registers.t
@@ -93,9 +93,13 @@ SKIP: {
     # JS query
     ok(
         $res = $client->_post(
-            '/2fregisters/totp/getkey', IO::String->new(''),
+            '/2fregisters/totp/getkey',
+            IO::String->new(''),
             cookie => "lemonldap=$id",
             length => 0,
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Get new key'
     );
@@ -119,6 +123,9 @@ SKIP: {
             IO::String->new($s),
             length => length($s),
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Post code'
     );
@@ -307,6 +314,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=$1"),
             length => 16,
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete TOTP query'
     );
@@ -350,6 +360,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=$1"),
             length => 16,
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete U2F key query'
     );
@@ -439,6 +452,7 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
         ),
         'Push U2F signature'
     );
+    $id = expectCookie($res);
     ok(
         $res = $client->_get(
             '/2fregisters',
@@ -462,6 +476,9 @@ JjTJecOOS+88fK8qL1TrYv5rapIdqUI7aQ==
             IO::String->new("epoch=$1"),
             length => 16,
             cookie => "lemonldap=$id",
+            custom => {
+                HTTP_X_CSRF_CHECK => 1,
+            },
         ),
         'Delete U2F key query'
     );
diff --git a/lemonldap-ng-portal/t/test-lib.pm b/lemonldap-ng-portal/t/test-lib.pm
index 193a8902c..d84b90c5b 100644
--- a/lemonldap-ng-portal/t/test-lib.pm
+++ b/lemonldap-ng-portal/t/test-lib.pm
@@ -184,6 +184,23 @@ sub getCache {
     );
 }
 
+sub getSession {
+    my $id = shift;
+    $id = $ENV{LLNG_HASHED_SESSION_STORE} ? id2storage($id) : $id;
+    my @sessionsOpts = (
+        storageModule        => "Apache::Session::File",
+        storageModuleOptions => {
+            Directory     => "$tmpDir",
+            LockDirectory => "$tmpDir/lock",
+        },
+        kind => 'SSO'
+    );
+    return Lemonldap::NG::Common::Session->new( {
+            @sessionsOpts, id => $id,
+        }
+    );
+}
+
 =head4 expectRedirection( $res, $location )
 
 Verify that request result is a redirection to $location. $location can be:
